=FunctionName: s121
=result: 1
=corr_graph s121
=src_tfg
=TFG_LLVM llvm.s121:
=TFG:
=Nodes: L0%0%1 Lfor.cond%1%0 Lfor.cond%2%1 Lfor.body%1%1 Lfor.end%1%1 E0%0%1
=Edges:
Lfor.end%1%1 => E0%0%1
Lfor.cond%2%1 => Lfor.body%1%1
Lfor.cond%2%1 => Lfor.end%1%1
L0%0%1 => Lfor.cond%1%0
Lfor.cond%1%0 => Lfor.cond%2%1
Lfor.body%1%1 => Lfor.cond%1%0
=graph done
=Node outputs: E0%0%1
=Output: symbol.2.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : retaddr_const : BV:32
=Output: symbol.1.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : 0 : BV:32
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Node outputs done for E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : a : 128000 : 16 : 0
C_SYMBOL2 : b : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=state_end

=Node assumes and asserts: L0%0%1
=L0%0%1 assume predicate_set done
=L0%0%1 assert predicate_set done
=Node assumes and asserts: Lfor.cond%1%0
=Lfor.cond%1%0 assume predicate_set done
=Lfor.cond%1%0 assert predicate_set done
=Node assumes and asserts: Lfor.cond%2%1
=Lfor.cond%2%1 assume predicate_set done
=Lfor.cond%2%1 assert predicate_set done
=Node assumes and asserts: Lfor.body%1%1
=Lfor.body%1%1 assume predicate_set done
=Lfor.body%1%1 assert predicate_set done
=Node assumes and asserts: Lfor.end%1%1
=Lfor.end%1%1 assume predicate_set done
=Lfor.end%1%1 assert predicate_set done
=Node assumes and asserts: E0%0%1
=E0%0%1 assume predicate_set done
=E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.llvm.s121.0 : memlabel-mem-symbol.1.0
=memlabel_map.1
mlvar.llvm.s121.1 : memlabel-mem-symbol.2.0
=memlabel_map.2
mlvar.llvm.s121.2 : memlabel-mem-symbol.1.0
=Edge: Lfor.end%1%1 => E0%0%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:1:  ret i32 0, !dbg !34

=Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)

=Edge: Lfor.cond%2%1 => Lfor.end%1%1
=Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)

=Edge: L0%0%1 => Lfor.cond%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))

=Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)

=Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>Lentry%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%1=>Lentry%1%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100003=>Lentry%1%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100004=>Lentry%1%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100005=>Lentry%1%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100006=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%0=>Lfor.cond%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%0=>Lfor.cond%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%1=>Lfor.cond%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.cond%2%100003
1 : input.src.llvm-%cmp : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.cond%2%100005
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.body%1%1
1 : input.src.llvm-%cmp : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.end%1%1
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100003=>Lfor.cond%2%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100004=>Lfor.body%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100005=>Lfor.cond%2%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100006=>Lfor.end%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%1=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%1=>Lfor.body%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%2%1=>Lfor.body%2%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%2%100003=>Lfor.body%2%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%2%100004=>Lfor.body%2%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%2%100005=>Lfor.body%3%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%1=>Lfor.body%3%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%100003=>Lfor.body%4%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%4%1=>Lfor.body%4%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%4%100003=>Lfor.body%4%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%4%100004=>Lfor.body%4%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%4%100005=>Lfor.body%5%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%5%1=>Lfor.body%5%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%5%100003=>Lfor.body%6%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%6%1=>Lfor.body%7%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%1=>Lfor.body%7%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%100003=>Lfor.body%7%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%100004=>Lfor.body%7%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%100005=>Lfor.body%8%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%8%1=>Lfor.body%9%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%9%1=>Lfor.body%9%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%9%100003=>Lfor.body%9%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%9%100004=>Lfor.inc%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.end%1%1=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%1%1=>Lfor.inc%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%1=>Lfor.inc%2%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100003=>Lfor.inc%2%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100004=>Lfor.inc%2%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100005=>Lfor.inc%2%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100006=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>Lentry%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>Lfor.cond%1%0
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%1=>Lentry%1%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100003=>Lentry%1%100004
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100004=>Lentry%1%100005
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100005=>Lentry%1%100006
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100006=>Lfor.cond%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%0=>Lfor.cond%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%0=>Lfor.cond%2%1
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%1=>Lfor.cond%2%1
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.cond%2%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.cond%2%100005
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.body%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.end%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100003=>Lfor.cond%2%100004
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100004=>Lfor.body%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100005=>Lfor.cond%2%100006
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100006=>Lfor.end%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%1=>Lfor.cond%1%0
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(3, 5, 6) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : memlabel-mem-symbol.2.0 : MEMLABEL
13 : symbol.2 : BV:32
14 : bvadd(13, 6) : BV:32
15 : select(1, 12, 14, 9, 10) : BV:32
16 : bvadd(11, 15) : BV:32
17 : store(1, 2, 7, 16, 9, 10) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(2, 1) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(2, 1) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(5, 4) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(5, 4) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : symbol.2 : BV:32
13 : bvadd(12, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : bvadd(10, 14) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%1=>Lfor.body%2%1
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%2%1=>Lfor.body%2%100003
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%2%100003=>Lfor.body%2%100004
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : input.src.llvm-%add : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%add : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%2%100004=>Lfor.body%2%100005
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%2%100005=>Lfor.body%3%1
=src.llvm-%arrayidx
1 : input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%1=>Lfor.body%3%100003
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%arrayidx : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%100003=>Lfor.body%4%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%4%1=>Lfor.body%4%100003
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%4%100003=>Lfor.body%4%100004
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%4%100004=>Lfor.body%4%100005
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%4%100005=>Lfor.body%5%1
=src.llvm-%arrayidx1
1 : input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%5%1=>Lfor.body%5%100003
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : input.src.llvm-%arrayidx1 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%5%100003=>Lfor.body%6%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%6%1=>Lfor.body%7%1
=src.llvm-%add2
1 : input.src.llvm-%0 : BV:32
2 : input.src.llvm-%1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%1=>Lfor.body%7%100003
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%100003=>Lfor.body%7%100004
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%100004=>Lfor.body%7%100005
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%100005=>Lfor.body%8%1
=src.llvm-%arrayidx3
1 : input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%8%1=>Lfor.body%9%1
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset : BV:32
4 : input.src.llvm-%add2 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%9%1=>Lfor.body%9%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%9%100003=>Lfor.body%9%100004
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%9%100004=>Lfor.inc%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.end%1%1=>E0%0%1
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%1%1=>Lfor.inc%2%1
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%1=>Lfor.inc%2%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100003=>Lfor.inc%2%100004
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%inc : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100004=>Lfor.inc%2%100005
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100005=>Lfor.inc%2%100006
=src.llvm-%i.0
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100006=>Lfor.cond%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lentry%1%1
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lentry%1%1 done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%1=>Lentry%1%100003
=graph_with_simplified_assets.simplified_assumes at Lentry%1%1=>Lentry%1%100003 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100003=>Lentry%1%100004
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100003=>Lentry%1%100004 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100004=>Lentry%1%100005
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100004=>Lentry%1%100005 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100005=>Lentry%1%100006
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100005=>Lentry%1%100006 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%1=>Lfor.cond%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%1=>Lfor.cond%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.body%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.body%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.end%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.end%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100003=>Lfor.cond%2%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100003=>Lfor.cond%2%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100004=>Lfor.body%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100004=>Lfor.body%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100005=>Lfor.cond%2%100006
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100005=>Lfor.cond%2%100006 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100006=>Lfor.end%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100006=>Lfor.end%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 0
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : bvadd(2, 4) : BV:32
7 : isgepoffset(5, 6) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 1
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 2
1 : 0 : BV:32
2 : 4 : BV:64
3 : input.src.llvm-%i.0 : BV:32
4 : 1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 32 : INT
7 : bvsign_ext(5, 6) : BV:64
8 : bvmul(2, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 6) : BV:32
11 : eq(1, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 3
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 4
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : islangaligned(5, 6) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 5
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 6
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : islangaligned(5, 6) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 7
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : islangaligned(5, 6) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 8
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 9
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 10
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003 assume# 0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100003=>Lfor.body%2%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100003=>Lfor.body%2%100004 assume# 0
1 : symbol.1 : BV:32
2 : input.src.llvm-%add : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100003=>Lfor.body%2%100004 assume# 1
1 : 0 : BV:32
2 : input.src.llvm-%add : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100003=>Lfor.body%2%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100004=>Lfor.body%2%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100004=>Lfor.body%2%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100005=>Lfor.body%3%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100005=>Lfor.body%3%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003 assume# 0
1 : input.src.llvm-%arrayidx : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100003=>Lfor.body%4%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100003=>Lfor.body%4%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%4%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%4%100003 assume# 0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%4%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%4%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%100003=>Lfor.body%4%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%100003=>Lfor.body%4%100004 assume# 0
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%100003=>Lfor.body%4%100004 assume# 1
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%100003=>Lfor.body%4%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%100004=>Lfor.body%4%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%100004=>Lfor.body%4%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%100005=>Lfor.body%5%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%100005=>Lfor.body%5%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%5%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%5%100003 assume# 0
1 : input.src.llvm-%arrayidx1 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%5%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100003=>Lfor.body%6%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100003=>Lfor.body%6%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%1=>Lfor.body%7%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%1=>Lfor.body%7%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%7%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%7%100003 assume# 0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%7%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%7%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100003=>Lfor.body%7%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100003=>Lfor.body%7%100004 assume# 0
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100003=>Lfor.body%7%100004 assume# 1
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100003=>Lfor.body%7%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100004=>Lfor.body%7%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100004=>Lfor.body%7%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100005=>Lfor.body%8%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100005=>Lfor.body%8%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%8%1=>Lfor.body%9%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%8%1=>Lfor.body%9%1 assume# 0
1 : input.src.llvm-%arrayidx3 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%8%1=>Lfor.body%9%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%1=>Lfor.body%9%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%1=>Lfor.body%9%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%100003=>Lfor.body%9%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%100003=>Lfor.body%9%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%100004=>Lfor.inc%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%100004=>Lfor.inc%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%1=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%1=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%1%1=>Lfor.inc%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%1%1=>Lfor.inc%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%1=>Lfor.inc%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%1=>Lfor.inc%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100003=>Lfor.inc%2%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100003=>Lfor.inc%2%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100004=>Lfor.inc%2%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100004=>Lfor.inc%2%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100005=>Lfor.inc%2%100006
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100005=>Lfor.inc%2%100006 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lentry%1%1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lentry%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1026
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1027
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%1=>Lentry%1%100003
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%1=>Lentry%1%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004 for loc_id 1027
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100004=>Lentry%1%100005
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100004=>Lentry%1%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006 for loc_id 1026
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1 for loc_id 1014
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1 for loc_id 1014
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.body%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.body%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.end%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.end%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100003=>Lfor.cond%2%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100003=>Lfor.cond%2%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100004=>Lfor.body%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100004=>Lfor.body%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100005=>Lfor.cond%2%100006
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100005=>Lfor.cond%2%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100006=>Lfor.end%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100006=>Lfor.end%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1002
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(5, 4) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1003
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1004
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1005
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(2, 1) : BV:32
4 : bvadd(1, 3) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1006
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1007
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1008
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(2, 1) : BV:32
4 : bvadd(1, 3) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1009
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1010
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(5, 4) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : symbol.2 : BV:32
13 : bvadd(12, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : bvadd(10, 14) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1011
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1012
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1013
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1015
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1016
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1017
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1018
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1019
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1020
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1021
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1022
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1023
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1024
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1026
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1027
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1028
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1034
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(3, 5, 6) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : memlabel-mem-symbol.2.0 : MEMLABEL
13 : symbol.2 : BV:32
14 : bvadd(13, 6) : BV:32
15 : select(1, 12, 14, 9, 10) : BV:32
16 : bvadd(11, 15) : BV:32
17 : store(1, 2, 7, 16, 9, 10) : ARRAY[BV:32 -> BV:8]
18 : memmask(17, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%2%1 for loc_id 1009
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003 for loc_id 1004
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003 for loc_id 1007
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100003=>Lfor.body%2%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100003=>Lfor.body%2%100004 for loc_id 1005
1 : input.src.llvm-%add : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100003=>Lfor.body%2%100004 for loc_id 1008
1 : input.src.llvm-%add : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100003=>Lfor.body%2%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100004=>Lfor.body%2%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100004=>Lfor.body%2%100005 for loc_id 1006
1 : symbol.1 : BV:32
2 : input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100004=>Lfor.body%2%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100005=>Lfor.body%3%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100005=>Lfor.body%3%1 for loc_id 1011
1 : input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100005=>Lfor.body%3%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003 for loc_id 1002
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%arrayidx : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100003=>Lfor.body%4%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100003=>Lfor.body%4%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%4%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%4%100003 for loc_id 1020
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%4%100003 for loc_id 1023
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%4%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100003=>Lfor.body%4%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100003=>Lfor.body%4%100004 for loc_id 1021
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100003=>Lfor.body%4%100004 for loc_id 1024
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100003=>Lfor.body%4%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100004=>Lfor.body%4%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100004=>Lfor.body%4%100005 for loc_id 1022
1 : symbol.2 : BV:32
2 : input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100004=>Lfor.body%4%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100005=>Lfor.body%5%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100005=>Lfor.body%5%1 for loc_id 1012
1 : input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100005=>Lfor.body%5%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%5%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%5%100003 for loc_id 1003
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : input.src.llvm-%arrayidx1 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%5%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100003=>Lfor.body%6%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100003=>Lfor.body%6%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%7%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%7%1 for loc_id 1010
1 : input.src.llvm-%0 : BV:32
2 : input.src.llvm-%1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%7%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%7%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%7%100003 for loc_id 1015
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%7%100003 for loc_id 1018
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%7%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100003=>Lfor.body%7%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100003=>Lfor.body%7%100004 for loc_id 1016
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100003=>Lfor.body%7%100004 for loc_id 1019
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100003=>Lfor.body%7%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100004=>Lfor.body%7%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100004=>Lfor.body%7%100005 for loc_id 1017
1 : symbol.1 : BV:32
2 : input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100004=>Lfor.body%7%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100005=>Lfor.body%8%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100005=>Lfor.body%8%1 for loc_id 1013
1 : input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100005=>Lfor.body%8%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%8%1=>Lfor.body%9%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%8%1=>Lfor.body%9%1 for loc_id 1034
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%arrayidx3 : BV:32
4 : input.src.llvm-%add2 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%8%1=>Lfor.body%9%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%1=>Lfor.body%9%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%1=>Lfor.body%9%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%100003=>Lfor.body%9%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%100003=>Lfor.body%9%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%100004=>Lfor.inc%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%100004=>Lfor.inc%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1001
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1025
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1029
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1 for loc_id 1028
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%1=>Lfor.inc%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%1=>Lfor.inc%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004 for loc_id 1027
1 : input.src.llvm-%inc : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100004=>Lfor.inc%2%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100004=>Lfor.inc%2%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006 for loc_id 1026
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in llvm.s121
=Loc 1001 in llvm.s121.
LLVMVAR
llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Loc 1002 in llvm.s121.
LLVMVAR
src.llvm-%0
1 : input.src.llvm-%0 : BV:32
=Loc 1003 in llvm.s121.
LLVMVAR
src.llvm-%1
1 : input.src.llvm-%1 : BV:32
=Loc 1004 in llvm.s121.
LLVMVAR
src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset : BV:32
=Loc 1005 in llvm.s121.
LLVMVAR
src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset : BV:32
=Loc 1006 in llvm.s121.
LLVMVAR
src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset : BV:32
=Loc 1007 in llvm.s121.
LLVMVAR
src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset : BV:32
=Loc 1008 in llvm.s121.
LLVMVAR
src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset : BV:32
=Loc 1009 in llvm.s121.
LLVMVAR
src.llvm-%add
1 : input.src.llvm-%add : BV:32
=Loc 1010 in llvm.s121.
LLVMVAR
src.llvm-%add2
1 : input.src.llvm-%add2 : BV:32
=Loc 1011 in llvm.s121.
LLVMVAR
src.llvm-%arrayidx
1 : input.src.llvm-%arrayidx : BV:32
=Loc 1012 in llvm.s121.
LLVMVAR
src.llvm-%arrayidx1
1 : input.src.llvm-%arrayidx1 : BV:32
=Loc 1013 in llvm.s121.
LLVMVAR
src.llvm-%arrayidx3
1 : input.src.llvm-%arrayidx3 : BV:32
=Loc 1014 in llvm.s121.
LLVMVAR
src.llvm-%cmp
1 : input.src.llvm-%cmp : BOOL
=Loc 1015 in llvm.s121.
LLVMVAR
src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset : BV:32
=Loc 1016 in llvm.s121.
LLVMVAR
src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset : BV:32
=Loc 1017 in llvm.s121.
LLVMVAR
src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset : BV:32
=Loc 1018 in llvm.s121.
LLVMVAR
src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset : BV:32
=Loc 1019 in llvm.s121.
LLVMVAR
src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset : BV:32
=Loc 1020 in llvm.s121.
LLVMVAR
src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset : BV:32
=Loc 1021 in llvm.s121.
LLVMVAR
src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset : BV:32
=Loc 1022 in llvm.s121.
LLVMVAR
src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset : BV:32
=Loc 1023 in llvm.s121.
LLVMVAR
src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset : BV:32
=Loc 1024 in llvm.s121.
LLVMVAR
src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset : BV:32
=Loc 1025 in llvm.s121.
LLVMVAR
src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=Loc 1026 in llvm.s121.
LLVMVAR
src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
=Loc 1027 in llvm.s121.
LLVMVAR
src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=Loc 1028 in llvm.s121.
LLVMVAR
src.llvm-%inc
1 : input.src.llvm-%inc : BV:32
=Loc 1029 in llvm.s121.
LLVMVAR
src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Loc 1030 in llvm.s121.
REGMEM
econd
1 : input.econd : BOOL
=Loc 1031 in llvm.s121.
REGMEM
uset_visit_expr
1 : input.uset_visit_expr : BOOL
=Loc 1032 in llvm.s121.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1033 in llvm.s121.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1034 in llvm.s121.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.1.0
=Loc 1035 in llvm.s121.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.2.0

=Alias analysis results in llvm.s121
=Alias analysis result in llvm.s121 at L0%0%1
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1004 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1005 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1006 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1007 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1008 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1010 (input.src.llvm-%add2)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1011 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1012 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1013 (input.src.llvm-%arrayidx3)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1014 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1015 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1016 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1017 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1018 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1019 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1020 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1021 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1022 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1023 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1024 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1025 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1026 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1027 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1028 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1029 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1030 (input.econd)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1031 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s121 at L0%0%1 for loc 1035 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1004 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1005 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1006 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1007 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1008 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1010 (input.src.llvm-%add2)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1011 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1012 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1013 (input.src.llvm-%arrayidx3)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1014 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1015 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1016 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1017 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1018 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1019 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1020 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1021 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1022 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1023 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1024 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1025 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1026 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1027 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1028 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1029 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1030 (input.econd)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1031 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%1%0 for loc 1035 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1004 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1005 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1006 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1007 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1008 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1010 (input.src.llvm-%add2)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1011 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1012 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1013 (input.src.llvm-%arrayidx3)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1014 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1015 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1016 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1017 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1018 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1019 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1020 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1021 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1022 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1023 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1024 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1025 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1026 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1027 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1028 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1029 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1030 (input.econd)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1031 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s121 at Lfor.cond%2%1 for loc 1035 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1004 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1005 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1006 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1007 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1008 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1010 (input.src.llvm-%add2)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1011 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1012 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1013 (input.src.llvm-%arrayidx3)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1014 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1015 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1016 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1017 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1018 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1019 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1020 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1021 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1022 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1023 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1024 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1025 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1026 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1027 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1028 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1029 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1030 (input.econd)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1031 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s121 at Lfor.body%1%1 for loc 1035 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1004 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1005 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1006 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1007 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1008 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1010 (input.src.llvm-%add2)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1011 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1012 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1013 (input.src.llvm-%arrayidx3)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1014 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1015 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1016 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1017 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1018 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1019 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1020 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1021 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1022 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1023 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1024 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1025 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1026 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1027 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1028 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1029 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1030 (input.econd)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1031 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s121 at Lfor.end%1%1 for loc 1035 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s121 at E0%0%1
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1001 (input.llvm-%ret-reg)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1004 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1005 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1006 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1007 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1008 (input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1010 (input.src.llvm-%add2)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1011 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1012 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1013 (input.src.llvm-%arrayidx3)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1014 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1015 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1016 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1017 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1018 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1019 (input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1020 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1021 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1022 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1023 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1024 (input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1025 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1026 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1027 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1028 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1029 (input.src.llvm-indir_tgt)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1030 (input.econd)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1031 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s121 at E0%0%1 for loc 1035 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr

=Liveness in llvm.s121
=live locs at L0%0%1
1032, 1034, 1035
=live locs at Lfor.cond%1%0
1026, 1032, 1034, 1035
=live locs at Lfor.cond%2%1
1014, 1026, 1032, 1034, 1035
=live locs at Lfor.body%1%1
1026, 1032, 1034, 1035
=live locs at Lfor.end%1%1
1032, 1034, 1035
=live locs at E0%0%1
1032, 1034, 1035

=Available expressions in llvm.s121
=available expressions at L0%0%1 in llvm.s121
=avail_exprs begin
=avail_exprs end
=available expressions at Lfor.cond%1%0 in llvm.s121
=avail_exprs begin
=avail_exprs end
=available expressions at Lfor.cond%2%1 in llvm.s121
=avail_exprs begin
=loc 1014
=from_expr
17402 : input.src.llvm-%cmp : BOOL
=to_expr
17399 : input.src.llvm-%i.0 : BV:32
17400 : 31999 : BV:32
17401 : bvslt(17399, 17400) : BOOL
=avail_exprs end
=available expressions at Lfor.body%1%1 in llvm.s121
=avail_exprs begin
=loc 1014
=from_expr
17402 : input.src.llvm-%cmp : BOOL
=to_expr
17399 : input.src.llvm-%i.0 : BV:32
17400 : 31999 : BV:32
17401 : bvslt(17399, 17400) : BOOL
=avail_exprs end
=available expressions at Lfor.end%1%1 in llvm.s121
=avail_exprs begin
=loc 1014
=from_expr
17402 : input.src.llvm-%cmp : BOOL
=to_expr
17399 : input.src.llvm-%i.0 : BV:32
17400 : 31999 : BV:32
17401 : bvslt(17399, 17400) : BOOL
=avail_exprs end
=available expressions at E0%0%1 in llvm.s121
=avail_exprs begin
=loc 1001
=from_expr
17516 : input.llvm-%ret-reg : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1014
=from_expr
17402 : input.src.llvm-%cmp : BOOL
=to_expr
17399 : input.src.llvm-%i.0 : BV:32
17400 : 31999 : BV:32
17401 : bvslt(17399, 17400) : BOOL
=loc 1029
=from_expr
17523 : input.src.llvm-indir_tgt : BV:32
=to_expr
17387 : retaddr_const : BV:32
=avail_exprs end

=sprel_maps in llvm.s121
=sprel_map at L0%0%1 in llvm.s121
=sprel_map at Lfor.cond%1%0 in llvm.s121
=sprel_map at Lfor.cond%2%1 in llvm.s121
=sprel_map at Lfor.body%1%1 in llvm.s121
=sprel_map at Lfor.end%1%1 in llvm.s121
=sprel_map at E0%0%1 in llvm.s121
=loc 1001
17389 : 0 : BV:32
=loc 1029
17387 : retaddr_const : BV:32
=graph_with_aliasing_done
=String-contents:
=Nextpc-map:
=TFGdone
=PC_to_linename:
=pc
Lentry%1%1
=linename
(line 9 at column 8)
=pc
Lfor.cond%1%1
=linename
(line 9 at column 21)
=pc
Lfor.cond%2%1
=linename
(line 9 at column 3)
=pc
Lfor.body%1%1
=linename
line 10
=pc
Lfor.body%2%1
=linename
(line 11 at column 11)
=pc
Lfor.body%3%1
=linename
(line 11 at column 11)
=pc
Lfor.body%4%1
=linename
(line 11 at column 18)
=pc
Lfor.body%5%1
=linename
(line 11 at column 18)
=pc
Lfor.body%6%1
=linename
(line 11 at column 16)
=pc
Lfor.body%7%1
=linename
(line 11 at column 4)
=pc
Lfor.body%8%1
=linename
(line 11 at column 9)
=pc
Lfor.body%9%1
=linename
line 12
=pc
Lfor.end%1%1
=linename
line 13
=pc
Lfor.inc%1%1
=linename
(line 9 at column 31)
=pc
Lfor.inc%2%1
=linename
line 9
=PC_to_linename done
=PC_to_column_name:
=pc
Lentry%1%1
=column_name
 at column 8
=pc
Lfor.cond%1%1
=column_name
 at column 21
=pc
Lfor.cond%2%1
=column_name
 at column 3
=pc
Lfor.body%1%1
=column_name
 at column 10
=pc
Lfor.body%2%1
=column_name
 at column 11
=pc
Lfor.body%3%1
=column_name
 at column 11
=pc
Lfor.body%4%1
=column_name
 at column 18
=pc
Lfor.body%5%1
=column_name
 at column 18
=pc
Lfor.body%6%1
=column_name
 at column 16
=pc
Lfor.body%7%1
=column_name
 at column 4
=pc
Lfor.body%8%1
=column_name
 at column 9
=pc
Lfor.body%9%1
=column_name
 at column 3
=pc
Lfor.end%1%1
=column_name
 at column 2
=pc
Lfor.inc%1%1
=column_name
 at column 31
=pc
Lfor.inc%2%1
=column_name
 at column 3
=PC_to_column_name done
=PC_to_line_and_column:
=pc
Lentry%1%1
=line_and_column
line 9
=pc
Lfor.cond%1%1
=line_and_column
line 9
=pc
Lfor.cond%2%1
=line_and_column
line 9
=pc
Lfor.body%1%1
=line_and_column
line 10
=pc
Lfor.body%2%1
=line_and_column
line 11
=pc
Lfor.body%3%1
=line_and_column
line 11
=pc
Lfor.body%4%1
=line_and_column
line 11
=pc
Lfor.body%5%1
=line_and_column
line 11
=pc
Lfor.body%6%1
=line_and_column
line 11
=pc
Lfor.body%7%1
=line_and_column
line 11
=pc
Lfor.body%8%1
=line_and_column
line 11
=pc
Lfor.body%9%1
=line_and_column
line 12
=pc
Lfor.end%1%1
=line_and_column
line 13
=pc
Lfor.inc%1%1
=line_and_column
line 9
=pc
Lfor.inc%2%1
=line_and_column
line 9
=PC_to_line_and_column done
=SourceToLLVMVarnames:
=SourceToLLVMVarnames done
=InputLLVMToSourceVarnames:
input.src.llvm-%cmp : (i&lt;<sub>s</sub>31999)
input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset : (@b + bvmul(i, 4))
input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset : bvmul(i, 4)
input.src.llvm-%add : j
input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset : 0
input.src.llvm-%i.0.phi.tmpvar : 0
input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset : (@a + bvmul(j, 4))
input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset : bvmul(j, 4)
input.src.llvm-%arrayidx3 : (@a + bvmul(i, 4))
input.src.llvm-%arrayidx : (@a + bvmul(j, 4))
input.src.llvm-%arrayidx1 : (@b + bvmul(i, 4))
input.src.llvm-%add2 : (input.src.llvm-%0 + input.src.llvm-%1)
input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset : 0
input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset : (@a + bvmul(i, 4))
input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset : bvmul(i, 4)
input.src.llvm-%inc : i
input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset : 0
input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset : bvmul(i, 4)
input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset : 0
input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset : bvmul(i, 4)
input.src.llvm-indir_tgt : retaddr_const
input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset : 0
input.llvm-%ret-reg : 0
input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset : bvmul(j, 4)
input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset : 0
input.src.llvm-%i.0 : i
=InputLLVMToSourceVarnames done
=TFG_LLVM_done
=dst_tfg
=TFG:
=Nodes: L0%0%1 L1%1%0 L6%1%1 L7%1%0 E0%0%1
=Edges:
L6%1%1 => L1%1%0
L6%1%1 => L7%1%0
L0%0%1 => L1%1%0
L1%1%0 => L6%1%1
L7%1%0 => E0%0%1
=graph done
=Node outputs: E0%0%1
=Output: symbol.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=Output: symbol.1.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.dst.exreg.0.0 : BV:32
=Output: heap
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Node outputs done for E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : a : 128000 : 16 : 0
C_SYMBOL2 : b : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=dst.contains_float_op
1 : input.dst.contains_float_op : BOOL
=dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=dst.exreg.20.0
1 : input.dst.exreg.20.0 : BV:48
=dst.exreg.21.0
1 : input.dst.exreg.21.0 : BV:48
=dst.exreg.1.1
1 : input.dst.exreg.1.1 : BV:64
=dst.exreg.1.0
1 : input.dst.exreg.1.0 : BV:64
=dst.exreg.22.0
1 : input.dst.exreg.22.0 : BV:11
=dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=dst.invisible_regs.0
1 : input.dst.invisible_reg.0.0 : BV:8
=dst.contains_unsupported_op
1 : input.dst.contains_unsupported_op : BOOL
=dst.exreg.1.2
1 : input.dst.exreg.1.2 : BV:64
=dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=dst.invisible_regs.1
1 : input.dst.invisible_reg.0.1 : BV:8
=dst.exreg.2.6
1 : input.dst.exreg.2.6 : BV:128
=dst.exreg.4.4
1 : input.dst.exreg.4.4 : BV:80
=dst.exreg.4.5
1 : input.dst.exreg.4.5 : BV:80
=dst.exreg.4.6
1 : input.dst.exreg.4.6 : BV:80
=dst.exreg.4.7
1 : input.dst.exreg.4.7 : BV:80
=dst.exreg.5.0
1 : input.dst.exreg.5.0 : BV:16
=dst.exreg.5.1
1 : input.dst.exreg.5.1 : BV:16
=dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=dst.exreg.5.4
1 : input.dst.exreg.5.4 : BV:16
=dst.exreg.5.5
1 : input.dst.exreg.5.5 : BV:16
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=dst.exreg.4.1
1 : input.dst.exreg.4.1 : BV:80
=dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=dst.exreg.2.7
1 : input.dst.exreg.2.7 : BV:128
=dst.exreg.3.0
1 : input.dst.exreg.3.0 : BV:256
=dst.exreg.3.1
1 : input.dst.exreg.3.1 : BV:256
=dst.exreg.3.2
1 : input.dst.exreg.3.2 : BV:256
=dst.exreg.3.3
1 : input.dst.exreg.3.3 : BV:256
=dst.exreg.3.4
1 : input.dst.exreg.3.4 : BV:256
=dst.exreg.3.5
1 : input.dst.exreg.3.5 : BV:256
=dst.exreg.3.6
1 : input.dst.exreg.3.6 : BV:256
=dst.exreg.3.7
1 : input.dst.exreg.3.7 : BV:256
=dst.exreg.3.8
1 : input.dst.exreg.3.8 : BV:256
=dst.exreg.3.9
1 : input.dst.exreg.3.9 : BV:256
=dst.exreg.3.10
1 : input.dst.exreg.3.10 : BV:256
=dst.exreg.3.11
1 : input.dst.exreg.3.11 : BV:256
=dst.exreg.3.12
1 : input.dst.exreg.3.12 : BV:256
=dst.exreg.3.13
1 : input.dst.exreg.3.13 : BV:256
=dst.exreg.3.14
1 : input.dst.exreg.3.14 : BV:256
=dst.exreg.3.15
1 : input.dst.exreg.3.15 : BV:256
=dst.exreg.4.0
1 : input.dst.exreg.4.0 : BV:80
=dst.exreg.4.2
1 : input.dst.exreg.4.2 : BV:80
=dst.exreg.4.3
1 : input.dst.exreg.4.3 : BV:80
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=dst.exreg.0.1
1 : input.dst.exreg.0.1 : BV:32
=dst.exreg.1.3
1 : input.dst.exreg.1.3 : BV:64
=dst.exreg.1.4
1 : input.dst.exreg.1.4 : BV:64
=dst.exreg.1.5
1 : input.dst.exreg.1.5 : BV:64
=dst.exreg.1.6
1 : input.dst.exreg.1.6 : BV:64
=dst.exreg.1.7
1 : input.dst.exreg.1.7 : BV:64
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=dst.exreg.2.2
1 : input.dst.exreg.2.2 : BV:128
=dst.exreg.2.3
1 : input.dst.exreg.2.3 : BV:128
=dst.exreg.2.4
1 : input.dst.exreg.2.4 : BV:128
=dst.exreg.2.5
1 : input.dst.exreg.2.5 : BV:128
=dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=dst.exreg.17.0
1 : input.dst.exreg.17.0 : BV:16
=dst.exreg.19.0
1 : input.dst.exreg.19.0 : BV:16
=dst.exreg.18.0
1 : input.dst.exreg.18.0 : BV:16
=dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=state_end

=Node assumes and asserts: L0%0%1
=L0%0%1 assume predicate_set done
=L0%0%1 assert predicate_set done
=Node assumes and asserts: L1%1%0
=L1%1%0 assume predicate_set done
=L1%1%0 assert predicate_set done
=Node assumes and asserts: L6%1%1
=L6%1%1 assume predicate_set done
=L6%1%1 assert predicate_set done
=Node assumes and asserts: L7%1%0
=L7%1%0 assume predicate_set done
=L7%1%0 assert predicate_set done
=Node assumes and asserts: E0%0%1
=E0%0%1 assume predicate_set done
=E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.dst.0 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.1
mlvar.dst.1 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.2
mlvar.dst.10 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.3
mlvar.dst.11 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.4
mlvar.dst.12 : memlabel-mem-esp
=memlabel_map.5
mlvar.dst.13 : memlabel-mem-esp
=memlabel_map.6
mlvar.dst.2 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.7
mlvar.dst.3 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.8
mlvar.dst.4 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.9
mlvar.dst.5 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.10
mlvar.dst.6 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.11
mlvar.dst.7 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.12
mlvar.dst.8 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.13
mlvar.dst.9 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=Edge: L6%1%1 => L1%1%0
=Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:te_comment_not_implemented

=Edge: L6%1%1 => L7%1%0
=Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:te_comment_not_implemented

=Edge: L0%0%1 => L1%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)

=Edge: L1%1%0 => L6%1%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)

=Edge: L7%1%0 => E0%0%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127984 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 127988 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 10) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : bvadd(23, 14) : BV:32
33 : select(29, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : mlvar.dst.7 : MEMLABEL
36 : 127992 : BV:64
37 : bvextract(36, 5, 6) : BV:32
38 : bvadd(8, 37) : BV:32
39 : select(29, 35, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(34, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : bvadd(23, 37) : BV:32
46 : select(43, 44, 45, 16, 17) : BV:32
47 : bvzero_ext(46, 19) : BV:33
48 : mlvar.dst.10 : MEMLABEL
49 : 127996 : BV:64
50 : bvextract(49, 5, 6) : BV:32
51 : bvadd(8, 50) : BV:32
52 : select(43, 48, 51, 16, 17) : BV:32
53 : bvzero_ext(52, 19) : BV:33
54 : bvadd(47, 53) : BV:33
55 : bvextract(54, 5, 6) : BV:32
56 : bvxor(55, 55) : BV:32
=dst.hidden_reg.6
1 : input.dst.exreg.0.2 : BV:32
=dst.hidden_reg.3
1 : input.dst.exreg.0.6 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.0.7 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.0.3 : BV:32
=dst.esp.E0%0%1
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.14.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127984 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 127988 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 10) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : bvadd(23, 14) : BV:32
33 : select(29, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : mlvar.dst.7 : MEMLABEL
36 : 127992 : BV:64
37 : bvextract(36, 5, 6) : BV:32
38 : bvadd(8, 37) : BV:32
39 : select(29, 35, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(34, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : bvadd(23, 37) : BV:32
46 : select(43, 44, 45, 16, 17) : BV:32
47 : bvzero_ext(46, 19) : BV:33
48 : mlvar.dst.10 : MEMLABEL
49 : 127996 : BV:64
50 : bvextract(49, 5, 6) : BV:32
51 : bvadd(8, 50) : BV:32
52 : select(43, 48, 51, 16, 17) : BV:32
53 : bvzero_ext(52, 19) : BV:33
54 : bvadd(47, 53) : BV:33
55 : bvextract(54, 5, 6) : BV:32
56 : bvxor(55, 55) : BV:32
57 : 0 : BV:32
58 : eq(56, 57) : BOOL
59 : bvsign(56) : BV:1
60 : 1 : BV:1
61 : eq(59, 60) : BOOL
62 : or(58, 61) : BOOL
63 : 0 : BV:1
64 : ite(62, 60, 63) : BV:1
=dst.exreg.16.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127984 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 127988 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 10) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : bvadd(23, 14) : BV:32
33 : select(29, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : mlvar.dst.7 : MEMLABEL
36 : 127992 : BV:64
37 : bvextract(36, 5, 6) : BV:32
38 : bvadd(8, 37) : BV:32
39 : select(29, 35, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(34, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : bvadd(23, 37) : BV:32
46 : select(43, 44, 45, 16, 17) : BV:32
47 : bvzero_ext(46, 19) : BV:33
48 : mlvar.dst.10 : MEMLABEL
49 : 127996 : BV:64
50 : bvextract(49, 5, 6) : BV:32
51 : bvadd(8, 50) : BV:32
52 : select(43, 48, 51, 16, 17) : BV:32
53 : bvzero_ext(52, 19) : BV:33
54 : bvadd(47, 53) : BV:33
55 : bvextract(54, 5, 6) : BV:32
56 : bvxor(55, 55) : BV:32
57 : bvsign(56) : BV:1
58 : 1 : BV:1
59 : eq(57, 58) : BOOL
60 : not(59) : BOOL
61 : 0 : BV:1
62 : ite(60, 58, 61) : BV:1
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127984 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 127988 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 10) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : bvadd(23, 14) : BV:32
33 : select(29, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : mlvar.dst.7 : MEMLABEL
36 : 127992 : BV:64
37 : bvextract(36, 5, 6) : BV:32
38 : bvadd(8, 37) : BV:32
39 : select(29, 35, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(34, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.11 : MEMLABEL
45 : mlvar.dst.9 : MEMLABEL
46 : bvadd(23, 37) : BV:32
47 : select(43, 45, 46, 16, 17) : BV:32
48 : bvzero_ext(47, 19) : BV:33
49 : mlvar.dst.10 : MEMLABEL
50 : 127996 : BV:64
51 : bvextract(50, 5, 6) : BV:32
52 : bvadd(8, 51) : BV:32
53 : select(43, 49, 52, 16, 17) : BV:32
54 : bvzero_ext(53, 19) : BV:33
55 : bvadd(48, 54) : BV:33
56 : bvextract(55, 5, 6) : BV:32
57 : store(43, 44, 38, 56, 16, 17) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : 1 : BV:64
9 : 0 : INT
10 : bvextract(8, 2, 9) : BV:32
11 : bvmul(7, 10) : BV:32
12 : 127988 : BV:64
13 : bvextract(12, 2, 9) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(5, 6, 14, 15, 16) : BV:32
18 : bvzero_ext(17, 3) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.2 : BV:32
21 : bvmul(20, 10) : BV:32
22 : 127984 : BV:64
23 : bvextract(22, 2, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : select(5, 19, 24, 15, 16) : BV:32
26 : bvzero_ext(25, 3) : BV:33
27 : bvadd(18, 26) : BV:33
28 : 32 : INT
29 : bvextract(27, 28, 28) : BV:1
30 : 1 : BV:1
31 : eq(29, 30) : BOOL
32 : 0 : BV:1
33 : ite(31, 30, 32) : BV:1
34 : bvconcat(4, 33) : BV:32
35 : 5 : INT
36 : bvextract(34, 2, 35) : BV:27
37 : bvextract(27, 2, 9) : BV:32
38 : bvextract(37, 15, 15) : BV:1
39 : eq(38, 30) : BOOL
40 : bvextract(18, 15, 15) : BV:1
41 : eq(40, 30) : BOOL
42 : xor(39, 41) : BOOL
43 : ite(42, 30, 32) : BV:1
44 : 3 : INT
45 : bvextract(34, 44, 9) : BV:4
46 : bvconcat(43, 45) : BV:5
47 : bvconcat(36, 46) : BV:32
48 : 12 : INT
49 : bvextract(47, 2, 48) : BV:20
50 : bvextract(18, 2, 2) : BV:1
51 : eq(50, 30) : BOOL
52 : bvextract(26, 2, 2) : BV:1
53 : eq(52, 30) : BOOL
54 : iff(51, 53) : BOOL
55 : bvextract(18, 2, 9) : BV:32
56 : bvextract(26, 2, 9) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvextract(57, 2, 2) : BV:1
59 : eq(58, 30) : BOOL
60 : xor(51, 59) : BOOL
61 : and(54, 60) : BOOL
62 : ite(61, 30, 32) : BV:1
63 : 10 : INT
64 : bvextract(47, 63, 9) : BV:11
65 : bvconcat(62, 64) : BV:12
66 : bvconcat(49, 65) : BV:32
67 : 8 : INT
68 : bvextract(66, 2, 67) : BV:24
69 : ite(59, 30, 32) : BV:1
70 : 6 : INT
71 : bvextract(66, 70, 9) : BV:7
72 : bvconcat(69, 71) : BV:8
73 : bvconcat(68, 72) : BV:32
74 : 7 : INT
75 : bvextract(73, 2, 74) : BV:25
76 : 0 : BV:32
77 : eq(37, 76) : BOOL
78 : ite(77, 30, 32) : BV:1
79 : bvextract(73, 35, 9) : BV:6
80 : bvconcat(78, 79) : BV:7
81 : bvconcat(75, 80) : BV:32
82 : bvextract(81, 2, 44) : BV:29
83 : bvextract(81, 3, 9) : BV:2
84 : bvconcat(32, 83) : BV:3
85 : bvconcat(82, 84) : BV:32
86 : 11 : INT
87 : bvextract(85, 2, 86) : BV:21
88 : bvextract(1, 63, 63) : BV:1
89 : eq(88, 30) : BOOL
90 : ite(89, 30, 32) : BV:1
91 : 9 : INT
92 : bvextract(85, 91, 9) : BV:10
93 : bvconcat(90, 92) : BV:11
94 : bvconcat(87, 93) : BV:32
95 : bvextract(94, 2, 3) : BV:31
96 : mlvar.dst.5 : MEMLABEL
97 : bvadd(11, 23) : BV:32
98 : store(5, 96, 97, 37, 15, 16) : ARRAY[BV:32 -> BV:8]
99 : mlvar.dst.6 : MEMLABEL
100 : bvadd(21, 13) : BV:32
101 : select(98, 99, 100, 15, 16) : BV:32
102 : bvzero_ext(101, 3) : BV:33
103 : mlvar.dst.7 : MEMLABEL
104 : 127992 : BV:64
105 : bvextract(104, 2, 9) : BV:32
106 : bvadd(11, 105) : BV:32
107 : select(98, 103, 106, 15, 16) : BV:32
108 : bvzero_ext(107, 3) : BV:33
109 : bvadd(102, 108) : BV:33
110 : bvextract(109, 28, 28) : BV:1
111 : eq(110, 30) : BOOL
112 : ite(111, 30, 32) : BV:1
113 : bvconcat(95, 112) : BV:32
114 : bvextract(113, 2, 35) : BV:27
115 : bvextract(109, 2, 9) : BV:32
116 : bvextract(115, 15, 15) : BV:1
117 : eq(116, 30) : BOOL
118 : bvextract(102, 15, 15) : BV:1
119 : eq(118, 30) : BOOL
120 : xor(117, 119) : BOOL
121 : ite(120, 30, 32) : BV:1
122 : bvextract(113, 44, 9) : BV:4
123 : bvconcat(121, 122) : BV:5
124 : bvconcat(114, 123) : BV:32
125 : bvextract(124, 2, 48) : BV:20
126 : bvextract(102, 2, 2) : BV:1
127 : eq(126, 30) : BOOL
128 : bvextract(108, 2, 2) : BV:1
129 : eq(128, 30) : BOOL
130 : iff(127, 129) : BOOL
131 : bvextract(102, 2, 9) : BV:32
132 : bvextract(108, 2, 9) : BV:32
133 : bvadd(131, 132) : BV:32
134 : bvextract(133, 2, 2) : BV:1
135 : eq(134, 30) : BOOL
136 : xor(127, 135) : BOOL
137 : and(130, 136) : BOOL
138 : ite(137, 30, 32) : BV:1
139 : bvextract(124, 63, 9) : BV:11
140 : bvconcat(138, 139) : BV:12
141 : bvconcat(125, 140) : BV:32
142 : bvextract(141, 2, 67) : BV:24
143 : ite(135, 30, 32) : BV:1
144 : bvextract(141, 70, 9) : BV:7
145 : bvconcat(143, 144) : BV:8
146 : bvconcat(142, 145) : BV:32
147 : bvextract(146, 2, 74) : BV:25
148 : eq(115, 76) : BOOL
149 : ite(148, 30, 32) : BV:1
150 : bvextract(146, 35, 9) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(147, 151) : BV:32
153 : bvextract(152, 2, 44) : BV:29
154 : bvextract(152, 3, 9) : BV:2
155 : bvconcat(32, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 86) : BV:21
158 : bvextract(94, 63, 63) : BV:1
159 : eq(158, 30) : BOOL
160 : ite(159, 30, 32) : BV:1
161 : bvextract(156, 91, 9) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
164 : bvextract(163, 2, 3) : BV:31
165 : mlvar.dst.8 : MEMLABEL
166 : store(98, 165, 14, 115, 15, 16) : ARRAY[BV:32 -> BV:8]
167 : mlvar.dst.9 : MEMLABEL
168 : bvadd(21, 105) : BV:32
169 : select(166, 167, 168, 15, 16) : BV:32
170 : bvzero_ext(169, 3) : BV:33
171 : mlvar.dst.10 : MEMLABEL
172 : 127996 : BV:64
173 : bvextract(172, 2, 9) : BV:32
174 : bvadd(11, 173) : BV:32
175 : select(166, 171, 174, 15, 16) : BV:32
176 : bvzero_ext(175, 3) : BV:33
177 : bvadd(170, 176) : BV:33
178 : bvextract(177, 28, 28) : BV:1
179 : eq(178, 30) : BOOL
180 : ite(179, 30, 32) : BV:1
181 : bvconcat(164, 180) : BV:32
182 : bvextract(181, 2, 35) : BV:27
183 : bvextract(177, 2, 9) : BV:32
184 : bvextract(183, 15, 15) : BV:1
185 : eq(184, 30) : BOOL
186 : bvextract(170, 15, 15) : BV:1
187 : eq(186, 30) : BOOL
188 : xor(185, 187) : BOOL
189 : ite(188, 30, 32) : BV:1
190 : bvextract(181, 44, 9) : BV:4
191 : bvconcat(189, 190) : BV:5
192 : bvconcat(182, 191) : BV:32
193 : bvextract(192, 2, 48) : BV:20
194 : bvextract(170, 2, 2) : BV:1
195 : eq(194, 30) : BOOL
196 : bvextract(176, 2, 2) : BV:1
197 : eq(196, 30) : BOOL
198 : iff(195, 197) : BOOL
199 : bvextract(170, 2, 9) : BV:32
200 : bvextract(176, 2, 9) : BV:32
201 : bvadd(199, 200) : BV:32
202 : bvextract(201, 2, 2) : BV:1
203 : eq(202, 30) : BOOL
204 : xor(195, 203) : BOOL
205 : and(198, 204) : BOOL
206 : ite(205, 30, 32) : BV:1
207 : bvextract(192, 63, 9) : BV:11
208 : bvconcat(206, 207) : BV:12
209 : bvconcat(193, 208) : BV:32
210 : bvextract(209, 2, 67) : BV:24
211 : ite(203, 30, 32) : BV:1
212 : bvextract(209, 70, 9) : BV:7
213 : bvconcat(211, 212) : BV:8
214 : bvconcat(210, 213) : BV:32
215 : bvextract(214, 2, 74) : BV:25
216 : eq(183, 76) : BOOL
217 : ite(216, 30, 32) : BV:1
218 : bvextract(214, 35, 9) : BV:6
219 : bvconcat(217, 218) : BV:7
220 : bvconcat(215, 219) : BV:32
221 : bvextract(220, 2, 44) : BV:29
222 : bvextract(220, 3, 9) : BV:2
223 : bvconcat(32, 222) : BV:3
224 : bvconcat(221, 223) : BV:32
225 : bvextract(224, 2, 86) : BV:21
226 : bvextract(163, 63, 63) : BV:1
227 : eq(226, 30) : BOOL
228 : ite(227, 30, 32) : BV:1
229 : bvextract(224, 91, 9) : BV:10
230 : bvconcat(228, 229) : BV:11
231 : bvconcat(225, 230) : BV:32
232 : bvextract(231, 2, 3) : BV:31
233 : bvconcat(232, 32) : BV:32
234 : bvextract(233, 2, 35) : BV:27
235 : bvextract(233, 44, 9) : BV:4
236 : bvconcat(32, 235) : BV:5
237 : bvconcat(234, 236) : BV:32
238 : bvextract(237, 2, 48) : BV:20
239 : bvextract(237, 63, 9) : BV:11
240 : bvconcat(32, 239) : BV:12
241 : bvconcat(238, 240) : BV:32
242 : bvextract(241, 2, 67) : BV:24
243 : bvxor(183, 183) : BV:32
244 : bvsign(243) : BV:1
245 : eq(244, 30) : BOOL
246 : ite(245, 30, 32) : BV:1
247 : bvextract(241, 70, 9) : BV:7
248 : bvconcat(246, 247) : BV:8
249 : bvconcat(242, 248) : BV:32
250 : bvextract(249, 2, 74) : BV:25
251 : eq(243, 76) : BOOL
252 : ite(251, 30, 32) : BV:1
253 : bvextract(249, 35, 9) : BV:6
254 : bvconcat(252, 253) : BV:7
255 : bvconcat(250, 254) : BV:32
256 : bvextract(255, 2, 44) : BV:29
257 : bvextract(255, 3, 9) : BV:2
258 : bvconcat(32, 257) : BV:3
259 : bvconcat(256, 258) : BV:32
260 : bvextract(259, 2, 86) : BV:21
261 : bvextract(231, 63, 63) : BV:1
262 : eq(261, 30) : BOOL
263 : ite(262, 30, 32) : BV:1
264 : bvextract(259, 91, 9) : BV:10
265 : bvconcat(263, 264) : BV:11
266 : bvconcat(260, 265) : BV:32
=dst.exreg.7.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127984 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 127988 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 10) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : bvadd(23, 14) : BV:32
33 : select(29, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : mlvar.dst.7 : MEMLABEL
36 : 127992 : BV:64
37 : bvextract(36, 5, 6) : BV:32
38 : bvadd(8, 37) : BV:32
39 : select(29, 35, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(34, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : bvadd(23, 37) : BV:32
46 : select(43, 44, 45, 16, 17) : BV:32
47 : bvzero_ext(46, 19) : BV:33
48 : mlvar.dst.10 : MEMLABEL
49 : 127996 : BV:64
50 : bvextract(49, 5, 6) : BV:32
51 : bvadd(8, 50) : BV:32
52 : select(43, 48, 51, 16, 17) : BV:32
53 : bvzero_ext(52, 19) : BV:33
54 : bvadd(47, 53) : BV:33
55 : bvextract(54, 5, 6) : BV:32
56 : bvxor(55, 55) : BV:32
57 : 0 : BV:32
58 : eq(56, 57) : BOOL
59 : 1 : BV:1
60 : 0 : BV:1
61 : ite(58, 59, 60) : BV:1
=dst.exreg.8.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127984 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 127988 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 10) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : bvadd(23, 14) : BV:32
33 : select(29, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : mlvar.dst.7 : MEMLABEL
36 : 127992 : BV:64
37 : bvextract(36, 5, 6) : BV:32
38 : bvadd(8, 37) : BV:32
39 : select(29, 35, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(34, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : bvadd(23, 37) : BV:32
46 : select(43, 44, 45, 16, 17) : BV:32
47 : bvzero_ext(46, 19) : BV:33
48 : mlvar.dst.10 : MEMLABEL
49 : 127996 : BV:64
50 : bvextract(49, 5, 6) : BV:32
51 : bvadd(8, 50) : BV:32
52 : select(43, 48, 51, 16, 17) : BV:32
53 : bvzero_ext(52, 19) : BV:33
54 : bvadd(47, 53) : BV:33
55 : bvextract(54, 5, 6) : BV:32
56 : bvxor(55, 55) : BV:32
57 : 0 : BV:32
58 : eq(56, 57) : BOOL
59 : not(58) : BOOL
60 : 1 : BV:1
61 : 0 : BV:1
62 : ite(59, 60, 61) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127984 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 127988 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 10) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : bvadd(23, 14) : BV:32
33 : select(29, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : mlvar.dst.7 : MEMLABEL
36 : 127992 : BV:64
37 : bvextract(36, 5, 6) : BV:32
38 : bvadd(8, 37) : BV:32
39 : select(29, 35, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(34, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : bvadd(23, 37) : BV:32
46 : select(43, 44, 45, 16, 17) : BV:32
47 : bvzero_ext(46, 19) : BV:33
48 : mlvar.dst.10 : MEMLABEL
49 : 127996 : BV:64
50 : bvextract(49, 5, 6) : BV:32
51 : bvadd(8, 50) : BV:32
52 : select(43, 48, 51, 16, 17) : BV:32
53 : bvzero_ext(52, 19) : BV:33
54 : bvadd(47, 53) : BV:33
55 : bvextract(54, 5, 6) : BV:32
56 : bvxor(55, 55) : BV:32
57 : bvsign(56) : BV:1
58 : 1 : BV:1
59 : eq(57, 58) : BOOL
60 : 0 : BV:1
61 : ite(59, 58, 60) : BV:1
=dst.exreg.11.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127984 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 127988 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 10) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : bvadd(23, 14) : BV:32
33 : select(29, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : mlvar.dst.7 : MEMLABEL
36 : 127992 : BV:64
37 : bvextract(36, 5, 6) : BV:32
38 : bvadd(8, 37) : BV:32
39 : select(29, 35, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(34, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : bvadd(23, 37) : BV:32
46 : select(43, 44, 45, 16, 17) : BV:32
47 : bvzero_ext(46, 19) : BV:33
48 : mlvar.dst.10 : MEMLABEL
49 : 127996 : BV:64
50 : bvextract(49, 5, 6) : BV:32
51 : bvadd(8, 50) : BV:32
52 : select(43, 48, 51, 16, 17) : BV:32
53 : bvzero_ext(52, 19) : BV:33
54 : bvadd(47, 53) : BV:33
55 : bvextract(54, 5, 6) : BV:32
56 : bvxor(55, 55) : BV:32
57 : 0 : BV:32
58 : eq(56, 57) : BOOL
59 : not(58) : BOOL
60 : 1 : BV:1
61 : 0 : BV:1
62 : ite(59, 60, 61) : BV:1
=dst.exreg.12.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127984 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 127988 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 10) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : bvadd(23, 14) : BV:32
33 : select(29, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : mlvar.dst.7 : MEMLABEL
36 : 127992 : BV:64
37 : bvextract(36, 5, 6) : BV:32
38 : bvadd(8, 37) : BV:32
39 : select(29, 35, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(34, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : bvadd(23, 37) : BV:32
46 : select(43, 44, 45, 16, 17) : BV:32
47 : bvzero_ext(46, 19) : BV:33
48 : mlvar.dst.10 : MEMLABEL
49 : 127996 : BV:64
50 : bvextract(49, 5, 6) : BV:32
51 : bvadd(8, 50) : BV:32
52 : select(43, 48, 51, 16, 17) : BV:32
53 : bvzero_ext(52, 19) : BV:33
54 : bvadd(47, 53) : BV:33
55 : bvextract(54, 5, 6) : BV:32
56 : bvxor(55, 55) : BV:32
57 : 0 : BV:32
58 : eq(56, 57) : BOOL
59 : not(58) : BOOL
60 : bvsign(56) : BV:1
61 : 1 : BV:1
62 : eq(60, 61) : BOOL
63 : not(62) : BOOL
64 : and(59, 63) : BOOL
65 : 0 : BV:1
66 : ite(64, 61, 65) : BV:1
=dst.exreg.13.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127984 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 127988 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 10) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : bvadd(23, 14) : BV:32
33 : select(29, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : mlvar.dst.7 : MEMLABEL
36 : 127992 : BV:64
37 : bvextract(36, 5, 6) : BV:32
38 : bvadd(8, 37) : BV:32
39 : select(29, 35, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(34, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : bvadd(23, 37) : BV:32
46 : select(43, 44, 45, 16, 17) : BV:32
47 : bvzero_ext(46, 19) : BV:33
48 : mlvar.dst.10 : MEMLABEL
49 : 127996 : BV:64
50 : bvextract(49, 5, 6) : BV:32
51 : bvadd(8, 50) : BV:32
52 : select(43, 48, 51, 16, 17) : BV:32
53 : bvzero_ext(52, 19) : BV:33
54 : bvadd(47, 53) : BV:33
55 : bvextract(54, 5, 6) : BV:32
56 : bvxor(55, 55) : BV:32
57 : 0 : BV:32
58 : eq(56, 57) : BOOL
59 : 1 : BV:1
60 : 0 : BV:1
61 : ite(58, 59, 60) : BV:1
=dst.hidden_reg.0
1 : input.dst.exreg.5.2 : BV:16
=dst.hidden_reg.2
1 : input.dst.exreg.0.5 : BV:32
=dst.exreg.0.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127984 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 127988 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 10) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : bvadd(23, 14) : BV:32
33 : select(29, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : mlvar.dst.7 : MEMLABEL
36 : 127992 : BV:64
37 : bvextract(36, 5, 6) : BV:32
38 : bvadd(8, 37) : BV:32
39 : select(29, 35, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(34, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : bvadd(23, 37) : BV:32
46 : select(43, 44, 45, 16, 17) : BV:32
47 : bvzero_ext(46, 19) : BV:33
48 : mlvar.dst.10 : MEMLABEL
49 : 127996 : BV:64
50 : bvextract(49, 5, 6) : BV:32
51 : bvadd(8, 50) : BV:32
52 : select(43, 48, 51, 16, 17) : BV:32
53 : bvzero_ext(52, 19) : BV:33
54 : bvadd(47, 53) : BV:33
55 : bvextract(54, 5, 6) : BV:32
56 : bvxor(55, 55) : BV:32
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127984 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 127988 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 10) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : bvadd(23, 14) : BV:32
33 : select(29, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : mlvar.dst.7 : MEMLABEL
36 : 127992 : BV:64
37 : bvextract(36, 5, 6) : BV:32
38 : bvadd(8, 37) : BV:32
39 : select(29, 35, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(34, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.11 : MEMLABEL
45 : mlvar.dst.9 : MEMLABEL
46 : bvadd(23, 37) : BV:32
47 : select(43, 45, 46, 16, 17) : BV:32
48 : bvzero_ext(47, 19) : BV:33
49 : mlvar.dst.10 : MEMLABEL
50 : 127996 : BV:64
51 : bvextract(50, 5, 6) : BV:32
52 : bvadd(8, 51) : BV:32
53 : select(43, 49, 52, 16, 17) : BV:32
54 : bvzero_ext(53, 19) : BV:33
55 : bvadd(48, 54) : BV:33
56 : bvextract(55, 5, 6) : BV:32
57 : store(43, 44, 38, 56, 16, 17) : ARRAY[BV:32 -> BV:8]
58 : mlvar.dst.12 : MEMLABEL
59 : input.dst.exreg.0.4 : BV:32
60 : select(57, 58, 59, 16, 17) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*((te_comment_not_implemented*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented)))

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>L0%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>L1%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%1%1=>L1%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%1%0=>L1%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%1%0=>L6%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%1%1=>L2%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%1%1=>L3%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%1%1=>L4%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L4%1%1=>L5%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L5%1%1=>L6%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L6%1%1=>L1%1%0
1 : 1 : BV:1
2 : input.dst.exreg.8.0 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L6%1%1=>L7%1%0
1 : 1 : BV:1
2 : input.dst.exreg.8.0 : BV:1
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L7%1%0=>L7%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L7%1%0=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L7%1%1=>L8%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L8%1%1=>L9%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L9%1%1=>L10%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L10%1%1=>L11%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L11%1%1=>L12%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L12%1%1=>L13%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L13%1%1=>L14%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L14%1%1=>L15%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L15%1%1=>L16%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L16%1%1=>L17%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L17%1%1=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>L0%1%1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>L1%1%0
=dst.exreg.14.0
1 : 1 : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 0 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%1%1=>L1%1%0
=dst.exreg.14.0
1 : 1 : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.0.0
1 : 0 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%1%0=>L1%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%1%0=>L6%1%1
=dst.exreg.14.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839328 { -127968 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 127968 : BV:32
17 : eq(2, 16) : BOOL
18 : or(15, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 1, 19) : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839328 { -127968 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 1, 15) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : dst_symbol_addr.2 : BV:32
7 : 12 : BV:32
8 : bvadd(6, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : 16 : BV:32
13 : bvadd(3, 4, 12) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(6, 4, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(3, 4, 7) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : 4 : BV:32
23 : bvadd(6, 22, 4) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(3, 4, 16) : BV:32
26 : select(1, 2, 25, 9, 10) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(6, 4) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(3, 22, 4) : BV:32
31 : select(1, 2, 30, 9, 10) : BV:32
32 : bvadd(29, 31) : BV:32
33 : bvconcat(15, 21, 27, 32) : BV:128
34 : 16 : INT
35 : store(1, 2, 5, 33, 34, 10) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : 16 : BV:32
8 : bvadd(6, 7) : BV:32
9 : bvextract(8, 2, 2) : BV:1
10 : eq(5, 9) : BOOL
11 : 4294839328 { -127968 } : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(5, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(10, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 5, 17) : BV:1
19 : 10 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : eq(5, 20) : BOOL
22 : ite(21, 5, 17) : BV:1
23 : 9 : INT
24 : 8 : INT
25 : bvextract(1, 23, 24) : BV:2
26 : ite(14, 5, 17) : BV:1
27 : 127968 : BV:32
28 : eq(6, 27) : BOOL
29 : ite(28, 5, 17) : BV:1
30 : 5 : INT
31 : bvextract(1, 30, 30) : BV:1
32 : 4 : INT
33 : bvextract(12, 32, 32) : BV:1
34 : eq(5, 33) : BOOL
35 : bvextract(8, 32, 32) : BV:1
36 : eq(5, 35) : BOOL
37 : xor(34, 36) : BOOL
38 : ite(37, 5, 17) : BV:1
39 : 3 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : 1 : INT
42 : bvextract(1, 41, 41) : BV:1
43 : 127984 : BV:32
44 : bvuge(8, 43) : BOOL
45 : not(44) : BOOL
46 : ite(45, 5, 17) : BV:1
47 : bvconcat(4, 18, 22, 25, 26, 29, 31, 38, 40, 17, 42, 46) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127968 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127968 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 127984 : BV:32
5 : bvuge(3, 4) : BOOL
6 : not(5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839328 { -127968 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127968 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 127984 : BV:32
7 : bvuge(5, 6) : BOOL
8 : andnot1(3, 7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839328 { -127968 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 127968 : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : 0 : BV:1
19 : ite(17, 1, 18) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127968 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 127984 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : or(3, 8) : BOOL
10 : 1 : BV:1
11 : 0 : BV:1
12 : ite(9, 10, 11) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 12 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(1, 2, 6, 7, 8) : BV:32
10 : dst_symbol_addr.1 : BV:32
11 : 16 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : select(1, 2, 12, 7, 8) : BV:32
14 : bvadd(9, 13) : BV:32
15 : 8 : BV:32
16 : bvadd(3, 4, 15) : BV:32
17 : select(1, 2, 16, 7, 8) : BV:32
18 : bvadd(10, 4, 5) : BV:32
19 : select(1, 2, 18, 7, 8) : BV:32
20 : bvadd(17, 19) : BV:32
21 : 4 : BV:32
22 : bvadd(3, 21, 4) : BV:32
23 : select(1, 2, 22, 7, 8) : BV:32
24 : bvadd(10, 4, 15) : BV:32
25 : select(1, 2, 24, 7, 8) : BV:32
26 : bvadd(23, 25) : BV:32
27 : bvadd(3, 4) : BV:32
28 : select(1, 2, 27, 7, 8) : BV:32
29 : bvadd(10, 21, 4) : BV:32
30 : select(1, 2, 29, 7, 8) : BV:32
31 : bvadd(28, 30) : BV:32
32 : bvconcat(14, 20, 26, 31) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 127984 : BV:32
5 : bvuge(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%1%1=>L2%1%1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 4 : BV:32
5 : input.dst.exreg.0.0 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 16 : INT
8 : 0 : BOOL
9 : select(1, 2, 6, 7, 8) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%1%1=>L3%1%1
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 12 : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : 8 : BV:32
19 : bvadd(7, 8, 18) : BV:32
20 : select(5, 6, 19, 11, 12) : BV:32
21 : bvadd(17, 20) : BV:32
22 : 63 : INT
23 : 32 : INT
24 : bvextract(1, 22, 23) : BV:32
25 : 4 : BV:32
26 : bvadd(7, 25, 8) : BV:32
27 : select(5, 6, 26, 11, 12) : BV:32
28 : bvadd(24, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(1, 29, 30) : BV:32
32 : bvadd(7, 8) : BV:32
33 : select(5, 6, 32, 11, 12) : BV:32
34 : bvadd(31, 33) : BV:32
35 : bvconcat(14, 21, 28, 34) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%1%1=>L4%1%1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 16 : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : 0 : BV:1
11 : bvextract(1, 7, 7) : BV:1
12 : eq(10, 11) : BOOL
13 : eq(4, 11) : BOOL
14 : xor(13, 9) : BOOL
15 : and(12, 14) : BOOL
16 : iff(9, 15) : BOOL
17 : not(16) : BOOL
18 : or(3, 17) : BOOL
19 : ite(18, 4, 10) : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : ite(14, 1, 8) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 1 : BV:1
10 : eq(9, 7) : BOOL
11 : 16 : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(9, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(8, 15) : BOOL
17 : ite(16, 9, 5) : BV:1
18 : 10 : INT
19 : bvextract(1, 18, 18) : BV:1
20 : eq(9, 19) : BOOL
21 : ite(20, 9, 5) : BV:1
22 : 9 : INT
23 : 8 : INT
24 : bvextract(1, 22, 23) : BV:2
25 : ite(14, 9, 5) : BV:1
26 : 4294967280 { -16 } : BV:32
27 : eq(6, 26) : BOOL
28 : ite(27, 9, 5) : BV:1
29 : 5 : INT
30 : bvextract(1, 29, 29) : BV:1
31 : 4 : INT
32 : bvextract(12, 31, 31) : BV:1
33 : eq(9, 32) : BOOL
34 : bvextract(6, 31, 31) : BV:1
35 : eq(9, 34) : BOOL
36 : xor(33, 35) : BOOL
37 : ite(36, 9, 5) : BV:1
38 : 3 : INT
39 : bvextract(1, 38, 38) : BV:1
40 : 1 : INT
41 : bvextract(1, 40, 40) : BV:1
42 : bvconcat(5, 6) : BV:33
43 : 16 : BV:33
44 : bvadd(42, 43) : BV:33
45 : 32 : INT
46 : bvextract(44, 45, 45) : BV:1
47 : eq(9, 46) : BOOL
48 : ite(47, 9, 5) : BV:1
49 : bvconcat(4, 17, 21, 24, 25, 28, 30, 37, 39, 5, 41, 48) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : ite(9, 1, 2) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : ite(15, 1, 8) : BV:1
=dst.exreg.11.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : 4294967280 { -16 } : BV:32
11 : eq(3, 10) : BOOL
12 : not(11) : BOOL
13 : andnot1(9, 12) : BOOL
14 : ite(13, 1, 2) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 4294967280 { -16 } : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : ite(17, 1, 8) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : bvconcat(5, 1) : BV:33
7 : 16 : BV:33
8 : bvadd(6, 7) : BV:33
9 : 32 : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(4, 10) : BOOL
12 : or(3, 11) : BOOL
13 : ite(12, 4, 5) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : not(9) : BOOL
11 : ite(10, 1, 2) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L4%1%1=>L5%1%1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at L5%1%1=>L6%1%1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4294839312 { -127984 } : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : bvextract(1, 7, 7) : BV:1
11 : eq(4, 10) : BOOL
12 : xor(11, 9) : BOOL
13 : and(11, 12) : BOOL
14 : iff(9, 13) : BOOL
15 : not(14) : BOOL
16 : or(3, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 4, 17) : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 : BV:1
14 : ite(12, 1, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294839312 { -127984 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 : INT
22 : 8 : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 127984 : BV:32
26 : eq(6, 25) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 : BV:1
15 : ite(13, 1, 14) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(1, 2) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 127984 : BV:32
14 : eq(2, 13) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : eq(1, 2) : BOOL
6 : or(4, 5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L6%1%1=>L1%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at L6%1%1=>L7%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at L7%1%0=>L7%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L7%1%0=>E0%0%1
=dst.esp.E0%0%1
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.14.0
1 : 1 : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127984 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 127988 : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : dst_symbol_addr.2 : BV:32
12 : bvadd(11, 4) : BV:32
13 : select(1, 2, 12, 8, 9) : BV:32
14 : bvadd(10, 13) : BV:32
15 : store(1, 2, 5, 14, 8, 9) : ARRAY[BV:32 -> BV:8]
16 : 127992 : BV:32
17 : bvadd(3, 16) : BV:32
18 : select(1, 2, 17, 8, 9) : BV:32
19 : bvadd(11, 6) : BV:32
20 : select(15, 2, 19, 8, 9) : BV:32
21 : bvadd(18, 20) : BV:32
22 : store(15, 2, 7, 21, 8, 9) : ARRAY[BV:32 -> BV:8]
23 : 127996 : BV:32
24 : bvadd(3, 23) : BV:32
25 : select(1, 2, 24, 8, 9) : BV:32
26 : bvadd(11, 16) : BV:32
27 : select(22, 2, 26, 8, 9) : BV:32
28 : bvadd(25, 27) : BV:32
29 : store(22, 2, 17, 28, 8, 9) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.0.0
1 : 0 : BV:32
=dst.llvm-indir_tgt
1 : retaddr_const : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L7%1%1=>L8%1%1
=dst.exreg.0.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L8%1%1=>L9%1%1
=dst.exreg.14.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 127984 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : not(22) : BOOL
24 : 4294967295 { -1 } : BV:32
25 : bvmul(24, 10) : BV:32
26 : eq(2, 25) : BOOL
27 : or(23, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 1, 28) : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 127984 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : 0 : BV:1
24 : ite(22, 1, 23) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : input.dst.mem : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
11 : dst_symbol_addr.2 : BV:32
12 : 127984 : BV:32
13 : bvadd(11, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(9, 10, 13, 14, 15) : BV:32
17 : bvextract(16, 2, 2) : BV:1
18 : eq(5, 17) : BOOL
19 : iff(8, 18) : BOOL
20 : bvadd(6, 16) : BV:32
21 : bvextract(20, 2, 2) : BV:1
22 : eq(5, 21) : BOOL
23 : xor(8, 22) : BOOL
24 : and(19, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 5, 25) : BV:1
27 : 10 : INT
28 : bvextract(1, 27, 27) : BV:1
29 : eq(5, 28) : BOOL
30 : ite(29, 5, 25) : BV:1
31 : 9 : INT
32 : 8 : INT
33 : bvextract(1, 31, 32) : BV:2
34 : ite(22, 5, 25) : BV:1
35 : 4294967295 { -1 } : BV:32
36 : bvmul(35, 16) : BV:32
37 : eq(6, 36) : BOOL
38 : ite(37, 5, 25) : BV:1
39 : 5 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvextract(20, 14, 14) : BV:1
42 : eq(5, 41) : BOOL
43 : bvextract(6, 14, 14) : BV:1
44 : eq(5, 43) : BOOL
45 : xor(42, 44) : BOOL
46 : ite(45, 5, 25) : BV:1
47 : 3 : INT
48 : bvextract(1, 47, 47) : BV:1
49 : 1 : INT
50 : bvextract(1, 49, 49) : BV:1
51 : bvconcat(25, 6) : BV:33
52 : bvconcat(25, 16) : BV:33
53 : bvadd(51, 52) : BV:33
54 : 32 : INT
55 : bvextract(53, 54, 54) : BV:1
56 : eq(5, 55) : BOOL
57 : ite(56, 5, 25) : BV:1
58 : bvconcat(4, 26, 30, 33, 34, 38, 40, 46, 48, 25, 50, 57) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 127984 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 127984 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : not(12) : BOOL
14 : 1 : BV:1
15 : 0 : BV:1
16 : ite(13, 14, 15) : BV:1
=dst.exreg.9.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 127984 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:32
13 : bvconcat(2, 12) : BV:33
14 : bvadd(4, 13) : BV:33
15 : 32 : INT
16 : bvextract(14, 15, 15) : BV:1
17 : eq(1, 16) : BOOL
18 : ite(17, 1, 2) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 127984 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : not(22) : BOOL
24 : 0 : BV:1
25 : ite(23, 1, 24) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 127984 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : bvconcat(14, 1) : BV:33
16 : bvconcat(14, 10) : BV:33
17 : bvadd(15, 16) : BV:33
18 : 32 : INT
19 : bvextract(17, 18, 18) : BV:1
20 : eq(13, 19) : BOOL
21 : not(20) : BOOL
22 : andnot1(12, 21) : BOOL
23 : ite(22, 13, 14) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 127984 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : 4294967295 { -1 } : BV:32
24 : bvmul(23, 10) : BV:32
25 : eq(2, 24) : BOOL
26 : andnot2(22, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 1, 27) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 127984 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : bvconcat(14, 1) : BV:33
16 : bvconcat(14, 10) : BV:33
17 : bvadd(15, 16) : BV:33
18 : 32 : INT
19 : bvextract(17, 18, 18) : BV:1
20 : eq(13, 19) : BOOL
21 : or(12, 20) : BOOL
22 : ite(21, 13, 14) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 127984 : BV:32
6 : bvadd(4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(2, 3, 6, 7, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 127984 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:32
13 : bvconcat(2, 12) : BV:33
14 : bvadd(4, 13) : BV:33
15 : 32 : INT
16 : bvextract(14, 15, 15) : BV:1
17 : eq(1, 16) : BOOL
18 : not(17) : BOOL
19 : ite(18, 1, 2) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L9%1%1=>L10%1%1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127984 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at L10%1%1=>L11%1%1
=dst.exreg.0.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L11%1%1=>L12%1%1
=dst.exreg.14.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127992 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : not(22) : BOOL
24 : 4294967295 { -1 } : BV:32
25 : bvmul(24, 10) : BV:32
26 : eq(2, 25) : BOOL
27 : or(23, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 1, 28) : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127992 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : 0 : BV:1
24 : ite(22, 1, 23) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : input.dst.mem : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
11 : dst_symbol_addr.1 : BV:32
12 : 127992 : BV:32
13 : bvadd(11, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(9, 10, 13, 14, 15) : BV:32
17 : bvextract(16, 2, 2) : BV:1
18 : eq(5, 17) : BOOL
19 : iff(8, 18) : BOOL
20 : bvadd(6, 16) : BV:32
21 : bvextract(20, 2, 2) : BV:1
22 : eq(5, 21) : BOOL
23 : xor(8, 22) : BOOL
24 : and(19, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 5, 25) : BV:1
27 : 10 : INT
28 : bvextract(1, 27, 27) : BV:1
29 : eq(5, 28) : BOOL
30 : ite(29, 5, 25) : BV:1
31 : 9 : INT
32 : 8 : INT
33 : bvextract(1, 31, 32) : BV:2
34 : ite(22, 5, 25) : BV:1
35 : 4294967295 { -1 } : BV:32
36 : bvmul(35, 16) : BV:32
37 : eq(6, 36) : BOOL
38 : ite(37, 5, 25) : BV:1
39 : 5 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvextract(20, 14, 14) : BV:1
42 : eq(5, 41) : BOOL
43 : bvextract(6, 14, 14) : BV:1
44 : eq(5, 43) : BOOL
45 : xor(42, 44) : BOOL
46 : ite(45, 5, 25) : BV:1
47 : 3 : INT
48 : bvextract(1, 47, 47) : BV:1
49 : 1 : INT
50 : bvextract(1, 49, 49) : BV:1
51 : bvconcat(25, 6) : BV:33
52 : bvconcat(25, 16) : BV:33
53 : bvadd(51, 52) : BV:33
54 : 32 : INT
55 : bvextract(53, 54, 54) : BV:1
56 : eq(5, 55) : BOOL
57 : ite(56, 5, 25) : BV:1
58 : bvconcat(4, 26, 30, 33, 34, 38, 40, 46, 48, 25, 50, 57) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127992 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127992 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : not(12) : BOOL
14 : 1 : BV:1
15 : 0 : BV:1
16 : ite(13, 14, 15) : BV:1
=dst.exreg.9.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : 127992 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:32
13 : bvconcat(2, 12) : BV:33
14 : bvadd(4, 13) : BV:33
15 : 32 : INT
16 : bvextract(14, 15, 15) : BV:1
17 : eq(1, 16) : BOOL
18 : ite(17, 1, 2) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127992 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : not(22) : BOOL
24 : 0 : BV:1
25 : ite(23, 1, 24) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127992 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : bvconcat(14, 1) : BV:33
16 : bvconcat(14, 10) : BV:33
17 : bvadd(15, 16) : BV:33
18 : 32 : INT
19 : bvextract(17, 18, 18) : BV:1
20 : eq(13, 19) : BOOL
21 : not(20) : BOOL
22 : andnot1(12, 21) : BOOL
23 : ite(22, 13, 14) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127992 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : 4294967295 { -1 } : BV:32
24 : bvmul(23, 10) : BV:32
25 : eq(2, 24) : BOOL
26 : andnot2(22, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 1, 27) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127992 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : bvconcat(14, 1) : BV:33
16 : bvconcat(14, 10) : BV:33
17 : bvadd(15, 16) : BV:33
18 : 32 : INT
19 : bvextract(17, 18, 18) : BV:1
20 : eq(13, 19) : BOOL
21 : or(12, 20) : BOOL
22 : ite(21, 13, 14) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : dst_symbol_addr.1 : BV:32
5 : 127992 : BV:32
6 : bvadd(4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(2, 3, 6, 7, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : 127992 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:32
13 : bvconcat(2, 12) : BV:33
14 : bvadd(4, 13) : BV:33
15 : 32 : INT
16 : bvextract(14, 15, 15) : BV:1
17 : eq(1, 16) : BOOL
18 : not(17) : BOOL
19 : ite(18, 1, 2) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L12%1%1=>L13%1%1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at L13%1%1=>L14%1%1
=dst.exreg.0.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127992 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L14%1%1=>L15%1%1
=dst.exreg.14.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : not(22) : BOOL
24 : 4294967295 { -1 } : BV:32
25 : bvmul(24, 10) : BV:32
26 : eq(2, 25) : BOOL
27 : or(23, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 1, 28) : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : 0 : BV:1
24 : ite(22, 1, 23) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : input.dst.mem : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
11 : dst_symbol_addr.1 : BV:32
12 : 127996 : BV:32
13 : bvadd(11, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(9, 10, 13, 14, 15) : BV:32
17 : bvextract(16, 2, 2) : BV:1
18 : eq(5, 17) : BOOL
19 : iff(8, 18) : BOOL
20 : bvadd(6, 16) : BV:32
21 : bvextract(20, 2, 2) : BV:1
22 : eq(5, 21) : BOOL
23 : xor(8, 22) : BOOL
24 : and(19, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 5, 25) : BV:1
27 : 10 : INT
28 : bvextract(1, 27, 27) : BV:1
29 : eq(5, 28) : BOOL
30 : ite(29, 5, 25) : BV:1
31 : 9 : INT
32 : 8 : INT
33 : bvextract(1, 31, 32) : BV:2
34 : ite(22, 5, 25) : BV:1
35 : 4294967295 { -1 } : BV:32
36 : bvmul(35, 16) : BV:32
37 : eq(6, 36) : BOOL
38 : ite(37, 5, 25) : BV:1
39 : 5 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvextract(20, 14, 14) : BV:1
42 : eq(5, 41) : BOOL
43 : bvextract(6, 14, 14) : BV:1
44 : eq(5, 43) : BOOL
45 : xor(42, 44) : BOOL
46 : ite(45, 5, 25) : BV:1
47 : 3 : INT
48 : bvextract(1, 47, 47) : BV:1
49 : 1 : INT
50 : bvextract(1, 49, 49) : BV:1
51 : bvconcat(25, 6) : BV:33
52 : bvconcat(25, 16) : BV:33
53 : bvadd(51, 52) : BV:33
54 : 32 : INT
55 : bvextract(53, 54, 54) : BV:1
56 : eq(5, 55) : BOOL
57 : ite(56, 5, 25) : BV:1
58 : bvconcat(4, 26, 30, 33, 34, 38, 40, 46, 48, 25, 50, 57) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : not(12) : BOOL
14 : 1 : BV:1
15 : 0 : BV:1
16 : ite(13, 14, 15) : BV:1
=dst.exreg.9.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : 127996 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:32
13 : bvconcat(2, 12) : BV:33
14 : bvadd(4, 13) : BV:33
15 : 32 : INT
16 : bvextract(14, 15, 15) : BV:1
17 : eq(1, 16) : BOOL
18 : ite(17, 1, 2) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : not(22) : BOOL
24 : 0 : BV:1
25 : ite(23, 1, 24) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : bvconcat(14, 1) : BV:33
16 : bvconcat(14, 10) : BV:33
17 : bvadd(15, 16) : BV:33
18 : 32 : INT
19 : bvextract(17, 18, 18) : BV:1
20 : eq(13, 19) : BOOL
21 : not(20) : BOOL
22 : andnot1(12, 21) : BOOL
23 : ite(22, 13, 14) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : 4294967295 { -1 } : BV:32
24 : bvmul(23, 10) : BV:32
25 : eq(2, 24) : BOOL
26 : andnot2(22, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 1, 27) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : bvconcat(14, 1) : BV:33
16 : bvconcat(14, 10) : BV:33
17 : bvadd(15, 16) : BV:33
18 : 32 : INT
19 : bvextract(17, 18, 18) : BV:1
20 : eq(13, 19) : BOOL
21 : or(12, 20) : BOOL
22 : ite(21, 13, 14) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : dst_symbol_addr.1 : BV:32
5 : 127996 : BV:32
6 : bvadd(4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(2, 3, 6, 7, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : 127996 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:32
13 : bvconcat(2, 12) : BV:33
14 : bvadd(4, 13) : BV:33
15 : 32 : INT
16 : bvextract(14, 15, 15) : BV:1
17 : eq(1, 16) : BOOL
18 : not(17) : BOOL
19 : ite(18, 1, 2) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L15%1%1=>L16%1%1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127992 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at L16%1%1=>L17%1%1
=dst.exreg.14.0
1 : 1 : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.0.0
1 : 0 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L17%1%1=>E0%0%1
=dst.esp.E0%0%1
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L0%1%1
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L0%1%1 done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L1%1%0
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L1%1%0 done
=graph_with_simplified_assets.simplified_assumes at L0%1%1=>L1%1%0
=graph_with_simplified_assets.simplified_assumes at L0%1%1=>L1%1%0 done
=graph_with_simplified_assets.simplified_assumes at L1%1%0=>L1%1%1
=graph_with_simplified_assets.simplified_assumes at L1%1%0=>L1%1%1 done
=graph_with_simplified_assets.simplified_assumes at L1%1%0=>L6%1%1
=graph_with_simplified_assets.simplified_assumes at L1%1%0=>L6%1%1 done
=graph_with_simplified_assets.simplified_assumes at L1%1%1=>L2%1%1
=graph_with_simplified_assets.simplified_assumes at L1%1%1=>L2%1%1 done
=graph_with_simplified_assets.simplified_assumes at L2%1%1=>L3%1%1
=graph_with_simplified_assets.simplified_assumes at L2%1%1=>L3%1%1 done
=graph_with_simplified_assets.simplified_assumes at L3%1%1=>L4%1%1
=graph_with_simplified_assets.simplified_assumes at L3%1%1=>L4%1%1 done
=graph_with_simplified_assets.simplified_assumes at L4%1%1=>L5%1%1
=graph_with_simplified_assets.simplified_assumes at L4%1%1=>L5%1%1 done
=graph_with_simplified_assets.simplified_assumes at L5%1%1=>L6%1%1
=graph_with_simplified_assets.simplified_assumes at L5%1%1=>L6%1%1 done
=graph_with_simplified_assets.simplified_assumes at L6%1%1=>L1%1%0
=graph_with_simplified_assets.simplified_assumes at L6%1%1=>L1%1%0 done
=graph_with_simplified_assets.simplified_assumes at L6%1%1=>L7%1%0
=graph_with_simplified_assets.simplified_assumes at L6%1%1=>L7%1%0 done
=graph_with_simplified_assets.simplified_assumes at L7%1%0=>L7%1%1
=graph_with_simplified_assets.simplified_assumes at L7%1%0=>L7%1%1 done
=graph_with_simplified_assets.simplified_assumes at L7%1%0=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at L7%1%0=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes at L7%1%1=>L8%1%1
=graph_with_simplified_assets.simplified_assumes at L7%1%1=>L8%1%1 done
=graph_with_simplified_assets.simplified_assumes at L8%1%1=>L9%1%1
=graph_with_simplified_assets.simplified_assumes at L8%1%1=>L9%1%1 done
=graph_with_simplified_assets.simplified_assumes at L9%1%1=>L10%1%1
=graph_with_simplified_assets.simplified_assumes at L9%1%1=>L10%1%1 done
=graph_with_simplified_assets.simplified_assumes at L10%1%1=>L11%1%1
=graph_with_simplified_assets.simplified_assumes at L10%1%1=>L11%1%1 done
=graph_with_simplified_assets.simplified_assumes at L11%1%1=>L12%1%1
=graph_with_simplified_assets.simplified_assumes at L11%1%1=>L12%1%1 done
=graph_with_simplified_assets.simplified_assumes at L12%1%1=>L13%1%1
=graph_with_simplified_assets.simplified_assumes at L12%1%1=>L13%1%1 done
=graph_with_simplified_assets.simplified_assumes at L13%1%1=>L14%1%1
=graph_with_simplified_assets.simplified_assumes at L13%1%1=>L14%1%1 done
=graph_with_simplified_assets.simplified_assumes at L14%1%1=>L15%1%1
=graph_with_simplified_assets.simplified_assumes at L14%1%1=>L15%1%1 done
=graph_with_simplified_assets.simplified_assumes at L15%1%1=>L16%1%1
=graph_with_simplified_assets.simplified_assumes at L15%1%1=>L16%1%1 done
=graph_with_simplified_assets.simplified_assumes at L16%1%1=>L17%1%1
=graph_with_simplified_assets.simplified_assumes at L16%1%1=>L17%1%1 done
=graph_with_simplified_assets.simplified_assumes at L17%1%1=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at L17%1%1=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 3
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 5
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 6
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 7
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1017
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1033
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1043
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 3
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 4
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 5
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 6
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 7
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1012
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1013
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1014
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1017
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1033
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1043
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1012
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1013
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1014
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L1%1%1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L1%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839328 { -127968 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 127968 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 127984 : BV:32
7 : bvuge(5, 6) : BOOL
8 : andnot1(3, 7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839328 { -127968 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 127968 : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : 0 : BV:1
19 : ite(17, 1, 18) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 127968 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 127984 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : or(3, 8) : BOOL
10 : 1 : BV:1
11 : 0 : BV:1
12 : ite(9, 10, 11) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1005
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839328 { -127968 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 127968 : BV:32
17 : eq(2, 16) : BOOL
18 : or(15, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 1, 19) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1006
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 127984 : BV:32
5 : bvuge(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839328 { -127968 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 1, 15) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1008
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 12 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(1, 2, 6, 7, 8) : BV:32
10 : dst_symbol_addr.1 : BV:32
11 : 16 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : select(1, 2, 12, 7, 8) : BV:32
14 : bvadd(9, 13) : BV:32
15 : 8 : BV:32
16 : bvadd(3, 4, 15) : BV:32
17 : select(1, 2, 16, 7, 8) : BV:32
18 : bvadd(10, 4, 5) : BV:32
19 : select(1, 2, 18, 7, 8) : BV:32
20 : bvadd(17, 19) : BV:32
21 : 4 : BV:32
22 : bvadd(3, 21, 4) : BV:32
23 : select(1, 2, 22, 7, 8) : BV:32
24 : bvadd(10, 4, 15) : BV:32
25 : select(1, 2, 24, 7, 8) : BV:32
26 : bvadd(23, 25) : BV:32
27 : bvadd(3, 4) : BV:32
28 : select(1, 2, 27, 7, 8) : BV:32
29 : bvadd(10, 21, 4) : BV:32
30 : select(1, 2, 29, 7, 8) : BV:32
31 : bvadd(28, 30) : BV:32
32 : bvconcat(14, 20, 26, 31) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : 16 : BV:32
8 : bvadd(6, 7) : BV:32
9 : bvextract(8, 2, 2) : BV:1
10 : eq(5, 9) : BOOL
11 : 4294839328 { -127968 } : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(5, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(10, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 5, 17) : BV:1
19 : 10 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : eq(5, 20) : BOOL
22 : ite(21, 5, 17) : BV:1
23 : 9 : INT
24 : 8 : INT
25 : bvextract(1, 23, 24) : BV:2
26 : ite(14, 5, 17) : BV:1
27 : 127968 : BV:32
28 : eq(6, 27) : BOOL
29 : ite(28, 5, 17) : BV:1
30 : 5 : INT
31 : bvextract(1, 30, 30) : BV:1
32 : 4 : INT
33 : bvextract(12, 32, 32) : BV:1
34 : eq(5, 33) : BOOL
35 : bvextract(8, 32, 32) : BV:1
36 : eq(5, 35) : BOOL
37 : xor(34, 36) : BOOL
38 : ite(37, 5, 17) : BV:1
39 : 3 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : 1 : INT
42 : bvextract(1, 41, 41) : BV:1
43 : 127984 : BV:32
44 : bvuge(8, 43) : BOOL
45 : not(44) : BOOL
46 : ite(45, 5, 17) : BV:1
47 : bvconcat(4, 18, 22, 25, 26, 29, 31, 38, 40, 17, 42, 46) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1012
1 : input.dst.exreg.0.0 : BV:32
2 : 127968 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1013
1 : input.dst.exreg.0.0 : BV:32
2 : 127968 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1014
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 127984 : BV:32
5 : bvuge(3, 4) : BOOL
6 : not(5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1032
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : dst_symbol_addr.2 : BV:32
7 : 12 : BV:32
8 : bvadd(6, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : 16 : BV:32
13 : bvadd(3, 4, 12) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(6, 4, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(3, 4, 7) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : 4 : BV:32
23 : bvadd(6, 22, 4) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(3, 4, 16) : BV:32
26 : select(1, 2, 25, 9, 10) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(6, 4) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(3, 22, 4) : BV:32
31 : select(1, 2, 30, 9, 10) : BV:32
32 : bvadd(29, 31) : BV:32
33 : bvconcat(15, 21, 27, 32) : BV:128
34 : 16 : INT
35 : store(1, 2, 5, 33, 34, 10) : ARRAY[BV:32 -> BV:8]
36 : memlabel-mem-heap : MEMLABEL
37 : memmask(35, 36) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1034
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : dst_symbol_addr.2 : BV:32
7 : 12 : BV:32
8 : bvadd(6, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : 16 : BV:32
13 : bvadd(3, 4, 12) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(6, 4, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(3, 4, 7) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : 4 : BV:32
23 : bvadd(6, 22, 4) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(3, 4, 16) : BV:32
26 : select(1, 2, 25, 9, 10) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(6, 4) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(3, 22, 4) : BV:32
31 : select(1, 2, 30, 9, 10) : BV:32
32 : bvadd(29, 31) : BV:32
33 : bvconcat(15, 21, 27, 32) : BV:128
34 : 16 : INT
35 : store(1, 2, 5, 33, 34, 10) : ARRAY[BV:32 -> BV:8]
36 : memlabel-mem-symbol.1.0 : MEMLABEL
37 : memmask(35, 36) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1035
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : dst_symbol_addr.2 : BV:32
7 : 12 : BV:32
8 : bvadd(6, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : 16 : BV:32
13 : bvadd(3, 4, 12) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(6, 4, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(3, 4, 7) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : 4 : BV:32
23 : bvadd(6, 22, 4) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(3, 4, 16) : BV:32
26 : select(1, 2, 25, 9, 10) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(6, 4) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(3, 22, 4) : BV:32
31 : select(1, 2, 30, 9, 10) : BV:32
32 : bvadd(29, 31) : BV:32
33 : bvconcat(15, 21, 27, 32) : BV:128
34 : 16 : INT
35 : store(1, 2, 5, 33, 34, 10) : ARRAY[BV:32 -> BV:8]
36 : memlabel-mem-symbol.2.0 : MEMLABEL
37 : memmask(35, 36) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1036
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : dst_symbol_addr.2 : BV:32
7 : 12 : BV:32
8 : bvadd(6, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : 16 : BV:32
13 : bvadd(3, 4, 12) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(6, 4, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(3, 4, 7) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : 4 : BV:32
23 : bvadd(6, 22, 4) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(3, 4, 16) : BV:32
26 : select(1, 2, 25, 9, 10) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(6, 4) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(3, 22, 4) : BV:32
31 : select(1, 2, 30, 9, 10) : BV:32
32 : bvadd(29, 31) : BV:32
33 : bvconcat(15, 21, 27, 32) : BV:128
34 : 16 : INT
35 : store(1, 2, 5, 33, 34, 10) : ARRAY[BV:32 -> BV:8]
36 : 127996 : BV:32
37 : bvadd(3, 36) : BV:32
38 : select(35, 2, 37, 9, 10) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1037
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : dst_symbol_addr.2 : BV:32
7 : 12 : BV:32
8 : bvadd(6, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : 16 : BV:32
13 : bvadd(3, 4, 12) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(6, 4, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(3, 4, 7) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : 4 : BV:32
23 : bvadd(6, 22, 4) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(3, 4, 16) : BV:32
26 : select(1, 2, 25, 9, 10) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(6, 4) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(3, 22, 4) : BV:32
31 : select(1, 2, 30, 9, 10) : BV:32
32 : bvadd(29, 31) : BV:32
33 : bvconcat(15, 21, 27, 32) : BV:128
34 : 16 : INT
35 : store(1, 2, 5, 33, 34, 10) : ARRAY[BV:32 -> BV:8]
36 : 127992 : BV:32
37 : bvadd(6, 36) : BV:32
38 : select(35, 2, 37, 9, 10) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1038
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : dst_symbol_addr.2 : BV:32
7 : 12 : BV:32
8 : bvadd(6, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : 16 : BV:32
13 : bvadd(3, 4, 12) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(6, 4, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(3, 4, 7) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : 4 : BV:32
23 : bvadd(6, 22, 4) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(3, 4, 16) : BV:32
26 : select(1, 2, 25, 9, 10) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(6, 4) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(3, 22, 4) : BV:32
31 : select(1, 2, 30, 9, 10) : BV:32
32 : bvadd(29, 31) : BV:32
33 : bvconcat(15, 21, 27, 32) : BV:128
34 : 16 : INT
35 : store(1, 2, 5, 33, 34, 10) : ARRAY[BV:32 -> BV:8]
36 : 127992 : BV:32
37 : bvadd(3, 36) : BV:32
38 : select(35, 2, 37, 9, 10) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1039
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : dst_symbol_addr.2 : BV:32
7 : 12 : BV:32
8 : bvadd(6, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : 16 : BV:32
13 : bvadd(3, 4, 12) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(6, 4, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(3, 4, 7) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : 4 : BV:32
23 : bvadd(6, 22, 4) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(3, 4, 16) : BV:32
26 : select(1, 2, 25, 9, 10) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(6, 4) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(3, 22, 4) : BV:32
31 : select(1, 2, 30, 9, 10) : BV:32
32 : bvadd(29, 31) : BV:32
33 : bvconcat(15, 21, 27, 32) : BV:128
34 : 16 : INT
35 : store(1, 2, 5, 33, 34, 10) : ARRAY[BV:32 -> BV:8]
36 : 127988 : BV:32
37 : bvadd(6, 36) : BV:32
38 : select(35, 2, 37, 9, 10) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1040
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : dst_symbol_addr.2 : BV:32
7 : 12 : BV:32
8 : bvadd(6, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : 16 : BV:32
13 : bvadd(3, 4, 12) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(6, 4, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(3, 4, 7) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : 4 : BV:32
23 : bvadd(6, 22, 4) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(3, 4, 16) : BV:32
26 : select(1, 2, 25, 9, 10) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(6, 4) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(3, 22, 4) : BV:32
31 : select(1, 2, 30, 9, 10) : BV:32
32 : bvadd(29, 31) : BV:32
33 : bvconcat(15, 21, 27, 32) : BV:128
34 : 16 : INT
35 : store(1, 2, 5, 33, 34, 10) : ARRAY[BV:32 -> BV:8]
36 : 127984 : BV:32
37 : bvadd(3, 36) : BV:32
38 : select(35, 2, 37, 9, 10) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1041
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : dst_symbol_addr.2 : BV:32
7 : 12 : BV:32
8 : bvadd(6, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : 16 : BV:32
13 : bvadd(3, 4, 12) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(6, 4, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(3, 4, 7) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : 4 : BV:32
23 : bvadd(6, 22, 4) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(3, 4, 16) : BV:32
26 : select(1, 2, 25, 9, 10) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(6, 4) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(3, 22, 4) : BV:32
31 : select(1, 2, 30, 9, 10) : BV:32
32 : bvadd(29, 31) : BV:32
33 : bvconcat(15, 21, 27, 32) : BV:128
34 : 16 : INT
35 : store(1, 2, 5, 33, 34, 10) : ARRAY[BV:32 -> BV:8]
36 : 127984 : BV:32
37 : bvadd(6, 36) : BV:32
38 : select(35, 2, 37, 9, 10) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1042
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : dst_symbol_addr.2 : BV:32
7 : 12 : BV:32
8 : bvadd(6, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : 16 : BV:32
13 : bvadd(3, 4, 12) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(6, 4, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(3, 4, 7) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : 4 : BV:32
23 : bvadd(6, 22, 4) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(3, 4, 16) : BV:32
26 : select(1, 2, 25, 9, 10) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(6, 4) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(3, 22, 4) : BV:32
31 : select(1, 2, 30, 9, 10) : BV:32
32 : bvadd(29, 31) : BV:32
33 : bvconcat(15, 21, 27, 32) : BV:128
34 : 16 : INT
35 : store(1, 2, 5, 33, 34, 10) : ARRAY[BV:32 -> BV:8]
36 : 127988 : BV:32
37 : bvadd(3, 36) : BV:32
38 : select(35, 2, 37, 9, 10) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 for loc_id 1008
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 4 : BV:32
5 : input.dst.exreg.0.0 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 16 : INT
8 : 0 : BOOL
9 : select(1, 2, 6, 7, 8) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 for loc_id 1018
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1008
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 12 : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : 8 : BV:32
19 : bvadd(7, 8, 18) : BV:32
20 : select(5, 6, 19, 11, 12) : BV:32
21 : bvadd(17, 20) : BV:32
22 : 63 : INT
23 : 32 : INT
24 : bvextract(1, 22, 23) : BV:32
25 : 4 : BV:32
26 : bvadd(7, 25, 8) : BV:32
27 : select(5, 6, 26, 11, 12) : BV:32
28 : bvadd(24, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(1, 29, 30) : BV:32
32 : bvadd(7, 8) : BV:32
33 : select(5, 6, 32, 11, 12) : BV:32
34 : bvadd(31, 33) : BV:32
35 : bvconcat(14, 21, 28, 34) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1018
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : ite(15, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1002
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : 4294967280 { -16 } : BV:32
11 : eq(3, 10) : BOOL
12 : not(11) : BOOL
13 : andnot1(9, 12) : BOOL
14 : ite(13, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 4294967280 { -16 } : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : ite(17, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : bvconcat(5, 1) : BV:33
7 : 16 : BV:33
8 : bvadd(6, 7) : BV:33
9 : 32 : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(4, 10) : BOOL
12 : or(3, 11) : BOOL
13 : ite(12, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1005
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 16 : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : 0 : BV:1
11 : bvextract(1, 7, 7) : BV:1
12 : eq(10, 11) : BOOL
13 : eq(4, 11) : BOOL
14 : xor(13, 9) : BOOL
15 : and(12, 14) : BOOL
16 : iff(9, 15) : BOOL
17 : not(16) : BOOL
18 : or(3, 17) : BOOL
19 : ite(18, 4, 10) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1006
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : not(9) : BOOL
11 : ite(10, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : ite(14, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 1 : BV:1
10 : eq(9, 7) : BOOL
11 : 16 : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(9, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(8, 15) : BOOL
17 : ite(16, 9, 5) : BV:1
18 : 10 : INT
19 : bvextract(1, 18, 18) : BV:1
20 : eq(9, 19) : BOOL
21 : ite(20, 9, 5) : BV:1
22 : 9 : INT
23 : 8 : INT
24 : bvextract(1, 22, 23) : BV:2
25 : ite(14, 9, 5) : BV:1
26 : 4294967280 { -16 } : BV:32
27 : eq(6, 26) : BOOL
28 : ite(27, 9, 5) : BV:1
29 : 5 : INT
30 : bvextract(1, 29, 29) : BV:1
31 : 4 : INT
32 : bvextract(12, 31, 31) : BV:1
33 : eq(9, 32) : BOOL
34 : bvextract(6, 31, 31) : BV:1
35 : eq(9, 34) : BOOL
36 : xor(33, 35) : BOOL
37 : ite(36, 9, 5) : BV:1
38 : 3 : INT
39 : bvextract(1, 38, 38) : BV:1
40 : 1 : INT
41 : bvextract(1, 40, 40) : BV:1
42 : bvconcat(5, 6) : BV:33
43 : 16 : BV:33
44 : bvadd(42, 43) : BV:33
45 : 32 : INT
46 : bvextract(44, 45, 45) : BV:1
47 : eq(9, 46) : BOOL
48 : ite(47, 9, 5) : BV:1
49 : bvconcat(4, 17, 21, 24, 25, 28, 30, 37, 39, 5, 41, 48) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1012
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1013
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1014
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : ite(9, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1018
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1032
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-heap : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1034
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-symbol.1.0 : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1035
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1036
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : 127996 : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : select(10, 2, 12, 13, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1037
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : dst_symbol_addr.2 : BV:32
12 : 127992 : BV:32
13 : bvadd(11, 12) : BV:32
14 : 4 : INT
15 : select(10, 2, 13, 14, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1038
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : 127992 : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : select(10, 2, 12, 13, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1039
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : dst_symbol_addr.2 : BV:32
12 : 127988 : BV:32
13 : bvadd(11, 12) : BV:32
14 : 4 : INT
15 : select(10, 2, 13, 14, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1040
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : 127984 : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : select(10, 2, 12, 13, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1041
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : dst_symbol_addr.2 : BV:32
12 : 127984 : BV:32
13 : bvadd(11, 12) : BV:32
14 : 4 : INT
15 : select(10, 2, 13, 14, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1042
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : 127988 : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : select(10, 2, 12, 13, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 : BV:1
15 : ite(13, 1, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(1, 2) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 127984 : BV:32
14 : eq(2, 13) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : eq(1, 2) : BOOL
6 : or(4, 5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1005
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4294839312 { -127984 } : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : bvextract(1, 7, 7) : BV:1
11 : eq(4, 10) : BOOL
12 : xor(11, 9) : BOOL
13 : and(11, 12) : BOOL
14 : iff(9, 13) : BOOL
15 : not(14) : BOOL
16 : or(3, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 4, 17) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1006
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 : BV:1
14 : ite(12, 1, 13) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294839312 { -127984 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 : INT
22 : 8 : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 127984 : BV:32
26 : eq(6, 25) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1012
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1013
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1014
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L1%1%0
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L1%1%0 for loc_id 1018
1 : input.dst.exreg.6.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L1%1%0 for loc_id 1019
1 : input.dst.exreg.7.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L1%1%0 for loc_id 1020
1 : input.dst.exreg.16.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L1%1%0 for loc_id 1021
1 : input.dst.exreg.8.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L1%1%0 for loc_id 1022
1 : input.dst.exreg.9.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L1%1%0 for loc_id 1023
1 : input.dst.exreg.10.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L1%1%0 for loc_id 1024
1 : input.dst.exreg.11.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L1%1%0 for loc_id 1025
1 : input.dst.exreg.12.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L1%1%0 for loc_id 1026
1 : input.dst.exreg.13.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L1%1%0 for loc_id 1027
1 : input.dst.exreg.14.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L1%1%0 for loc_id 1028
1 : input.dst.exreg.15.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L1%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1018
1 : input.dst.exreg.6.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1019
1 : input.dst.exreg.7.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1020
1 : input.dst.exreg.16.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1021
1 : input.dst.exreg.8.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1022
1 : input.dst.exreg.9.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1023
1 : input.dst.exreg.10.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1024
1 : input.dst.exreg.11.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1025
1 : input.dst.exreg.12.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1026
1 : input.dst.exreg.13.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1027
1 : input.dst.exreg.14.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1028
1 : input.dst.exreg.15.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>L7%1%1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>L7%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1012
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1013
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1014
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1015
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1016
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1018
1 : input.dst.exreg.5.2 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1019
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1021
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1022
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1023
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1024
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1025
1 : input.dst.exreg.0.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1032
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127984 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 127988 : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : dst_symbol_addr.2 : BV:32
12 : bvadd(11, 4) : BV:32
13 : select(1, 2, 12, 8, 9) : BV:32
14 : bvadd(10, 13) : BV:32
15 : store(1, 2, 5, 14, 8, 9) : ARRAY[BV:32 -> BV:8]
16 : 127992 : BV:32
17 : bvadd(3, 16) : BV:32
18 : select(1, 2, 17, 8, 9) : BV:32
19 : bvadd(11, 6) : BV:32
20 : select(15, 2, 19, 8, 9) : BV:32
21 : bvadd(18, 20) : BV:32
22 : store(15, 2, 7, 21, 8, 9) : ARRAY[BV:32 -> BV:8]
23 : 127996 : BV:32
24 : bvadd(3, 23) : BV:32
25 : select(1, 2, 24, 8, 9) : BV:32
26 : bvadd(11, 16) : BV:32
27 : select(22, 2, 26, 8, 9) : BV:32
28 : bvadd(25, 27) : BV:32
29 : store(22, 2, 17, 28, 8, 9) : ARRAY[BV:32 -> BV:8]
30 : memlabel-mem-heap : MEMLABEL
31 : memmask(29, 30) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1034
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127984 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 127988 : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : dst_symbol_addr.2 : BV:32
12 : bvadd(11, 4) : BV:32
13 : select(1, 2, 12, 8, 9) : BV:32
14 : bvadd(10, 13) : BV:32
15 : store(1, 2, 5, 14, 8, 9) : ARRAY[BV:32 -> BV:8]
16 : 127992 : BV:32
17 : bvadd(3, 16) : BV:32
18 : select(1, 2, 17, 8, 9) : BV:32
19 : bvadd(11, 6) : BV:32
20 : select(15, 2, 19, 8, 9) : BV:32
21 : bvadd(18, 20) : BV:32
22 : store(15, 2, 7, 21, 8, 9) : ARRAY[BV:32 -> BV:8]
23 : 127996 : BV:32
24 : bvadd(3, 23) : BV:32
25 : select(1, 2, 24, 8, 9) : BV:32
26 : bvadd(11, 16) : BV:32
27 : select(22, 2, 26, 8, 9) : BV:32
28 : bvadd(25, 27) : BV:32
29 : store(22, 2, 17, 28, 8, 9) : ARRAY[BV:32 -> BV:8]
30 : memlabel-mem-symbol.1.0 : MEMLABEL
31 : memmask(29, 30) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1035
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127984 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 127988 : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : dst_symbol_addr.2 : BV:32
12 : bvadd(11, 4) : BV:32
13 : select(1, 2, 12, 8, 9) : BV:32
14 : bvadd(10, 13) : BV:32
15 : store(1, 2, 5, 14, 8, 9) : ARRAY[BV:32 -> BV:8]
16 : 127992 : BV:32
17 : bvadd(3, 16) : BV:32
18 : select(1, 2, 17, 8, 9) : BV:32
19 : bvadd(11, 6) : BV:32
20 : select(15, 2, 19, 8, 9) : BV:32
21 : bvadd(18, 20) : BV:32
22 : store(15, 2, 7, 21, 8, 9) : ARRAY[BV:32 -> BV:8]
23 : 127996 : BV:32
24 : bvadd(3, 23) : BV:32
25 : select(1, 2, 24, 8, 9) : BV:32
26 : bvadd(11, 16) : BV:32
27 : select(22, 2, 26, 8, 9) : BV:32
28 : bvadd(25, 27) : BV:32
29 : store(22, 2, 17, 28, 8, 9) : ARRAY[BV:32 -> BV:8]
30 : memlabel-mem-symbol.2.0 : MEMLABEL
31 : memmask(29, 30) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1037
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127984 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 127988 : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : dst_symbol_addr.2 : BV:32
12 : bvadd(11, 4) : BV:32
13 : select(1, 2, 12, 8, 9) : BV:32
14 : bvadd(10, 13) : BV:32
15 : store(1, 2, 5, 14, 8, 9) : ARRAY[BV:32 -> BV:8]
16 : 127992 : BV:32
17 : bvadd(3, 16) : BV:32
18 : select(1, 2, 17, 8, 9) : BV:32
19 : bvadd(11, 6) : BV:32
20 : select(15, 2, 19, 8, 9) : BV:32
21 : bvadd(18, 20) : BV:32
22 : store(15, 2, 7, 21, 8, 9) : ARRAY[BV:32 -> BV:8]
23 : 127996 : BV:32
24 : bvadd(3, 23) : BV:32
25 : select(1, 2, 24, 8, 9) : BV:32
26 : bvadd(11, 16) : BV:32
27 : select(22, 2, 26, 8, 9) : BV:32
28 : bvadd(25, 27) : BV:32
29 : store(22, 2, 17, 28, 8, 9) : ARRAY[BV:32 -> BV:8]
30 : select(29, 2, 26, 8, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1038
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127996 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
9 : 127984 : BV:32
10 : bvadd(3, 9) : BV:32
11 : 127988 : BV:32
12 : bvadd(3, 11) : BV:32
13 : select(1, 2, 12, 6, 7) : BV:32
14 : dst_symbol_addr.2 : BV:32
15 : bvadd(14, 9) : BV:32
16 : select(1, 2, 15, 6, 7) : BV:32
17 : bvadd(13, 16) : BV:32
18 : store(1, 2, 10, 17, 6, 7) : ARRAY[BV:32 -> BV:8]
19 : 127992 : BV:32
20 : bvadd(3, 19) : BV:32
21 : select(1, 2, 20, 6, 7) : BV:32
22 : bvadd(14, 11) : BV:32
23 : select(18, 2, 22, 6, 7) : BV:32
24 : bvadd(21, 23) : BV:32
25 : store(18, 2, 12, 24, 6, 7) : ARRAY[BV:32 -> BV:8]
26 : bvadd(14, 19) : BV:32
27 : select(25, 2, 26, 6, 7) : BV:32
28 : bvadd(8, 27) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1039
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127984 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 127988 : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : dst_symbol_addr.2 : BV:32
12 : bvadd(11, 4) : BV:32
13 : select(1, 2, 12, 8, 9) : BV:32
14 : bvadd(10, 13) : BV:32
15 : store(1, 2, 5, 14, 8, 9) : ARRAY[BV:32 -> BV:8]
16 : 127992 : BV:32
17 : bvadd(3, 16) : BV:32
18 : select(1, 2, 17, 8, 9) : BV:32
19 : bvadd(11, 6) : BV:32
20 : select(15, 2, 19, 8, 9) : BV:32
21 : bvadd(18, 20) : BV:32
22 : store(15, 2, 7, 21, 8, 9) : ARRAY[BV:32 -> BV:8]
23 : 127996 : BV:32
24 : bvadd(3, 23) : BV:32
25 : select(1, 2, 24, 8, 9) : BV:32
26 : bvadd(11, 16) : BV:32
27 : select(22, 2, 26, 8, 9) : BV:32
28 : bvadd(25, 27) : BV:32
29 : store(22, 2, 17, 28, 8, 9) : ARRAY[BV:32 -> BV:8]
30 : select(29, 2, 19, 8, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1040
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
9 : dst_symbol_addr.2 : BV:32
10 : 127984 : BV:32
11 : bvadd(9, 10) : BV:32
12 : select(1, 2, 11, 6, 7) : BV:32
13 : bvadd(8, 12) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1041
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127984 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 127988 : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : dst_symbol_addr.2 : BV:32
12 : bvadd(11, 4) : BV:32
13 : select(1, 2, 12, 8, 9) : BV:32
14 : bvadd(10, 13) : BV:32
15 : store(1, 2, 5, 14, 8, 9) : ARRAY[BV:32 -> BV:8]
16 : 127992 : BV:32
17 : bvadd(3, 16) : BV:32
18 : select(1, 2, 17, 8, 9) : BV:32
19 : bvadd(11, 6) : BV:32
20 : select(15, 2, 19, 8, 9) : BV:32
21 : bvadd(18, 20) : BV:32
22 : store(15, 2, 7, 21, 8, 9) : ARRAY[BV:32 -> BV:8]
23 : 127996 : BV:32
24 : bvadd(3, 23) : BV:32
25 : select(1, 2, 24, 8, 9) : BV:32
26 : bvadd(11, 16) : BV:32
27 : select(22, 2, 26, 8, 9) : BV:32
28 : bvadd(25, 27) : BV:32
29 : store(22, 2, 17, 28, 8, 9) : ARRAY[BV:32 -> BV:8]
30 : select(29, 2, 12, 8, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1042
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127992 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
9 : 127984 : BV:32
10 : bvadd(3, 9) : BV:32
11 : 127988 : BV:32
12 : bvadd(3, 11) : BV:32
13 : select(1, 2, 12, 6, 7) : BV:32
14 : dst_symbol_addr.2 : BV:32
15 : bvadd(14, 9) : BV:32
16 : select(1, 2, 15, 6, 7) : BV:32
17 : bvadd(13, 16) : BV:32
18 : store(1, 2, 10, 17, 6, 7) : ARRAY[BV:32 -> BV:8]
19 : bvadd(14, 11) : BV:32
20 : select(18, 2, 19, 6, 7) : BV:32
21 : bvadd(8, 20) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1018
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 127984 : BV:32
6 : bvadd(4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(2, 3, 6, 7, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 127984 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : not(22) : BOOL
24 : 0 : BV:1
25 : ite(23, 1, 24) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 127984 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : bvconcat(14, 1) : BV:33
16 : bvconcat(14, 10) : BV:33
17 : bvadd(15, 16) : BV:33
18 : 32 : INT
19 : bvextract(17, 18, 18) : BV:1
20 : eq(13, 19) : BOOL
21 : not(20) : BOOL
22 : andnot1(12, 21) : BOOL
23 : ite(22, 13, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 127984 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : 4294967295 { -1 } : BV:32
24 : bvmul(23, 10) : BV:32
25 : eq(2, 24) : BOOL
26 : andnot2(22, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 1, 27) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 127984 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : bvconcat(14, 1) : BV:33
16 : bvconcat(14, 10) : BV:33
17 : bvadd(15, 16) : BV:33
18 : 32 : INT
19 : bvextract(17, 18, 18) : BV:1
20 : eq(13, 19) : BOOL
21 : or(12, 20) : BOOL
22 : ite(21, 13, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1005
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 127984 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : not(22) : BOOL
24 : 4294967295 { -1 } : BV:32
25 : bvmul(24, 10) : BV:32
26 : eq(2, 25) : BOOL
27 : or(23, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 1, 28) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1006
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 127984 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:32
13 : bvconcat(2, 12) : BV:33
14 : bvadd(4, 13) : BV:33
15 : 32 : INT
16 : bvextract(14, 15, 15) : BV:1
17 : eq(1, 16) : BOOL
18 : not(17) : BOOL
19 : ite(18, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 127984 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : 0 : BV:1
24 : ite(22, 1, 23) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : input.dst.mem : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
11 : dst_symbol_addr.2 : BV:32
12 : 127984 : BV:32
13 : bvadd(11, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(9, 10, 13, 14, 15) : BV:32
17 : bvextract(16, 2, 2) : BV:1
18 : eq(5, 17) : BOOL
19 : iff(8, 18) : BOOL
20 : bvadd(6, 16) : BV:32
21 : bvextract(20, 2, 2) : BV:1
22 : eq(5, 21) : BOOL
23 : xor(8, 22) : BOOL
24 : and(19, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 5, 25) : BV:1
27 : 10 : INT
28 : bvextract(1, 27, 27) : BV:1
29 : eq(5, 28) : BOOL
30 : ite(29, 5, 25) : BV:1
31 : 9 : INT
32 : 8 : INT
33 : bvextract(1, 31, 32) : BV:2
34 : ite(22, 5, 25) : BV:1
35 : 4294967295 { -1 } : BV:32
36 : bvmul(35, 16) : BV:32
37 : eq(6, 36) : BOOL
38 : ite(37, 5, 25) : BV:1
39 : 5 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvextract(20, 14, 14) : BV:1
42 : eq(5, 41) : BOOL
43 : bvextract(6, 14, 14) : BV:1
44 : eq(5, 43) : BOOL
45 : xor(42, 44) : BOOL
46 : ite(45, 5, 25) : BV:1
47 : 3 : INT
48 : bvextract(1, 47, 47) : BV:1
49 : 1 : INT
50 : bvextract(1, 49, 49) : BV:1
51 : bvconcat(25, 6) : BV:33
52 : bvconcat(25, 16) : BV:33
53 : bvadd(51, 52) : BV:33
54 : 32 : INT
55 : bvextract(53, 54, 54) : BV:1
56 : eq(5, 55) : BOOL
57 : ite(56, 5, 25) : BV:1
58 : bvconcat(4, 26, 30, 33, 34, 38, 40, 46, 48, 25, 50, 57) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1012
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 127984 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1013
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 127984 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : not(12) : BOOL
14 : 1 : BV:1
15 : 0 : BV:1
16 : ite(13, 14, 15) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1014
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 127984 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:32
13 : bvconcat(2, 12) : BV:33
14 : bvadd(4, 13) : BV:33
15 : 32 : INT
16 : bvextract(14, 15, 15) : BV:1
17 : eq(1, 16) : BOOL
18 : ite(17, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1018
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1018
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1032
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127984 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-heap : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1034
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127984 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.1.0 : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1035
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127984 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.2.0 : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1037
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127984 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.2 : BV:32
11 : 127992 : BV:32
12 : bvadd(10, 11) : BV:32
13 : select(9, 2, 12, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1039
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127984 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.2 : BV:32
11 : 127988 : BV:32
12 : bvadd(10, 11) : BV:32
13 : select(9, 2, 12, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1040
1 : input.dst.exreg.0.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1041
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127984 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.2 : BV:32
11 : bvadd(10, 4) : BV:32
12 : select(9, 2, 11, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 1018
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : dst_symbol_addr.1 : BV:32
5 : 127992 : BV:32
6 : bvadd(4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(2, 3, 6, 7, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127992 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : not(22) : BOOL
24 : 0 : BV:1
25 : ite(23, 1, 24) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127992 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : bvconcat(14, 1) : BV:33
16 : bvconcat(14, 10) : BV:33
17 : bvadd(15, 16) : BV:33
18 : 32 : INT
19 : bvextract(17, 18, 18) : BV:1
20 : eq(13, 19) : BOOL
21 : not(20) : BOOL
22 : andnot1(12, 21) : BOOL
23 : ite(22, 13, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127992 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : 4294967295 { -1 } : BV:32
24 : bvmul(23, 10) : BV:32
25 : eq(2, 24) : BOOL
26 : andnot2(22, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 1, 27) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127992 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : bvconcat(14, 1) : BV:33
16 : bvconcat(14, 10) : BV:33
17 : bvadd(15, 16) : BV:33
18 : 32 : INT
19 : bvextract(17, 18, 18) : BV:1
20 : eq(13, 19) : BOOL
21 : or(12, 20) : BOOL
22 : ite(21, 13, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1005
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127992 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : not(22) : BOOL
24 : 4294967295 { -1 } : BV:32
25 : bvmul(24, 10) : BV:32
26 : eq(2, 25) : BOOL
27 : or(23, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 1, 28) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1006
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : 127992 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:32
13 : bvconcat(2, 12) : BV:33
14 : bvadd(4, 13) : BV:33
15 : 32 : INT
16 : bvextract(14, 15, 15) : BV:1
17 : eq(1, 16) : BOOL
18 : not(17) : BOOL
19 : ite(18, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127992 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : 0 : BV:1
24 : ite(22, 1, 23) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : input.dst.mem : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
11 : dst_symbol_addr.1 : BV:32
12 : 127992 : BV:32
13 : bvadd(11, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(9, 10, 13, 14, 15) : BV:32
17 : bvextract(16, 2, 2) : BV:1
18 : eq(5, 17) : BOOL
19 : iff(8, 18) : BOOL
20 : bvadd(6, 16) : BV:32
21 : bvextract(20, 2, 2) : BV:1
22 : eq(5, 21) : BOOL
23 : xor(8, 22) : BOOL
24 : and(19, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 5, 25) : BV:1
27 : 10 : INT
28 : bvextract(1, 27, 27) : BV:1
29 : eq(5, 28) : BOOL
30 : ite(29, 5, 25) : BV:1
31 : 9 : INT
32 : 8 : INT
33 : bvextract(1, 31, 32) : BV:2
34 : ite(22, 5, 25) : BV:1
35 : 4294967295 { -1 } : BV:32
36 : bvmul(35, 16) : BV:32
37 : eq(6, 36) : BOOL
38 : ite(37, 5, 25) : BV:1
39 : 5 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvextract(20, 14, 14) : BV:1
42 : eq(5, 41) : BOOL
43 : bvextract(6, 14, 14) : BV:1
44 : eq(5, 43) : BOOL
45 : xor(42, 44) : BOOL
46 : ite(45, 5, 25) : BV:1
47 : 3 : INT
48 : bvextract(1, 47, 47) : BV:1
49 : 1 : INT
50 : bvextract(1, 49, 49) : BV:1
51 : bvconcat(25, 6) : BV:33
52 : bvconcat(25, 16) : BV:33
53 : bvadd(51, 52) : BV:33
54 : 32 : INT
55 : bvextract(53, 54, 54) : BV:1
56 : eq(5, 55) : BOOL
57 : ite(56, 5, 25) : BV:1
58 : bvconcat(4, 26, 30, 33, 34, 38, 40, 46, 48, 25, 50, 57) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1012
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127992 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1013
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127992 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : not(12) : BOOL
14 : 1 : BV:1
15 : 0 : BV:1
16 : ite(13, 14, 15) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1014
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : 127992 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:32
13 : bvconcat(2, 12) : BV:33
14 : bvadd(4, 13) : BV:33
15 : 32 : INT
16 : bvextract(14, 15, 15) : BV:1
17 : eq(1, 16) : BOOL
18 : ite(17, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1018
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1018
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1032
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-heap : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1034
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.1.0 : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1035
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.2.0 : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1037
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.2 : BV:32
11 : 127992 : BV:32
12 : bvadd(10, 11) : BV:32
13 : select(9, 2, 12, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1039
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.2 : BV:32
11 : bvadd(10, 4) : BV:32
12 : select(9, 2, 11, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1041
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.2 : BV:32
11 : 127984 : BV:32
12 : bvadd(10, 11) : BV:32
13 : select(9, 2, 12, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1042
1 : input.dst.exreg.0.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L13%1%1=>L14%1%1
=graph_with_simplified_assets.loc_to_expr_map at L13%1%1=>L14%1%1 for loc_id 0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127992 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L13%1%1=>L14%1%1 for loc_id 1018
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L13%1%1=>L14%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : dst_symbol_addr.1 : BV:32
5 : 127996 : BV:32
6 : bvadd(4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(2, 3, 6, 7, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : not(22) : BOOL
24 : 0 : BV:1
25 : ite(23, 1, 24) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : bvconcat(14, 1) : BV:33
16 : bvconcat(14, 10) : BV:33
17 : bvadd(15, 16) : BV:33
18 : 32 : INT
19 : bvextract(17, 18, 18) : BV:1
20 : eq(13, 19) : BOOL
21 : not(20) : BOOL
22 : andnot1(12, 21) : BOOL
23 : ite(22, 13, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : 4294967295 { -1 } : BV:32
24 : bvmul(23, 10) : BV:32
25 : eq(2, 24) : BOOL
26 : andnot2(22, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 1, 27) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : bvconcat(14, 1) : BV:33
16 : bvconcat(14, 10) : BV:33
17 : bvadd(15, 16) : BV:33
18 : 32 : INT
19 : bvextract(17, 18, 18) : BV:1
20 : eq(13, 19) : BOOL
21 : or(12, 20) : BOOL
22 : ite(21, 13, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 1005
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : not(22) : BOOL
24 : 4294967295 { -1 } : BV:32
25 : bvmul(24, 10) : BV:32
26 : eq(2, 25) : BOOL
27 : or(23, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 1, 28) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 1006
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : 127996 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:32
13 : bvconcat(2, 12) : BV:33
14 : bvadd(4, 13) : BV:33
15 : 32 : INT
16 : bvextract(14, 15, 15) : BV:1
17 : eq(1, 16) : BOOL
18 : not(17) : BOOL
19 : ite(18, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : 0 : BV:1
24 : ite(22, 1, 23) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : input.dst.mem : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
11 : dst_symbol_addr.1 : BV:32
12 : 127996 : BV:32
13 : bvadd(11, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(9, 10, 13, 14, 15) : BV:32
17 : bvextract(16, 2, 2) : BV:1
18 : eq(5, 17) : BOOL
19 : iff(8, 18) : BOOL
20 : bvadd(6, 16) : BV:32
21 : bvextract(20, 2, 2) : BV:1
22 : eq(5, 21) : BOOL
23 : xor(8, 22) : BOOL
24 : and(19, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 5, 25) : BV:1
27 : 10 : INT
28 : bvextract(1, 27, 27) : BV:1
29 : eq(5, 28) : BOOL
30 : ite(29, 5, 25) : BV:1
31 : 9 : INT
32 : 8 : INT
33 : bvextract(1, 31, 32) : BV:2
34 : ite(22, 5, 25) : BV:1
35 : 4294967295 { -1 } : BV:32
36 : bvmul(35, 16) : BV:32
37 : eq(6, 36) : BOOL
38 : ite(37, 5, 25) : BV:1
39 : 5 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvextract(20, 14, 14) : BV:1
42 : eq(5, 41) : BOOL
43 : bvextract(6, 14, 14) : BV:1
44 : eq(5, 43) : BOOL
45 : xor(42, 44) : BOOL
46 : ite(45, 5, 25) : BV:1
47 : 3 : INT
48 : bvextract(1, 47, 47) : BV:1
49 : 1 : INT
50 : bvextract(1, 49, 49) : BV:1
51 : bvconcat(25, 6) : BV:33
52 : bvconcat(25, 16) : BV:33
53 : bvadd(51, 52) : BV:33
54 : 32 : INT
55 : bvextract(53, 54, 54) : BV:1
56 : eq(5, 55) : BOOL
57 : ite(56, 5, 25) : BV:1
58 : bvconcat(4, 26, 30, 33, 34, 38, 40, 46, 48, 25, 50, 57) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 1012
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 1013
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : not(12) : BOOL
14 : 1 : BV:1
15 : 0 : BV:1
16 : ite(13, 14, 15) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 1014
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : 127996 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:32
13 : bvconcat(2, 12) : BV:33
14 : bvadd(4, 13) : BV:33
15 : 32 : INT
16 : bvextract(14, 15, 15) : BV:1
17 : eq(1, 16) : BOOL
18 : ite(17, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 1018
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1018
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1032
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127992 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-heap : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1034
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127992 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.1.0 : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1035
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127992 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.2.0 : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1037
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127992 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.2 : BV:32
11 : bvadd(10, 4) : BV:32
12 : select(9, 2, 11, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1038
1 : input.dst.exreg.0.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1039
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127992 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.2 : BV:32
11 : 127988 : BV:32
12 : bvadd(10, 11) : BV:32
13 : select(9, 2, 12, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1041
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127992 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.2 : BV:32
11 : 127984 : BV:32
12 : bvadd(10, 11) : BV:32
13 : select(9, 2, 12, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1012
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1013
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1014
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>E0%0%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>E0%0%1 for loc_id 1015
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>E0%0%1 for loc_id 1016
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>E0%0%1 for loc_id 1018
1 : input.dst.exreg.5.2 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>E0%0%1 for loc_id 1019
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>E0%0%1 for loc_id 1021
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>E0%0%1 for loc_id 1022
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>E0%0%1 for loc_id 1023
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>E0%0%1 for loc_id 1024
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>E0%0%1 for loc_id 1025
1 : input.dst.exreg.0.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in dst
=Loc 0 in dst.
REGMEM
dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=Loc 2 in dst.
REGMEM
dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=Loc 3 in dst.
REGMEM
dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=Loc 4 in dst.
REGMEM
dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=Loc 5 in dst.
REGMEM
dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=Loc 6 in dst.
REGMEM
dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=Loc 7 in dst.
REGMEM
dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=Loc 1001 in dst.
REGMEM
dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=Loc 1002 in dst.
REGMEM
dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=Loc 1003 in dst.
REGMEM
dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=Loc 1004 in dst.
REGMEM
dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=Loc 1005 in dst.
REGMEM
dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=Loc 1006 in dst.
REGMEM
dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=Loc 1007 in dst.
REGMEM
dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=Loc 1008 in dst.
REGMEM
dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=Loc 1009 in dst.
REGMEM
dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=Loc 1010 in dst.
REGMEM
dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=Loc 1011 in dst.
REGMEM
dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=Loc 1012 in dst.
REGMEM
dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=Loc 1013 in dst.
REGMEM
dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=Loc 1014 in dst.
REGMEM
dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=Loc 1015 in dst.
LLVMVAR
dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=Loc 1016 in dst.
REGMEM
dst.esp.E0%0%1
1 : input.dst.esp.E0%0%1 : BV:32
=Loc 1017 in dst.
REGMEM
dst.esp.L0%1%1
1 : input.dst.esp.L0%1%1 : BV:32
=Loc 1018 in dst.
REGMEM
dst.hidden_reg.0
1 : input.dst.hidden_reg.0 : BV:32
=Loc 1019 in dst.
REGMEM
dst.hidden_reg.1
1 : input.dst.hidden_reg.1 : BOOL
=Loc 1020 in dst.
REGMEM
dst.hidden_reg.10
1 : input.dst.hidden_reg.10 : BOOL
=Loc 1021 in dst.
REGMEM
dst.hidden_reg.2
1 : input.dst.hidden_reg.2 : BOOL
=Loc 1022 in dst.
REGMEM
dst.hidden_reg.3
1 : input.dst.hidden_reg.3 : BOOL
=Loc 1023 in dst.
REGMEM
dst.hidden_reg.4
1 : input.dst.hidden_reg.4 : BOOL
=Loc 1024 in dst.
REGMEM
dst.hidden_reg.5
1 : input.dst.hidden_reg.5 : BOOL
=Loc 1025 in dst.
REGMEM
dst.hidden_reg.6
1 : input.dst.hidden_reg.6 : BOOL
=Loc 1026 in dst.
REGMEM
dst.hidden_reg.7
1 : input.dst.hidden_reg.7 : BOOL
=Loc 1027 in dst.
REGMEM
dst.hidden_reg.8
1 : input.dst.hidden_reg.8 : BOOL
=Loc 1028 in dst.
REGMEM
dst.hidden_reg.9
1 : input.dst.hidden_reg.9 : BOOL
=Loc 1029 in dst.
REGMEM
econd
1 : input.econd : BOOL
=Loc 1032 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-heap
=Loc 1033 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-esp
=Loc 1034 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-symbol.1.0
=Loc 1035 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-symbol.2.0
=Loc 1036 in dst.
SLOT
=memname
dst.mem
=addr
1 : dst_symbol_addr.1 : BV:32
2 : 127996 : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
4
=bigendian
false
=Loc 1037 in dst.
SLOT
=memname
dst.mem
=addr
1 : dst_symbol_addr.2 : BV:32
2 : 127992 : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
4
=bigendian
false
=Loc 1038 in dst.
SLOT
=memname
dst.mem
=addr
1 : dst_symbol_addr.1 : BV:32
2 : 127992 : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
4
=bigendian
false
=Loc 1039 in dst.
SLOT
=memname
dst.mem
=addr
1 : dst_symbol_addr.2 : BV:32
2 : 127988 : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
4
=bigendian
false
=Loc 1040 in dst.
SLOT
=memname
dst.mem
=addr
1 : dst_symbol_addr.1 : BV:32
2 : 127984 : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
4
=bigendian
false
=Loc 1041 in dst.
SLOT
=memname
dst.mem
=addr
1 : dst_symbol_addr.2 : BV:32
2 : 127984 : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
4
=bigendian
false
=Loc 1042 in dst.
SLOT
=memname
dst.mem
=addr
1 : dst_symbol_addr.1 : BV:32
2 : 127988 : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
4
=bigendian
false
=Loc 1043 in dst.
SLOT
=memname
dst.mem
=addr
1 : input_stack_pointer_const : BV:32
=nbytes
4
=bigendian
false

=Alias analysis results in dst
=Alias analysis result in dst at L0%0%1
=Alias analysis result in dst at L0%0%1 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 3 (input.dst.exreg.0.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 4 (input.dst.exreg.0.4)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 5 (input.dst.exreg.0.5)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 6 (input.dst.exreg.0.6)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 7 (input.dst.exreg.0.7)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1009 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1010 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1011 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1012 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1013 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1014 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1015 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1016 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1017 (input.dst.esp.L0%1%1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1018 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1019 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1020 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1021 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1022 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1023 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1024 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1025 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1026 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1027 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1028 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1029 (input.econd)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1032 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1033 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1034 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1035 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1036 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 127996), 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1037 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.2, 127992), 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1038 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 127992), 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1039 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.2, 127988), 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1040 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 127984), 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1041 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.2, 127984), 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1042 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 127988), 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1043 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
nullptr
=Alias analysis result in dst at L1%1%0
=Alias analysis result in dst at L1%1%0 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L1%1%0 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L1%1%0 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L1%1%0 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L1%1%0 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L1%1%0 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1009 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1010 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1011 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1012 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1013 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1014 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1015 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1016 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1017 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L1%1%0 for loc 1018 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1019 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1020 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1021 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1022 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1023 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1024 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1025 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1026 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1027 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1028 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1029 (input.econd)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1032 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1033 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1034 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1035 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1036 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 127996), 4, false))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1037 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.2, 127992), 4, false))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1038 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 127992), 4, false))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1039 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.2, 127988), 4, false))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1040 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 127984), 4, false))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1041 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.2, 127984), 4, false))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1042 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 127988), 4, false))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1043 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L6%1%1
=Alias analysis result in dst at L6%1%1 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L6%1%1 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L6%1%1 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L6%1%1 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L6%1%1 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L6%1%1 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1009 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1010 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1011 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1012 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1013 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1014 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1015 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1016 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1017 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L6%1%1 for loc 1018 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1019 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1020 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1021 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1022 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1023 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1024 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1025 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1026 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1027 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1028 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1029 (input.econd)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1032 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1033 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1034 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1035 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1036 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 127996), 4, false))
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1037 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.2, 127992), 4, false))
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1038 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 127992), 4, false))
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1039 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.2, 127988), 4, false))
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1040 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 127984), 4, false))
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1041 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.2, 127984), 4, false))
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1042 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 127988), 4, false))
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1043 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L7%1%0
=Alias analysis result in dst at L7%1%0 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L7%1%0 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L7%1%0 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L7%1%0 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L7%1%0 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L7%1%0 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1009 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1010 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1011 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1012 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1013 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1014 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1015 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1016 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1017 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L7%1%0 for loc 1018 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1019 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1020 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1021 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1022 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1023 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1024 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1025 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1026 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1027 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1028 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1029 (input.econd)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1032 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1033 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1034 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1035 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1036 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 127996), 4, false))
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1037 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.2, 127992), 4, false))
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1038 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 127992), 4, false))
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1039 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.2, 127988), 4, false))
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1040 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 127984), 4, false))
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1041 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.2, 127984), 4, false))
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1042 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 127988), 4, false))
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1043 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1
=Alias analysis result in dst at E0%0%1 for loc 0 (input.dst.exreg.0.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 1001 (input.dst.exreg.10.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1002 (input.dst.exreg.11.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1003 (input.dst.exreg.12.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1004 (input.dst.exreg.13.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1005 (input.dst.exreg.14.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1006 (input.dst.exreg.15.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1007 (input.dst.exreg.16.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1009 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1010 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1011 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1012 (input.dst.exreg.7.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1013 (input.dst.exreg.8.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1014 (input.dst.exreg.9.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1015 (input.dst.llvm-indir_tgt)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 1016 (input.dst.esp.E0%0%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 1017 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 1018 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1019 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1020 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1021 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1022 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1023 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1024 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1025 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1026 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1027 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1028 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1029 (input.econd)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1032 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1033 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1034 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1035 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1036 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 127996), 4, false))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1037 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.2, 127992), 4, false))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1038 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 127992), 4, false))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1039 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.2, 127988), 4, false))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1040 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 127984), 4, false))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1041 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.2, 127984), 4, false))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1042 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 127988), 4, false))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1043 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )

=Liveness in dst
=live locs at L0%0%1
1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042
=live locs at L1%1%0
0, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042
=live locs at L6%1%1
0, 1013, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042
=live locs at L7%1%0
1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042
=live locs at E0%0%1
0, 1015, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042

=Available expressions in dst

=sprel_maps in dst
=sprel_map at L0%0%1 in dst
=sprel_map at L1%1%0 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1017
17386 : input_stack_pointer_const : BV:32
=loc 1043
17387 : retaddr_const : BV:32
=sprel_map at L6%1%1 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1017
17386 : input_stack_pointer_const : BV:32
=loc 1043
17387 : retaddr_const : BV:32
=sprel_map at L7%1%0 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1017
17386 : input_stack_pointer_const : BV:32
=loc 1043
17387 : retaddr_const : BV:32
=sprel_map at E0%0%1 in dst
=loc 0
17389 : 0 : BV:32
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
17425 : 4 : BV:32
18344 : bvadd(17386, 17425) : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1001
17619 : 0 : BV:1
=loc 1002
17619 : 0 : BV:1
=loc 1003
17619 : 0 : BV:1
=loc 1004
17616 : 1 : BV:1
=loc 1005
17616 : 1 : BV:1
=loc 1006
17616 : 1 : BV:1
=loc 1007
17616 : 1 : BV:1
=loc 1012
17616 : 1 : BV:1
=loc 1013
17619 : 0 : BV:1
=loc 1014
17619 : 0 : BV:1
=loc 1015
17387 : retaddr_const : BV:32
=loc 1016
17386 : input_stack_pointer_const : BV:32
17425 : 4 : BV:32
18344 : bvadd(17386, 17425) : BV:32
=loc 1017
17386 : input_stack_pointer_const : BV:32
=loc 1043
17387 : retaddr_const : BV:32
=graph_with_aliasing_done
=String-contents:
=Nextpc-map:
=TFGdone
=eqcheck_info
=eqcheck
=proof_filename s121_s121.gcc.eqchecker.O3.i386.ALL.proof
=function_name s121
=fixed_reg_mappings begin
0 : 0 : 0
0 : 4 : 4
=fixed_reg_mappings end
=rodata_map begin
=rodata_map end
=dst_iseq
.i0: xorl %exvr0.0d,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i1: movdqu %exvr5.3w:C_SYMBOL0*1+4/umask/32(%exvr0.0d),%exvr2.0 #
.i2: paddd %exvr5.3w:C_SYMBOL1(%exvr0.0d),%exvr2.0 #
.i3: addl $0x10,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i4: movaps %exvr2.0,%exvr5.3w:C_SYMBOL0*1+-16/umask/32(%exvr0.0d) #
.i5: cmpl $0x1f3f0,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i6: jne .i1 #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i7: movl %exvr5.3w:C_SYMBOL0*1+127988/umask/32,%exvr0.0d #
.i8: addl %exvr5.3w:C_SYMBOL1*1+127984/umask/32,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i9: movl %exvr0.0d,%exvr5.3w:C_SYMBOL0*1+127984/umask/32 #
.i10: movl %exvr5.3w:C_SYMBOL1*1+127988/umask/32,%exvr0.0d #
.i11: addl %exvr5.3w:C_SYMBOL0*1+127992/umask/32,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i12: movl %exvr0.0d,%exvr5.3w:C_SYMBOL0*1+127988/umask/32 #
.i13: movl %exvr5.3w:C_SYMBOL1*1+127992/umask/32,%exvr0.0d #
.i14: addl %exvr5.3w:C_SYMBOL0*1+127996/umask/32,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i15: movl %exvr0.0d,%exvr5.3w:C_SYMBOL0*1+127992/umask/32 #
.i16: xorl %exvr0.0d,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i17: retl  #%exvr0.4d,%exvr5.2,%exvr0.2d,%exvr0.0d,%exvr0.7d,%exvr0.6d,%exvr0.5d,%exvr0.3d
=dst_iseq done
=dst_insn_pcs
0 : 0x0
1 : 0x4
2 : 0x6
3 : 0xd
4 : 0x10
5 : 0x18
6 : 0x20
7 : 0x23
8 : 0x2a
9 : 0x2f
10 : 0x31
11 : 0x36
12 : 0x3c
13 : 0x41
14 : 0x46
15 : 0x4c
16 : 0x51
17 : 0x56
=dst_insn_pcs done
=Memlabel assertions
=Symbol-map:
C_SYMBOL1 : a : 128000 : 16 : 0
C_SYMBOL2 : b : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=rodata_map begin
=rodata_map end
=assertion
1 : memlabel-mem-symbol.2.0_begin : BV:32
2 : memlabel-mem-symbol.2.0_end : BV:32
3 : bvule(1, 2) : BOOL
4 : 128000 : BV:32
5 : 4294967295 { -1 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : memlabel-mem-symbol.1.0_begin : BV:32
11 : memlabel-mem-symbol.1.0_end : BV:32
12 : bvule(10, 11) : BOOL
13 : and(9, 12) : BOOL
14 : bvadd(10, 6) : BV:32
15 : eq(11, 14) : BOOL
16 : and(13, 15) : BOOL
17 : memlabel-mem-esp_begin : BV:32
18 : memlabel-mem-esp_end : BV:32
19 : bvule(17, 18) : BOOL
20 : and(16, 19) : BOOL
21 : stack.size : BV:32
22 : bvadd(21, 5) : BV:32
23 : bvadd(17, 22) : BV:32
24 : eq(18, 23) : BOOL
25 : and(20, 24) : BOOL
26 : bvuge(1, 10) : BOOL
27 : bvule(1, 11) : BOOL
28 : and(26, 27) : BOOL
29 : bvuge(2, 10) : BOOL
30 : bvule(2, 11) : BOOL
31 : and(29, 30) : BOOL
32 : not(31) : BOOL
33 : andnot1(28, 32) : BOOL
34 : bvuge(1, 17) : BOOL
35 : bvule(1, 18) : BOOL
36 : and(34, 35) : BOOL
37 : bvuge(2, 17) : BOOL
38 : bvule(2, 18) : BOOL
39 : and(37, 38) : BOOL
40 : not(39) : BOOL
41 : andnot1(36, 40) : BOOL
42 : and(33, 41) : BOOL
43 : bvuge(10, 1) : BOOL
44 : bvule(10, 2) : BOOL
45 : and(43, 44) : BOOL
46 : bvuge(11, 1) : BOOL
47 : bvule(11, 2) : BOOL
48 : and(46, 47) : BOOL
49 : not(48) : BOOL
50 : andnot1(45, 49) : BOOL
51 : and(42, 50) : BOOL
52 : bvuge(10, 17) : BOOL
53 : bvule(10, 18) : BOOL
54 : and(52, 53) : BOOL
55 : bvuge(11, 17) : BOOL
56 : bvule(11, 18) : BOOL
57 : and(55, 56) : BOOL
58 : not(57) : BOOL
59 : andnot1(54, 58) : BOOL
60 : and(51, 59) : BOOL
61 : bvuge(17, 1) : BOOL
62 : bvule(17, 2) : BOOL
63 : and(61, 62) : BOOL
64 : bvuge(18, 1) : BOOL
65 : bvule(18, 2) : BOOL
66 : and(64, 65) : BOOL
67 : not(66) : BOOL
68 : andnot1(63, 67) : BOOL
69 : and(60, 68) : BOOL
70 : bvuge(17, 10) : BOOL
71 : bvule(17, 11) : BOOL
72 : and(70, 71) : BOOL
73 : bvuge(18, 10) : BOOL
74 : bvule(18, 11) : BOOL
75 : and(73, 74) : BOOL
76 : not(75) : BOOL
77 : andnot1(72, 76) : BOOL
78 : and(69, 77) : BOOL
79 : and(25, 78) : BOOL
80 : symbol.2 : BV:32
81 : 15 : BV:32
82 : bvand(80, 81) : BV:32
83 : 0 : BV:32
84 : eq(82, 83) : BOOL
85 : and(79, 84) : BOOL
86 : symbol.1 : BV:32
87 : bvand(86, 81) : BV:32
88 : eq(87, 83) : BOOL
89 : and(85, 88) : BOOL
90 : eq(86, 10) : BOOL
91 : eq(80, 1) : BOOL
92 : and(90, 91) : BOOL
93 : and(89, 92) : BOOL
94 : input_stack_pointer_const : BV:32
95 : bvule(17, 94) : BOOL
96 : bvule(94, 18) : BOOL
97 : and(95, 96) : BOOL
98 : 3 : BV:32
99 : bvadd(94, 98) : BV:32
100 : eq(99, 18) : BOOL
101 : and(97, 100) : BOOL
102 : and(93, 101) : BOOL
103 : 4294963200 { -4096 } : BV:32
104 : bvand(17, 103) : BV:32
105 : eq(104, 17) : BOOL
106 : 1 : BV:32
107 : bvadd(18, 106) : BV:32
108 : bvand(107, 103) : BV:32
109 : eq(108, 107) : BOOL
110 : and(105, 109) : BOOL
111 : and(102, 110) : BOOL
112 : dst_symbol_addr.1 : BV:32
113 : eq(86, 112) : BOOL
114 : dst_symbol_addr.2 : BV:32
115 : eq(80, 114) : BOOL
116 : and(113, 115) : BOOL
117 : and(111, 116) : BOOL
=concrete_assertion
1 : symbol.1 : BV:32
2 : 192000 : BV:32
3 : eq(1, 2) : BOOL
4 : symbol.2 : BV:32
5 : 52960 : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : dst_symbol_addr.1 : BV:32
9 : eq(8, 2) : BOOL
10 : and(7, 9) : BOOL
11 : dst_symbol_addr.2 : BV:32
12 : eq(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : input_stack_pointer_const : BV:32
15 : 2147450876 : BV:32
16 : eq(14, 15) : BOOL
17 : and(13, 16) : BOOL
18 : memlabel-mem-symbol.2.0_begin : BV:32
19 : eq(18, 5) : BOOL
20 : and(17, 19) : BOOL
21 : memlabel-mem-symbol.2.0_end : BV:32
22 : 180959 : BV:32
23 : eq(21, 22) : BOOL
24 : and(20, 23) : BOOL
25 : memlabel-mem-symbol.1.0_begin : BV:32
26 : eq(25, 2) : BOOL
27 : and(24, 26) : BOOL
28 : memlabel-mem-symbol.1.0_end : BV:32
29 : 319999 : BV:32
30 : eq(28, 29) : BOOL
31 : and(27, 30) : BOOL
32 : memlabel-mem-esp_begin : BV:32
33 : 454656 : BV:32
34 : eq(32, 33) : BOOL
35 : and(31, 34) : BOOL
36 : memlabel-mem-esp_end : BV:32
37 : 2147450879 : BV:32
38 : eq(36, 37) : BOOL
39 : and(35, 38) : BOOL
40 : stack.size : BV:32
41 : 2146996224 : BV:32
42 : eq(40, 41) : BOOL
43 : and(39, 42) : BOOL
=use_concrete_assertion : 1
=Memlabel assertions done
=llvm2ir 0
=eqcheck done
=graph_with_guessing
=Nodes: L0%0%1_L0%0%1 Lfor.body%1%1_L1%1%0 E0%0%1_E0%0%1
=Edges:
L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
Lfor.body%1%1_L1%1%0 => E0%0%1_E0%0%1
=graph done
=Node outputs: E0%0%1_E0%0%1
=Node outputs done for E0%0%1_E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : a : 128000 : 16 : 0
C_SYMBOL2 : b : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=dst.contains_float_op
1 : input.dst.contains_float_op : BOOL
=dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=dst.exreg.20.0
1 : input.dst.exreg.20.0 : BV:48
=dst.exreg.21.0
1 : input.dst.exreg.21.0 : BV:48
=dst.exreg.1.1
1 : input.dst.exreg.1.1 : BV:64
=dst.exreg.1.0
1 : input.dst.exreg.1.0 : BV:64
=dst.exreg.22.0
1 : input.dst.exreg.22.0 : BV:11
=dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=dst.invisible_regs.0
1 : input.dst.invisible_reg.0.0 : BV:8
=dst.contains_unsupported_op
1 : input.dst.contains_unsupported_op : BOOL
=dst.exreg.1.2
1 : input.dst.exreg.1.2 : BV:64
=dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=dst.invisible_regs.1
1 : input.dst.invisible_reg.0.1 : BV:8
=dst.exreg.2.6
1 : input.dst.exreg.2.6 : BV:128
=dst.exreg.4.4
1 : input.dst.exreg.4.4 : BV:80
=dst.exreg.4.5
1 : input.dst.exreg.4.5 : BV:80
=dst.exreg.4.6
1 : input.dst.exreg.4.6 : BV:80
=dst.exreg.4.7
1 : input.dst.exreg.4.7 : BV:80
=dst.exreg.5.0
1 : input.dst.exreg.5.0 : BV:16
=dst.exreg.5.1
1 : input.dst.exreg.5.1 : BV:16
=dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=dst.exreg.5.4
1 : input.dst.exreg.5.4 : BV:16
=dst.exreg.5.5
1 : input.dst.exreg.5.5 : BV:16
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=dst.exreg.4.1
1 : input.dst.exreg.4.1 : BV:80
=dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=dst.exreg.2.7
1 : input.dst.exreg.2.7 : BV:128
=dst.exreg.3.0
1 : input.dst.exreg.3.0 : BV:256
=dst.exreg.3.1
1 : input.dst.exreg.3.1 : BV:256
=dst.exreg.3.2
1 : input.dst.exreg.3.2 : BV:256
=dst.exreg.3.3
1 : input.dst.exreg.3.3 : BV:256
=dst.exreg.3.4
1 : input.dst.exreg.3.4 : BV:256
=dst.exreg.3.5
1 : input.dst.exreg.3.5 : BV:256
=dst.exreg.3.6
1 : input.dst.exreg.3.6 : BV:256
=dst.exreg.3.7
1 : input.dst.exreg.3.7 : BV:256
=dst.exreg.3.8
1 : input.dst.exreg.3.8 : BV:256
=dst.exreg.3.9
1 : input.dst.exreg.3.9 : BV:256
=dst.exreg.3.10
1 : input.dst.exreg.3.10 : BV:256
=dst.exreg.3.11
1 : input.dst.exreg.3.11 : BV:256
=dst.exreg.3.12
1 : input.dst.exreg.3.12 : BV:256
=dst.exreg.3.13
1 : input.dst.exreg.3.13 : BV:256
=dst.exreg.3.14
1 : input.dst.exreg.3.14 : BV:256
=dst.exreg.3.15
1 : input.dst.exreg.3.15 : BV:256
=dst.exreg.4.0
1 : input.dst.exreg.4.0 : BV:80
=dst.exreg.4.2
1 : input.dst.exreg.4.2 : BV:80
=dst.exreg.4.3
1 : input.dst.exreg.4.3 : BV:80
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=dst.exreg.0.1
1 : input.dst.exreg.0.1 : BV:32
=dst.exreg.1.3
1 : input.dst.exreg.1.3 : BV:64
=dst.exreg.1.4
1 : input.dst.exreg.1.4 : BV:64
=dst.exreg.1.5
1 : input.dst.exreg.1.5 : BV:64
=dst.exreg.1.6
1 : input.dst.exreg.1.6 : BV:64
=dst.exreg.1.7
1 : input.dst.exreg.1.7 : BV:64
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=dst.exreg.2.2
1 : input.dst.exreg.2.2 : BV:128
=dst.exreg.2.3
1 : input.dst.exreg.2.3 : BV:128
=dst.exreg.2.4
1 : input.dst.exreg.2.4 : BV:128
=dst.exreg.2.5
1 : input.dst.exreg.2.5 : BV:128
=dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=dst.exreg.17.0
1 : input.dst.exreg.17.0 : BV:16
=dst.exreg.19.0
1 : input.dst.exreg.19.0 : BV:16
=dst.exreg.18.0
1 : input.dst.exreg.18.0 : BV:16
=dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=state_end

=Node assumes and asserts: L0%0%1_L0%0%1
=L0%0%1_L0%0%1 assume pred 0
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=L0%0%1_L0%0%1 assume predicate_set done
=L0%0%1_L0%0%1 assert predicate_set done
=Node assumes and asserts: Lfor.body%1%1_L1%1%0
=Lfor.body%1%1_L1%1%0 assume predicate_set done
=Lfor.body%1%1_L1%1%0 assert predicate_set done
=Node assumes and asserts: E0%0%1_E0%0%1
=E0%0%1_E0%0%1 assume predicate_set done
=E0%0%1_E0%0%1 assert pred 0
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=E0%0%1_E0%0%1 assert pred 1
=Comment
exit.llvm-%ret-reg
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : input.dst.exreg.0.0 : BV:32
=predicate done
=E0%0%1_E0%0%1 assert pred 2
=Comment
exit.src.llvm-indir_tgt
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.llvm-indir_tgt : BV:32
=predicate done
=E0%0%1_E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.dst.0 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.1
mlvar.dst.1 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.2
mlvar.dst.10 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.3
mlvar.dst.11 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.4
mlvar.dst.12 : memlabel-mem-esp
=memlabel_map.5
mlvar.dst.13 : memlabel-mem-esp
=memlabel_map.6
mlvar.dst.2 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.7
mlvar.dst.3 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.8
mlvar.dst.4 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.9
mlvar.dst.5 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.10
mlvar.dst.6 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.11
mlvar.dst.7 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.12
mlvar.dst.8 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.13
mlvar.dst.9 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.14
mlvar.llvm.s121.0 : memlabel-mem-symbol.1.0
=memlabel_map.15
mlvar.llvm.s121.1 : memlabel-mem-symbol.2.0
=memlabel_map.16
mlvar.llvm.s121.2 : memlabel-mem-symbol.1.0
=Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset done

=Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=Edge.dst_tfg_full_pathset done

=Edge: Lfor.body%1%1_L1%1%0 => E0%0%1_E0%0%1
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to E0%0%1 at unroll 8 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))+((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge3
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.end%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge4
=Edge.src_tfg_full_pathset.Edge: Lfor.end%1%1 => E0%0%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:  ret i32 0, !dbg !34
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L1%1%0 to E0%0%1 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*((L6%1%1=>L7%1%0)*(L7%1%0=>E0%0%1)))
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L7%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.dst_tfg_full_pathset.Edge: L7%1%0 => E0%0%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127984 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 127988 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 10) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : bvadd(23, 14) : BV:32
33 : select(29, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : mlvar.dst.7 : MEMLABEL
36 : 127992 : BV:64
37 : bvextract(36, 5, 6) : BV:32
38 : bvadd(8, 37) : BV:32
39 : select(29, 35, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(34, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : bvadd(23, 37) : BV:32
46 : select(43, 44, 45, 16, 17) : BV:32
47 : bvzero_ext(46, 19) : BV:33
48 : mlvar.dst.10 : MEMLABEL
49 : 127996 : BV:64
50 : bvextract(49, 5, 6) : BV:32
51 : bvadd(8, 50) : BV:32
52 : select(43, 48, 51, 16, 17) : BV:32
53 : bvzero_ext(52, 19) : BV:33
54 : bvadd(47, 53) : BV:33
55 : bvextract(54, 5, 6) : BV:32
56 : bvxor(55, 55) : BV:32
=dst.hidden_reg.6
1 : input.dst.exreg.0.2 : BV:32
=dst.hidden_reg.3
1 : input.dst.exreg.0.6 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.0.7 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.0.3 : BV:32
=dst.esp.E0%0%1
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.14.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127984 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 127988 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 10) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : bvadd(23, 14) : BV:32
33 : select(29, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : mlvar.dst.7 : MEMLABEL
36 : 127992 : BV:64
37 : bvextract(36, 5, 6) : BV:32
38 : bvadd(8, 37) : BV:32
39 : select(29, 35, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(34, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : bvadd(23, 37) : BV:32
46 : select(43, 44, 45, 16, 17) : BV:32
47 : bvzero_ext(46, 19) : BV:33
48 : mlvar.dst.10 : MEMLABEL
49 : 127996 : BV:64
50 : bvextract(49, 5, 6) : BV:32
51 : bvadd(8, 50) : BV:32
52 : select(43, 48, 51, 16, 17) : BV:32
53 : bvzero_ext(52, 19) : BV:33
54 : bvadd(47, 53) : BV:33
55 : bvextract(54, 5, 6) : BV:32
56 : bvxor(55, 55) : BV:32
57 : 0 : BV:32
58 : eq(56, 57) : BOOL
59 : bvsign(56) : BV:1
60 : 1 : BV:1
61 : eq(59, 60) : BOOL
62 : or(58, 61) : BOOL
63 : 0 : BV:1
64 : ite(62, 60, 63) : BV:1
=dst.exreg.16.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127984 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 127988 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 10) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : bvadd(23, 14) : BV:32
33 : select(29, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : mlvar.dst.7 : MEMLABEL
36 : 127992 : BV:64
37 : bvextract(36, 5, 6) : BV:32
38 : bvadd(8, 37) : BV:32
39 : select(29, 35, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(34, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : bvadd(23, 37) : BV:32
46 : select(43, 44, 45, 16, 17) : BV:32
47 : bvzero_ext(46, 19) : BV:33
48 : mlvar.dst.10 : MEMLABEL
49 : 127996 : BV:64
50 : bvextract(49, 5, 6) : BV:32
51 : bvadd(8, 50) : BV:32
52 : select(43, 48, 51, 16, 17) : BV:32
53 : bvzero_ext(52, 19) : BV:33
54 : bvadd(47, 53) : BV:33
55 : bvextract(54, 5, 6) : BV:32
56 : bvxor(55, 55) : BV:32
57 : bvsign(56) : BV:1
58 : 1 : BV:1
59 : eq(57, 58) : BOOL
60 : not(59) : BOOL
61 : 0 : BV:1
62 : ite(60, 58, 61) : BV:1
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127984 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 127988 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 10) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : bvadd(23, 14) : BV:32
33 : select(29, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : mlvar.dst.7 : MEMLABEL
36 : 127992 : BV:64
37 : bvextract(36, 5, 6) : BV:32
38 : bvadd(8, 37) : BV:32
39 : select(29, 35, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(34, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.11 : MEMLABEL
45 : mlvar.dst.9 : MEMLABEL
46 : bvadd(23, 37) : BV:32
47 : select(43, 45, 46, 16, 17) : BV:32
48 : bvzero_ext(47, 19) : BV:33
49 : mlvar.dst.10 : MEMLABEL
50 : 127996 : BV:64
51 : bvextract(50, 5, 6) : BV:32
52 : bvadd(8, 51) : BV:32
53 : select(43, 49, 52, 16, 17) : BV:32
54 : bvzero_ext(53, 19) : BV:33
55 : bvadd(48, 54) : BV:33
56 : bvextract(55, 5, 6) : BV:32
57 : store(43, 44, 38, 56, 16, 17) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : 1 : BV:64
9 : 0 : INT
10 : bvextract(8, 2, 9) : BV:32
11 : bvmul(7, 10) : BV:32
12 : 127988 : BV:64
13 : bvextract(12, 2, 9) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(5, 6, 14, 15, 16) : BV:32
18 : bvzero_ext(17, 3) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.2 : BV:32
21 : bvmul(20, 10) : BV:32
22 : 127984 : BV:64
23 : bvextract(22, 2, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : select(5, 19, 24, 15, 16) : BV:32
26 : bvzero_ext(25, 3) : BV:33
27 : bvadd(18, 26) : BV:33
28 : 32 : INT
29 : bvextract(27, 28, 28) : BV:1
30 : 1 : BV:1
31 : eq(29, 30) : BOOL
32 : 0 : BV:1
33 : ite(31, 30, 32) : BV:1
34 : bvconcat(4, 33) : BV:32
35 : 5 : INT
36 : bvextract(34, 2, 35) : BV:27
37 : bvextract(27, 2, 9) : BV:32
38 : bvextract(37, 15, 15) : BV:1
39 : eq(38, 30) : BOOL
40 : bvextract(18, 15, 15) : BV:1
41 : eq(40, 30) : BOOL
42 : xor(39, 41) : BOOL
43 : ite(42, 30, 32) : BV:1
44 : 3 : INT
45 : bvextract(34, 44, 9) : BV:4
46 : bvconcat(43, 45) : BV:5
47 : bvconcat(36, 46) : BV:32
48 : 12 : INT
49 : bvextract(47, 2, 48) : BV:20
50 : bvextract(18, 2, 2) : BV:1
51 : eq(50, 30) : BOOL
52 : bvextract(26, 2, 2) : BV:1
53 : eq(52, 30) : BOOL
54 : iff(51, 53) : BOOL
55 : bvextract(18, 2, 9) : BV:32
56 : bvextract(26, 2, 9) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvextract(57, 2, 2) : BV:1
59 : eq(58, 30) : BOOL
60 : xor(51, 59) : BOOL
61 : and(54, 60) : BOOL
62 : ite(61, 30, 32) : BV:1
63 : 10 : INT
64 : bvextract(47, 63, 9) : BV:11
65 : bvconcat(62, 64) : BV:12
66 : bvconcat(49, 65) : BV:32
67 : 8 : INT
68 : bvextract(66, 2, 67) : BV:24
69 : ite(59, 30, 32) : BV:1
70 : 6 : INT
71 : bvextract(66, 70, 9) : BV:7
72 : bvconcat(69, 71) : BV:8
73 : bvconcat(68, 72) : BV:32
74 : 7 : INT
75 : bvextract(73, 2, 74) : BV:25
76 : 0 : BV:32
77 : eq(37, 76) : BOOL
78 : ite(77, 30, 32) : BV:1
79 : bvextract(73, 35, 9) : BV:6
80 : bvconcat(78, 79) : BV:7
81 : bvconcat(75, 80) : BV:32
82 : bvextract(81, 2, 44) : BV:29
83 : bvextract(81, 3, 9) : BV:2
84 : bvconcat(32, 83) : BV:3
85 : bvconcat(82, 84) : BV:32
86 : 11 : INT
87 : bvextract(85, 2, 86) : BV:21
88 : bvextract(1, 63, 63) : BV:1
89 : eq(88, 30) : BOOL
90 : ite(89, 30, 32) : BV:1
91 : 9 : INT
92 : bvextract(85, 91, 9) : BV:10
93 : bvconcat(90, 92) : BV:11
94 : bvconcat(87, 93) : BV:32
95 : bvextract(94, 2, 3) : BV:31
96 : mlvar.dst.5 : MEMLABEL
97 : bvadd(11, 23) : BV:32
98 : store(5, 96, 97, 37, 15, 16) : ARRAY[BV:32 -> BV:8]
99 : mlvar.dst.6 : MEMLABEL
100 : bvadd(21, 13) : BV:32
101 : select(98, 99, 100, 15, 16) : BV:32
102 : bvzero_ext(101, 3) : BV:33
103 : mlvar.dst.7 : MEMLABEL
104 : 127992 : BV:64
105 : bvextract(104, 2, 9) : BV:32
106 : bvadd(11, 105) : BV:32
107 : select(98, 103, 106, 15, 16) : BV:32
108 : bvzero_ext(107, 3) : BV:33
109 : bvadd(102, 108) : BV:33
110 : bvextract(109, 28, 28) : BV:1
111 : eq(110, 30) : BOOL
112 : ite(111, 30, 32) : BV:1
113 : bvconcat(95, 112) : BV:32
114 : bvextract(113, 2, 35) : BV:27
115 : bvextract(109, 2, 9) : BV:32
116 : bvextract(115, 15, 15) : BV:1
117 : eq(116, 30) : BOOL
118 : bvextract(102, 15, 15) : BV:1
119 : eq(118, 30) : BOOL
120 : xor(117, 119) : BOOL
121 : ite(120, 30, 32) : BV:1
122 : bvextract(113, 44, 9) : BV:4
123 : bvconcat(121, 122) : BV:5
124 : bvconcat(114, 123) : BV:32
125 : bvextract(124, 2, 48) : BV:20
126 : bvextract(102, 2, 2) : BV:1
127 : eq(126, 30) : BOOL
128 : bvextract(108, 2, 2) : BV:1
129 : eq(128, 30) : BOOL
130 : iff(127, 129) : BOOL
131 : bvextract(102, 2, 9) : BV:32
132 : bvextract(108, 2, 9) : BV:32
133 : bvadd(131, 132) : BV:32
134 : bvextract(133, 2, 2) : BV:1
135 : eq(134, 30) : BOOL
136 : xor(127, 135) : BOOL
137 : and(130, 136) : BOOL
138 : ite(137, 30, 32) : BV:1
139 : bvextract(124, 63, 9) : BV:11
140 : bvconcat(138, 139) : BV:12
141 : bvconcat(125, 140) : BV:32
142 : bvextract(141, 2, 67) : BV:24
143 : ite(135, 30, 32) : BV:1
144 : bvextract(141, 70, 9) : BV:7
145 : bvconcat(143, 144) : BV:8
146 : bvconcat(142, 145) : BV:32
147 : bvextract(146, 2, 74) : BV:25
148 : eq(115, 76) : BOOL
149 : ite(148, 30, 32) : BV:1
150 : bvextract(146, 35, 9) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(147, 151) : BV:32
153 : bvextract(152, 2, 44) : BV:29
154 : bvextract(152, 3, 9) : BV:2
155 : bvconcat(32, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 86) : BV:21
158 : bvextract(94, 63, 63) : BV:1
159 : eq(158, 30) : BOOL
160 : ite(159, 30, 32) : BV:1
161 : bvextract(156, 91, 9) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
164 : bvextract(163, 2, 3) : BV:31
165 : mlvar.dst.8 : MEMLABEL
166 : store(98, 165, 14, 115, 15, 16) : ARRAY[BV:32 -> BV:8]
167 : mlvar.dst.9 : MEMLABEL
168 : bvadd(21, 105) : BV:32
169 : select(166, 167, 168, 15, 16) : BV:32
170 : bvzero_ext(169, 3) : BV:33
171 : mlvar.dst.10 : MEMLABEL
172 : 127996 : BV:64
173 : bvextract(172, 2, 9) : BV:32
174 : bvadd(11, 173) : BV:32
175 : select(166, 171, 174, 15, 16) : BV:32
176 : bvzero_ext(175, 3) : BV:33
177 : bvadd(170, 176) : BV:33
178 : bvextract(177, 28, 28) : BV:1
179 : eq(178, 30) : BOOL
180 : ite(179, 30, 32) : BV:1
181 : bvconcat(164, 180) : BV:32
182 : bvextract(181, 2, 35) : BV:27
183 : bvextract(177, 2, 9) : BV:32
184 : bvextract(183, 15, 15) : BV:1
185 : eq(184, 30) : BOOL
186 : bvextract(170, 15, 15) : BV:1
187 : eq(186, 30) : BOOL
188 : xor(185, 187) : BOOL
189 : ite(188, 30, 32) : BV:1
190 : bvextract(181, 44, 9) : BV:4
191 : bvconcat(189, 190) : BV:5
192 : bvconcat(182, 191) : BV:32
193 : bvextract(192, 2, 48) : BV:20
194 : bvextract(170, 2, 2) : BV:1
195 : eq(194, 30) : BOOL
196 : bvextract(176, 2, 2) : BV:1
197 : eq(196, 30) : BOOL
198 : iff(195, 197) : BOOL
199 : bvextract(170, 2, 9) : BV:32
200 : bvextract(176, 2, 9) : BV:32
201 : bvadd(199, 200) : BV:32
202 : bvextract(201, 2, 2) : BV:1
203 : eq(202, 30) : BOOL
204 : xor(195, 203) : BOOL
205 : and(198, 204) : BOOL
206 : ite(205, 30, 32) : BV:1
207 : bvextract(192, 63, 9) : BV:11
208 : bvconcat(206, 207) : BV:12
209 : bvconcat(193, 208) : BV:32
210 : bvextract(209, 2, 67) : BV:24
211 : ite(203, 30, 32) : BV:1
212 : bvextract(209, 70, 9) : BV:7
213 : bvconcat(211, 212) : BV:8
214 : bvconcat(210, 213) : BV:32
215 : bvextract(214, 2, 74) : BV:25
216 : eq(183, 76) : BOOL
217 : ite(216, 30, 32) : BV:1
218 : bvextract(214, 35, 9) : BV:6
219 : bvconcat(217, 218) : BV:7
220 : bvconcat(215, 219) : BV:32
221 : bvextract(220, 2, 44) : BV:29
222 : bvextract(220, 3, 9) : BV:2
223 : bvconcat(32, 222) : BV:3
224 : bvconcat(221, 223) : BV:32
225 : bvextract(224, 2, 86) : BV:21
226 : bvextract(163, 63, 63) : BV:1
227 : eq(226, 30) : BOOL
228 : ite(227, 30, 32) : BV:1
229 : bvextract(224, 91, 9) : BV:10
230 : bvconcat(228, 229) : BV:11
231 : bvconcat(225, 230) : BV:32
232 : bvextract(231, 2, 3) : BV:31
233 : bvconcat(232, 32) : BV:32
234 : bvextract(233, 2, 35) : BV:27
235 : bvextract(233, 44, 9) : BV:4
236 : bvconcat(32, 235) : BV:5
237 : bvconcat(234, 236) : BV:32
238 : bvextract(237, 2, 48) : BV:20
239 : bvextract(237, 63, 9) : BV:11
240 : bvconcat(32, 239) : BV:12
241 : bvconcat(238, 240) : BV:32
242 : bvextract(241, 2, 67) : BV:24
243 : bvxor(183, 183) : BV:32
244 : bvsign(243) : BV:1
245 : eq(244, 30) : BOOL
246 : ite(245, 30, 32) : BV:1
247 : bvextract(241, 70, 9) : BV:7
248 : bvconcat(246, 247) : BV:8
249 : bvconcat(242, 248) : BV:32
250 : bvextract(249, 2, 74) : BV:25
251 : eq(243, 76) : BOOL
252 : ite(251, 30, 32) : BV:1
253 : bvextract(249, 35, 9) : BV:6
254 : bvconcat(252, 253) : BV:7
255 : bvconcat(250, 254) : BV:32
256 : bvextract(255, 2, 44) : BV:29
257 : bvextract(255, 3, 9) : BV:2
258 : bvconcat(32, 257) : BV:3
259 : bvconcat(256, 258) : BV:32
260 : bvextract(259, 2, 86) : BV:21
261 : bvextract(231, 63, 63) : BV:1
262 : eq(261, 30) : BOOL
263 : ite(262, 30, 32) : BV:1
264 : bvextract(259, 91, 9) : BV:10
265 : bvconcat(263, 264) : BV:11
266 : bvconcat(260, 265) : BV:32
=dst.exreg.7.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127984 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 127988 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 10) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : bvadd(23, 14) : BV:32
33 : select(29, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : mlvar.dst.7 : MEMLABEL
36 : 127992 : BV:64
37 : bvextract(36, 5, 6) : BV:32
38 : bvadd(8, 37) : BV:32
39 : select(29, 35, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(34, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : bvadd(23, 37) : BV:32
46 : select(43, 44, 45, 16, 17) : BV:32
47 : bvzero_ext(46, 19) : BV:33
48 : mlvar.dst.10 : MEMLABEL
49 : 127996 : BV:64
50 : bvextract(49, 5, 6) : BV:32
51 : bvadd(8, 50) : BV:32
52 : select(43, 48, 51, 16, 17) : BV:32
53 : bvzero_ext(52, 19) : BV:33
54 : bvadd(47, 53) : BV:33
55 : bvextract(54, 5, 6) : BV:32
56 : bvxor(55, 55) : BV:32
57 : 0 : BV:32
58 : eq(56, 57) : BOOL
59 : 1 : BV:1
60 : 0 : BV:1
61 : ite(58, 59, 60) : BV:1
=dst.exreg.8.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127984 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 127988 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 10) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : bvadd(23, 14) : BV:32
33 : select(29, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : mlvar.dst.7 : MEMLABEL
36 : 127992 : BV:64
37 : bvextract(36, 5, 6) : BV:32
38 : bvadd(8, 37) : BV:32
39 : select(29, 35, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(34, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : bvadd(23, 37) : BV:32
46 : select(43, 44, 45, 16, 17) : BV:32
47 : bvzero_ext(46, 19) : BV:33
48 : mlvar.dst.10 : MEMLABEL
49 : 127996 : BV:64
50 : bvextract(49, 5, 6) : BV:32
51 : bvadd(8, 50) : BV:32
52 : select(43, 48, 51, 16, 17) : BV:32
53 : bvzero_ext(52, 19) : BV:33
54 : bvadd(47, 53) : BV:33
55 : bvextract(54, 5, 6) : BV:32
56 : bvxor(55, 55) : BV:32
57 : 0 : BV:32
58 : eq(56, 57) : BOOL
59 : not(58) : BOOL
60 : 1 : BV:1
61 : 0 : BV:1
62 : ite(59, 60, 61) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127984 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 127988 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 10) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : bvadd(23, 14) : BV:32
33 : select(29, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : mlvar.dst.7 : MEMLABEL
36 : 127992 : BV:64
37 : bvextract(36, 5, 6) : BV:32
38 : bvadd(8, 37) : BV:32
39 : select(29, 35, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(34, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : bvadd(23, 37) : BV:32
46 : select(43, 44, 45, 16, 17) : BV:32
47 : bvzero_ext(46, 19) : BV:33
48 : mlvar.dst.10 : MEMLABEL
49 : 127996 : BV:64
50 : bvextract(49, 5, 6) : BV:32
51 : bvadd(8, 50) : BV:32
52 : select(43, 48, 51, 16, 17) : BV:32
53 : bvzero_ext(52, 19) : BV:33
54 : bvadd(47, 53) : BV:33
55 : bvextract(54, 5, 6) : BV:32
56 : bvxor(55, 55) : BV:32
57 : bvsign(56) : BV:1
58 : 1 : BV:1
59 : eq(57, 58) : BOOL
60 : 0 : BV:1
61 : ite(59, 58, 60) : BV:1
=dst.exreg.11.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127984 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 127988 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 10) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : bvadd(23, 14) : BV:32
33 : select(29, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : mlvar.dst.7 : MEMLABEL
36 : 127992 : BV:64
37 : bvextract(36, 5, 6) : BV:32
38 : bvadd(8, 37) : BV:32
39 : select(29, 35, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(34, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : bvadd(23, 37) : BV:32
46 : select(43, 44, 45, 16, 17) : BV:32
47 : bvzero_ext(46, 19) : BV:33
48 : mlvar.dst.10 : MEMLABEL
49 : 127996 : BV:64
50 : bvextract(49, 5, 6) : BV:32
51 : bvadd(8, 50) : BV:32
52 : select(43, 48, 51, 16, 17) : BV:32
53 : bvzero_ext(52, 19) : BV:33
54 : bvadd(47, 53) : BV:33
55 : bvextract(54, 5, 6) : BV:32
56 : bvxor(55, 55) : BV:32
57 : 0 : BV:32
58 : eq(56, 57) : BOOL
59 : not(58) : BOOL
60 : 1 : BV:1
61 : 0 : BV:1
62 : ite(59, 60, 61) : BV:1
=dst.exreg.12.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127984 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 127988 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 10) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : bvadd(23, 14) : BV:32
33 : select(29, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : mlvar.dst.7 : MEMLABEL
36 : 127992 : BV:64
37 : bvextract(36, 5, 6) : BV:32
38 : bvadd(8, 37) : BV:32
39 : select(29, 35, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(34, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : bvadd(23, 37) : BV:32
46 : select(43, 44, 45, 16, 17) : BV:32
47 : bvzero_ext(46, 19) : BV:33
48 : mlvar.dst.10 : MEMLABEL
49 : 127996 : BV:64
50 : bvextract(49, 5, 6) : BV:32
51 : bvadd(8, 50) : BV:32
52 : select(43, 48, 51, 16, 17) : BV:32
53 : bvzero_ext(52, 19) : BV:33
54 : bvadd(47, 53) : BV:33
55 : bvextract(54, 5, 6) : BV:32
56 : bvxor(55, 55) : BV:32
57 : 0 : BV:32
58 : eq(56, 57) : BOOL
59 : not(58) : BOOL
60 : bvsign(56) : BV:1
61 : 1 : BV:1
62 : eq(60, 61) : BOOL
63 : not(62) : BOOL
64 : and(59, 63) : BOOL
65 : 0 : BV:1
66 : ite(64, 61, 65) : BV:1
=dst.exreg.13.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127984 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 127988 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 10) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : bvadd(23, 14) : BV:32
33 : select(29, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : mlvar.dst.7 : MEMLABEL
36 : 127992 : BV:64
37 : bvextract(36, 5, 6) : BV:32
38 : bvadd(8, 37) : BV:32
39 : select(29, 35, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(34, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : bvadd(23, 37) : BV:32
46 : select(43, 44, 45, 16, 17) : BV:32
47 : bvzero_ext(46, 19) : BV:33
48 : mlvar.dst.10 : MEMLABEL
49 : 127996 : BV:64
50 : bvextract(49, 5, 6) : BV:32
51 : bvadd(8, 50) : BV:32
52 : select(43, 48, 51, 16, 17) : BV:32
53 : bvzero_ext(52, 19) : BV:33
54 : bvadd(47, 53) : BV:33
55 : bvextract(54, 5, 6) : BV:32
56 : bvxor(55, 55) : BV:32
57 : 0 : BV:32
58 : eq(56, 57) : BOOL
59 : 1 : BV:1
60 : 0 : BV:1
61 : ite(58, 59, 60) : BV:1
=dst.hidden_reg.0
1 : input.dst.exreg.5.2 : BV:16
=dst.hidden_reg.2
1 : input.dst.exreg.0.5 : BV:32
=dst.exreg.0.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127984 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 127988 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 10) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : bvadd(23, 14) : BV:32
33 : select(29, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : mlvar.dst.7 : MEMLABEL
36 : 127992 : BV:64
37 : bvextract(36, 5, 6) : BV:32
38 : bvadd(8, 37) : BV:32
39 : select(29, 35, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(34, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : bvadd(23, 37) : BV:32
46 : select(43, 44, 45, 16, 17) : BV:32
47 : bvzero_ext(46, 19) : BV:33
48 : mlvar.dst.10 : MEMLABEL
49 : 127996 : BV:64
50 : bvextract(49, 5, 6) : BV:32
51 : bvadd(8, 50) : BV:32
52 : select(43, 48, 51, 16, 17) : BV:32
53 : bvzero_ext(52, 19) : BV:33
54 : bvadd(47, 53) : BV:33
55 : bvextract(54, 5, 6) : BV:32
56 : bvxor(55, 55) : BV:32
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127984 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 127988 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 10) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : bvadd(23, 14) : BV:32
33 : select(29, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : mlvar.dst.7 : MEMLABEL
36 : 127992 : BV:64
37 : bvextract(36, 5, 6) : BV:32
38 : bvadd(8, 37) : BV:32
39 : select(29, 35, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(34, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.11 : MEMLABEL
45 : mlvar.dst.9 : MEMLABEL
46 : bvadd(23, 37) : BV:32
47 : select(43, 45, 46, 16, 17) : BV:32
48 : bvzero_ext(47, 19) : BV:33
49 : mlvar.dst.10 : MEMLABEL
50 : 127996 : BV:64
51 : bvextract(50, 5, 6) : BV:32
52 : bvadd(8, 51) : BV:32
53 : select(43, 49, 52, 16, 17) : BV:32
54 : bvzero_ext(53, 19) : BV:33
55 : bvadd(48, 54) : BV:33
56 : bvextract(55, 5, 6) : BV:32
57 : store(43, 44, 38, 56, 16, 17) : ARRAY[BV:32 -> BV:8]
58 : mlvar.dst.12 : MEMLABEL
59 : input.dst.exreg.0.4 : BV:32
60 : select(57, 58, 59, 16, 17) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*((te_comment_not_implemented*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented)))
=Edge.dst_tfg_full_pathset done

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicates at E0%0%1_E0%0%1
=predicates at E0%0%1_E0%0%1 predicate# 0
=Comment
exit.src.llvm-indir_tgt
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : retaddr_const : BV:32
=predicate done
=predicates at E0%0%1_E0%0%1 predicate# 1
=Comment
exit.llvm-%ret-reg
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=predicates at E0%0%1_E0%0%1 predicate# 2
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=predicates at E0%0%1_E0%0%1 done
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in s121

=Alias analysis results in s121
=Alias analysis result in s121 at L0%0%1_L0%0%1
=Alias analysis result in s121 at Lfor.body%1%1_L1%1%0
=Alias analysis result in s121 at E0%0%1_E0%0%1

=Liveness in s121
=live locs at L0%0%1_L0%0%1

=live locs at Lfor.body%1%1_L1%1%0

=live locs at E0%0%1_E0%0%1


=Available expressions in s121

=sprel_maps in s121
=sprel_map at L0%0%1_L0%0%1 in s121
=sprel_map at Lfor.body%1%1_L1%1%0 in s121
=sprel_map at E0%0%1_E0%0%1 in s121
=graph_with_aliasing_done
=Memlabel assertions
=Symbol-map:
C_SYMBOL1 : a : 128000 : 16 : 0
C_SYMBOL2 : b : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=rodata_map begin
=rodata_map end
=assertion
1 : memlabel-mem-symbol.2.0_begin : BV:32
2 : memlabel-mem-symbol.2.0_end : BV:32
3 : bvule(1, 2) : BOOL
4 : 128000 : BV:32
5 : 4294967295 { -1 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : memlabel-mem-symbol.1.0_begin : BV:32
11 : memlabel-mem-symbol.1.0_end : BV:32
12 : bvule(10, 11) : BOOL
13 : and(9, 12) : BOOL
14 : bvadd(10, 6) : BV:32
15 : eq(11, 14) : BOOL
16 : and(13, 15) : BOOL
17 : memlabel-mem-esp_begin : BV:32
18 : memlabel-mem-esp_end : BV:32
19 : bvule(17, 18) : BOOL
20 : and(16, 19) : BOOL
21 : stack.size : BV:32
22 : bvadd(21, 5) : BV:32
23 : bvadd(17, 22) : BV:32
24 : eq(18, 23) : BOOL
25 : and(20, 24) : BOOL
26 : bvuge(1, 10) : BOOL
27 : bvule(1, 11) : BOOL
28 : and(26, 27) : BOOL
29 : bvuge(2, 10) : BOOL
30 : bvule(2, 11) : BOOL
31 : and(29, 30) : BOOL
32 : not(31) : BOOL
33 : andnot1(28, 32) : BOOL
34 : bvuge(1, 17) : BOOL
35 : bvule(1, 18) : BOOL
36 : and(34, 35) : BOOL
37 : bvuge(2, 17) : BOOL
38 : bvule(2, 18) : BOOL
39 : and(37, 38) : BOOL
40 : not(39) : BOOL
41 : andnot1(36, 40) : BOOL
42 : and(33, 41) : BOOL
43 : bvuge(10, 1) : BOOL
44 : bvule(10, 2) : BOOL
45 : and(43, 44) : BOOL
46 : bvuge(11, 1) : BOOL
47 : bvule(11, 2) : BOOL
48 : and(46, 47) : BOOL
49 : not(48) : BOOL
50 : andnot1(45, 49) : BOOL
51 : and(42, 50) : BOOL
52 : bvuge(10, 17) : BOOL
53 : bvule(10, 18) : BOOL
54 : and(52, 53) : BOOL
55 : bvuge(11, 17) : BOOL
56 : bvule(11, 18) : BOOL
57 : and(55, 56) : BOOL
58 : not(57) : BOOL
59 : andnot1(54, 58) : BOOL
60 : and(51, 59) : BOOL
61 : bvuge(17, 1) : BOOL
62 : bvule(17, 2) : BOOL
63 : and(61, 62) : BOOL
64 : bvuge(18, 1) : BOOL
65 : bvule(18, 2) : BOOL
66 : and(64, 65) : BOOL
67 : not(66) : BOOL
68 : andnot1(63, 67) : BOOL
69 : and(60, 68) : BOOL
70 : bvuge(17, 10) : BOOL
71 : bvule(17, 11) : BOOL
72 : and(70, 71) : BOOL
73 : bvuge(18, 10) : BOOL
74 : bvule(18, 11) : BOOL
75 : and(73, 74) : BOOL
76 : not(75) : BOOL
77 : andnot1(72, 76) : BOOL
78 : and(69, 77) : BOOL
79 : and(25, 78) : BOOL
80 : symbol.2 : BV:32
81 : 15 : BV:32
82 : bvand(80, 81) : BV:32
83 : 0 : BV:32
84 : eq(82, 83) : BOOL
85 : and(79, 84) : BOOL
86 : symbol.1 : BV:32
87 : bvand(86, 81) : BV:32
88 : eq(87, 83) : BOOL
89 : and(85, 88) : BOOL
90 : eq(86, 10) : BOOL
91 : eq(80, 1) : BOOL
92 : and(90, 91) : BOOL
93 : and(89, 92) : BOOL
94 : input_stack_pointer_const : BV:32
95 : bvule(17, 94) : BOOL
96 : bvule(94, 18) : BOOL
97 : and(95, 96) : BOOL
98 : 3 : BV:32
99 : bvadd(94, 98) : BV:32
100 : eq(99, 18) : BOOL
101 : and(97, 100) : BOOL
102 : and(93, 101) : BOOL
103 : 4294963200 { -4096 } : BV:32
104 : bvand(17, 103) : BV:32
105 : eq(104, 17) : BOOL
106 : 1 : BV:32
107 : bvadd(18, 106) : BV:32
108 : bvand(107, 103) : BV:32
109 : eq(108, 107) : BOOL
110 : and(105, 109) : BOOL
111 : and(102, 110) : BOOL
112 : dst_symbol_addr.1 : BV:32
113 : eq(86, 112) : BOOL
114 : dst_symbol_addr.2 : BV:32
115 : eq(80, 114) : BOOL
116 : and(113, 115) : BOOL
117 : and(111, 116) : BOOL
=concrete_assertion
1 : symbol.1 : BV:32
2 : 192000 : BV:32
3 : eq(1, 2) : BOOL
4 : symbol.2 : BV:32
5 : 52960 : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : dst_symbol_addr.1 : BV:32
9 : eq(8, 2) : BOOL
10 : and(7, 9) : BOOL
11 : dst_symbol_addr.2 : BV:32
12 : eq(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : input_stack_pointer_const : BV:32
15 : 2147450876 : BV:32
16 : eq(14, 15) : BOOL
17 : and(13, 16) : BOOL
18 : memlabel-mem-symbol.2.0_begin : BV:32
19 : eq(18, 5) : BOOL
20 : and(17, 19) : BOOL
21 : memlabel-mem-symbol.2.0_end : BV:32
22 : 180959 : BV:32
23 : eq(21, 22) : BOOL
24 : and(20, 23) : BOOL
25 : memlabel-mem-symbol.1.0_begin : BV:32
26 : eq(25, 2) : BOOL
27 : and(24, 26) : BOOL
28 : memlabel-mem-symbol.1.0_end : BV:32
29 : 319999 : BV:32
30 : eq(28, 29) : BOOL
31 : and(27, 30) : BOOL
32 : memlabel-mem-esp_begin : BV:32
33 : 454656 : BV:32
34 : eq(32, 33) : BOOL
35 : and(31, 34) : BOOL
36 : memlabel-mem-esp_end : BV:32
37 : 2147450879 : BV:32
38 : eq(36, 37) : BOOL
39 : and(35, 38) : BOOL
40 : stack.size : BV:32
41 : 2146996224 : BV:32
42 : eq(40, 41) : BOOL
43 : and(39, 42) : BOOL
=use_concrete_assertion : 0
=Memlabel assertions done
=counterexamples at pc L0%0%1_L0%0%1
=pc L0%0%1_L0%0%1 nodece 0
=pc L0%0%1_L0%0%1 nodece 0 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1714636915
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 0 nodece_path
=pc L0%0%1_L0%0%1 nodece 0 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 0 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1714636915
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 1
=pc L0%0%1_L0%0%1 nodece 1 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 1 nodece_path
=pc L0%0%1_L0%0%1 nodece 1 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 1 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 2
=pc L0%0%1_L0%0%1 nodece 2 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 2 nodece_path
=pc L0%0%1_L0%0%1 nodece 2 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 2 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 3
=pc L0%0%1_L0%0%1 nodece 3 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192004 ) -> 107, ( 192005 ) -> 85, ( 192006 ) -> 22, ( 192007 ) -> 1, ( 180948 ) -> 144, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192004 ) -> 107, ( 192005 ) -> 85, ( 192006 ) -> 22, ( 192007 ) -> 1, ( 180948 ) -> 144, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 192004 ) -> 107, ( 192005 ) -> 85, ( 192006 ) -> 22, ( 192007 ) -> 1, ( 180948 ) -> 144, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 144 : BV:32
=unaliased_memslot.0
1 : 18240875 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 3 nodece_path
=pc L0%0%1_L0%0%1 nodece 3 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 3 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192004 ) -> 107, ( 192005 ) -> 85, ( 192006 ) -> 22, ( 192007 ) -> 1, ( 180948 ) -> 144, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192004 ) -> 107, ( 192005 ) -> 85, ( 192006 ) -> 22, ( 192007 ) -> 1, ( 180948 ) -> 144, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 192004 ) -> 107, ( 192005 ) -> 85, ( 192006 ) -> 22, ( 192007 ) -> 1, ( 180948 ) -> 144, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 144 : BV:32
=unaliased_memslot.0
1 : 18240875 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 4
=pc L0%0%1_L0%0%1 nodece 4 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192004 ) -> 255, ( 192005 ) -> 255, ( 192006 ) -> 255, ( 192007 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192004 ) -> 255, ( 192005 ) -> 255, ( 192006 ) -> 255, ( 192007 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 192004 ) -> 255, ( 192005 ) -> 255, ( 192006 ) -> 255, ( 192007 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1967681095
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 4 nodece_path
=pc L0%0%1_L0%0%1 nodece 4 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 4 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192004 ) -> 255, ( 192005 ) -> 255, ( 192006 ) -> 255, ( 192007 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192004 ) -> 255, ( 192005 ) -> 255, ( 192006 ) -> 255, ( 192007 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 192004 ) -> 255, ( 192005 ) -> 255, ( 192006 ) -> 255, ( 192007 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1967681095
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 5
=pc L0%0%1_L0%0%1 nodece 5 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 180951 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 180951 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 180951 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1850952926
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 5 nodece_path
=pc L0%0%1_L0%0%1 nodece 5 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 5 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 180951 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 180951 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 180951 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1850952926
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 6
=pc L0%0%1_L0%0%1 nodece 6 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52960 ) -> 4, ( 52968 ) -> 59, ( 52969 ) -> 32, ( 52970 ) -> 91, ( 52971 ) -> 22, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52960 ) -> 4, ( 52968 ) -> 59, ( 52969 ) -> 32, ( 52970 ) -> 91, ( 52971 ) -> 22, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52960 ) -> 4, ( 52968 ) -> 59, ( 52969 ) -> 32, ( 52970 ) -> 91, ( 52971 ) -> 22, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 4 : BV:32
=unaliased_memslot.0
1 : 375070779 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
917679292
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 6 nodece_path
=pc L0%0%1_L0%0%1 nodece 6 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 6 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52960 ) -> 4, ( 52968 ) -> 59, ( 52969 ) -> 32, ( 52970 ) -> 91, ( 52971 ) -> 22, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52960 ) -> 4, ( 52968 ) -> 59, ( 52969 ) -> 32, ( 52970 ) -> 91, ( 52971 ) -> 22, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52960 ) -> 4, ( 52968 ) -> 59, ( 52969 ) -> 32, ( 52970 ) -> 91, ( 52971 ) -> 22, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 4 : BV:32
=unaliased_memslot.0
1 : 375070779 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
917679292
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 7
=pc L0%0%1_L0%0%1 nodece 7 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52968 ) -> 255, ( 52969 ) -> 255, ( 52970 ) -> 255, ( 52971 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52968 ) -> 255, ( 52969 ) -> 255, ( 52970 ) -> 255, ( 52971 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52968 ) -> 255, ( 52969 ) -> 255, ( 52970 ) -> 255, ( 52971 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2006811972
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 7 nodece_path
=pc L0%0%1_L0%0%1 nodece 7 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 7 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52968 ) -> 255, ( 52969 ) -> 255, ( 52970 ) -> 255, ( 52971 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52968 ) -> 255, ( 52969 ) -> 255, ( 52970 ) -> 255, ( 52971 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52968 ) -> 255, ( 52969 ) -> 255, ( 52970 ) -> 255, ( 52971 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2006811972
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 8
=pc L0%0%1_L0%0%1 nodece 8 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52971 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52971 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52971 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2147483648 { -2147483648 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1253207672
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 8 nodece_path
=pc L0%0%1_L0%0%1 nodece 8 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 8 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52971 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52971 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52971 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2147483648 { -2147483648 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1253207672
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 9
=pc L0%0%1_L0%0%1 nodece 9 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192008 ) -> 4, ( 192016 ) -> 58, ( 192017 ) -> 152, ( 192018 ) -> 248, ( 192019 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192008 ) -> 4, ( 192016 ) -> 58, ( 192017 ) -> 152, ( 192018 ) -> 248, ( 192019 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 192008 ) -> 4, ( 192016 ) -> 58, ( 192017 ) -> 152, ( 192018 ) -> 248, ( 192019 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 116955194 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 4 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1242608872
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 9 nodece_path
=pc L0%0%1_L0%0%1 nodece 9 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 9 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192008 ) -> 4, ( 192016 ) -> 58, ( 192017 ) -> 152, ( 192018 ) -> 248, ( 192019 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192008 ) -> 4, ( 192016 ) -> 58, ( 192017 ) -> 152, ( 192018 ) -> 248, ( 192019 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 192008 ) -> 4, ( 192016 ) -> 58, ( 192017 ) -> 152, ( 192018 ) -> 248, ( 192019 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 116955194 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 4 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1242608872
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 10
=pc L0%0%1_L0%0%1 nodece 10 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192016 ) -> 255, ( 192017 ) -> 255, ( 192018 ) -> 255, ( 192019 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192016 ) -> 255, ( 192017 ) -> 255, ( 192018 ) -> 255, ( 192019 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 192016 ) -> 255, ( 192017 ) -> 255, ( 192018 ) -> 255, ( 192019 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1137949908
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 10 nodece_path
=pc L0%0%1_L0%0%1 nodece 10 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 10 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192016 ) -> 255, ( 192017 ) -> 255, ( 192018 ) -> 255, ( 192019 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192016 ) -> 255, ( 192017 ) -> 255, ( 192018 ) -> 255, ( 192019 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 192016 ) -> 255, ( 192017 ) -> 255, ( 192018 ) -> 255, ( 192019 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1137949908
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 11
=pc L0%0%1_L0%0%1 nodece 11 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192019 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192019 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 192019 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1277849958
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 11 nodece_path
=pc L0%0%1_L0%0%1 nodece 11 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 11 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192019 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192019 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 192019 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1277849958
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 12
=pc L0%0%1_L0%0%1 nodece 12 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 319999 ) -> 17, ( 52964 ) -> 36, ( 319996 ) -> 154, ( 319997 ) -> 84, ( 319998 ) -> 99, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 319999 ) -> 17, ( 52964 ) -> 36, ( 319996 ) -> 154, ( 319997 ) -> 84, ( 319998 ) -> 99, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 319999 ) -> 17, ( 52964 ) -> 36, ( 319996 ) -> 154, ( 319997 ) -> 84, ( 319998 ) -> 99, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 36 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 291722394 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1974806403
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 12 nodece_path
=pc L0%0%1_L0%0%1 nodece 12 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 12 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 319999 ) -> 17, ( 52964 ) -> 36, ( 319996 ) -> 154, ( 319997 ) -> 84, ( 319998 ) -> 99, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 319999 ) -> 17, ( 52964 ) -> 36, ( 319996 ) -> 154, ( 319997 ) -> 84, ( 319998 ) -> 99, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 319999 ) -> 17, ( 52964 ) -> 36, ( 319996 ) -> 154, ( 319997 ) -> 84, ( 319998 ) -> 99, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 36 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 291722394 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1974806403
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 13
=pc L0%0%1_L0%0%1 nodece 13 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52960 ) -> 0, ( 52961 ) -> 0, ( 52962 ) -> 0, ( 52963 ) -> 0, ( 52964 ) -> 0, ( 52965 ) -> 0, ( 52966 ) -> 0, ( 52967 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52960 ) -> 0, ( 52961 ) -> 0, ( 52962 ) -> 0, ( 52963 ) -> 0, ( 52964 ) -> 0, ( 52965 ) -> 0, ( 52966 ) -> 0, ( 52967 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52960 ) -> 0, ( 52961 ) -> 0, ( 52962 ) -> 0, ( 52963 ) -> 0, ( 52964 ) -> 0, ( 52965 ) -> 0, ( 52966 ) -> 0, ( 52967 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1473144500
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 13 nodece_path
=pc L0%0%1_L0%0%1 nodece 13 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 13 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52960 ) -> 0, ( 52961 ) -> 0, ( 52962 ) -> 0, ( 52963 ) -> 0, ( 52964 ) -> 0, ( 52965 ) -> 0, ( 52966 ) -> 0, ( 52967 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52960 ) -> 0, ( 52961 ) -> 0, ( 52962 ) -> 0, ( 52963 ) -> 0, ( 52964 ) -> 0, ( 52965 ) -> 0, ( 52966 ) -> 0, ( 52967 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52960 ) -> 0, ( 52961 ) -> 0, ( 52962 ) -> 0, ( 52963 ) -> 0, ( 52964 ) -> 0, ( 52965 ) -> 0, ( 52966 ) -> 0, ( 52967 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1473144500
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 14
=pc L0%0%1_L0%0%1 nodece 14 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52960 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52960 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52960 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1739000681
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 14 nodece_path
=pc L0%0%1_L0%0%1 nodece 14 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 14 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52960 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52960 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52960 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1739000681
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 15
=pc L0%0%1_L0%0%1 nodece 15 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 255, ( 180954 ) -> 255, ( 180955 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 255, ( 180954 ) -> 255, ( 180955 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 255, ( 180954 ) -> 255, ( 180955 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2016764524
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 15 nodece_path
=pc L0%0%1_L0%0%1 nodece 15 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 15 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 255, ( 180954 ) -> 255, ( 180955 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 255, ( 180954 ) -> 255, ( 180955 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 255, ( 180954 ) -> 255, ( 180955 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2016764524
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 16
=pc L0%0%1_L0%0%1 nodece 16 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 255, ( 180954 ) -> 255, ( 180955 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 255, ( 180954 ) -> 255, ( 180955 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 255, ( 180954 ) -> 255, ( 180955 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1717226057
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 16 nodece_path
=pc L0%0%1_L0%0%1 nodece 16 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 16 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 255, ( 180954 ) -> 255, ( 180955 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 255, ( 180954 ) -> 255, ( 180955 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 255, ( 180954 ) -> 255, ( 180955 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1717226057
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 17
=pc L0%0%1_L0%0%1 nodece 17 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52967 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52967 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52967 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 268435456 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1748349614
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 17 nodece_path
=pc L0%0%1_L0%0%1 nodece 17 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 17 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52967 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52967 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52967 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 268435456 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1748349614
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 18
=pc L0%0%1_L0%0%1 nodece 18 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 180944 ) -> 255, ( 180945 ) -> 255, ( 180946 ) -> 255, ( 180947 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 180944 ) -> 255, ( 180945 ) -> 255, ( 180946 ) -> 255, ( 180947 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 180944 ) -> 255, ( 180945 ) -> 255, ( 180946 ) -> 255, ( 180947 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1353436873
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 18 nodece_path
=pc L0%0%1_L0%0%1 nodece 18 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 18 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 180944 ) -> 255, ( 180945 ) -> 255, ( 180946 ) -> 255, ( 180947 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 180944 ) -> 255, ( 180945 ) -> 255, ( 180946 ) -> 255, ( 180947 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 180944 ) -> 255, ( 180945 ) -> 255, ( 180946 ) -> 255, ( 180947 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1353436873
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 19
=pc L0%0%1_L0%0%1 nodece 19 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 319992 ) -> 255, ( 319993 ) -> 255, ( 319994 ) -> 255, ( 319995 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 319992 ) -> 255, ( 319993 ) -> 255, ( 319994 ) -> 255, ( 319995 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 319992 ) -> 255, ( 319993 ) -> 255, ( 319994 ) -> 255, ( 319995 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1983228458
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 19 nodece_path
=pc L0%0%1_L0%0%1 nodece 19 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 19 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 319992 ) -> 255, ( 319993 ) -> 255, ( 319994 ) -> 255, ( 319995 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 319992 ) -> 255, ( 319993 ) -> 255, ( 319994 ) -> 255, ( 319995 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 319992 ) -> 255, ( 319993 ) -> 255, ( 319994 ) -> 255, ( 319995 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1983228458
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 20
=pc L0%0%1_L0%0%1 nodece 20 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52967 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52967 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52967 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 134217728 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1584710873
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 20 nodece_path
=pc L0%0%1_L0%0%1 nodece 20 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 20 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52967 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52967 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52967 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 134217728 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1584710873
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 21
=pc L0%0%1_L0%0%1 nodece 21 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 180948 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 180948 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 180948 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 15 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2073785404
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 21 nodece_path
=pc L0%0%1_L0%0%1 nodece 21 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 21 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 180948 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 180948 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 180948 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 15 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2073785404
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 22
=pc L0%0%1_L0%0%1 nodece 22 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192012 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192012 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 192012 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 15 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
333582338
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 22 nodece_path
=pc L0%0%1_L0%0%1 nodece 22 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 22 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192012 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192012 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 192012 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 15 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
333582338
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 23
=pc L0%0%1_L0%0%1 nodece 23 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192012 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192012 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 192012 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 8 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
628974580
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 23 nodece_path
=pc L0%0%1_L0%0%1 nodece 23 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 23 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192012 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192012 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 192012 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 8 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
628974580
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 24
=pc L0%0%1_L0%0%1 nodece 24 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 319996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 319996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 319996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1388803074
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 24 nodece_path
=pc L0%0%1_L0%0%1 nodece 24 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 24 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 319996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 319996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 319996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1388803074
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 25
=pc L0%0%1_L0%0%1 nodece 25 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 319988 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 319988 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 319988 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
733327814
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 25 nodece_path
=pc L0%0%1_L0%0%1 nodece 25 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 25 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 319988 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 319988 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 319988 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
733327814
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 26
=pc L0%0%1_L0%0%1 nodece 26 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 319996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 319996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 319996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
107734713
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 26 nodece_path
=pc L0%0%1_L0%0%1 nodece 26 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 26 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 319996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 319996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 319996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
107734713
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 27
=pc L0%0%1_L0%0%1 nodece 27 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1630387677
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 27 nodece_path
=pc L0%0%1_L0%0%1 nodece 27 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 27 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1630387677
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 28
=pc L0%0%1_L0%0%1 nodece 28 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
554290596
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 28 nodece_path
=pc L0%0%1_L0%0%1 nodece 28 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 28 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
554290596
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 29
=pc L0%0%1_L0%0%1 nodece 29 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 222 , m_adder -> 218)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 222 , m_adder -> 218)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3098671733
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 29 nodece_path
=pc L0%0%1_L0%0%1 nodece 29 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 29 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 222 , m_adder -> 218)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 222 , m_adder -> 218)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3098671733
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 30
=pc L0%0%1_L0%0%1 nodece 30 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
14989683
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 30 nodece_path
=pc L0%0%1_L0%0%1 nodece 30 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 30 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
14989683
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 31
=pc L0%0%1_L0%0%1 nodece 31 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1242561041
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 31 nodece_path
=pc L0%0%1_L0%0%1 nodece 31 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 31 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1242561041
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 32
=pc L0%0%1_L0%0%1 nodece 32 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 30 , m_adder -> 211)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 30 , m_adder -> 211)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3029179216
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 32 nodece_path
=pc L0%0%1_L0%0%1 nodece 32 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 32 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 30 , m_adder -> 211)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 30 , m_adder -> 211)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3029179216
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 33
=pc L0%0%1_L0%0%1 nodece 33 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
343945053
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 33 nodece_path
=pc L0%0%1_L0%0%1 nodece 33 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 33 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
343945053
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 34
=pc L0%0%1_L0%0%1 nodece 34 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
661955081
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 34 nodece_path
=pc L0%0%1_L0%0%1 nodece 34 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 34 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
661955081
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 35
=pc L0%0%1_L0%0%1 nodece 35 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 50 , m_adder -> 168)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 50 , m_adder -> 168)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
20741986
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 35 nodece_path
=pc L0%0%1_L0%0%1 nodece 35 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 35 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 50 , m_adder -> 168)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 50 , m_adder -> 168)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
20741986
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 36
=pc L0%0%1_L0%0%1 nodece 36 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1287859999
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 36 nodece_path
=pc L0%0%1_L0%0%1 nodece 36 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 36 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1287859999
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 37
=pc L0%0%1_L0%0%1 nodece 37 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
298501962
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 37 nodece_path
=pc L0%0%1_L0%0%1 nodece 37 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 37 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
298501962
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 38
=pc L0%0%1_L0%0%1 nodece 38 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 245 , m_adder -> 42)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 245 , m_adder -> 42)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3632899217
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 38 nodece_path
=pc L0%0%1_L0%0%1 nodece 38 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 38 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 245 , m_adder -> 42)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 245 , m_adder -> 42)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3632899217
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 39
=pc L0%0%1_L0%0%1 nodece 39 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 319984 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 319984 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 319984 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 3 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
216220853
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 39 nodece_path
=pc L0%0%1_L0%0%1 nodece 39 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 39 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 319984 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 319984 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 319984 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 3 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
216220853
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 40
=pc L0%0%1_L0%0%1 nodece 40 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52972 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52972 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52972 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
699460008
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 40 nodece_path
=pc L0%0%1_L0%0%1 nodece 40 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 40 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52972 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52972 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52972 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
699460008
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 41
=pc L0%0%1_L0%0%1 nodece 41 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52972 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52972 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52972 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1867107722
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 41 nodece_path
=pc L0%0%1_L0%0%1 nodece 41 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 41 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52972 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52972 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52972 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1867107722
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 42
=pc L0%0%1_L0%0%1 nodece 42 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
415522325
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 42 nodece_path
=pc L0%0%1_L0%0%1 nodece 42 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 42 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
415522325
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 43
=pc L0%0%1_L0%0%1 nodece 43 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1799560997
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 43 nodece_path
=pc L0%0%1_L0%0%1 nodece 43 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 43 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1799560997
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 44
=pc L0%0%1_L0%0%1 nodece 44 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 229 , m_adder -> 178)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 229 , m_adder -> 178)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
541207347
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 44 nodece_path
=pc L0%0%1_L0%0%1 nodece 44 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 44 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 229 , m_adder -> 178)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 229 , m_adder -> 178)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
541207347
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 45
=pc L0%0%1_L0%0%1 nodece 45 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 28128 : BV:32
=symbol.2
1 : 4294836288 { -131008 } : BV:32
=dst_symbol_addr.1
1 : 28128 : BV:32
=dst_symbol_addr.2
1 : 4294836288 { -131008 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294692860 { -274436 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 156127 : BV:32
=stack.size
1 : 4294471680 { -495616 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294964287 { -3009 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294836288 { -131008 } : BV:32
=memlabel-mem-esp_end
1 : 4294692863 { -274433 } : BV:32
=memlabel-mem-esp_begin
1 : 221184 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 28128 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1379413094
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 45 nodece_path
=pc L0%0%1_L0%0%1 nodece 45 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 45 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 28128 : BV:32
=symbol.2
1 : 4294836288 { -131008 } : BV:32
=dst_symbol_addr.1
1 : 28128 : BV:32
=dst_symbol_addr.2
1 : 4294836288 { -131008 } : BV:32
=input_stack_pointer_const
1 : 4294692860 { -274436 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 156127 : BV:32
=stack.size
1 : 4294471680 { -495616 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294964287 { -3009 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294836288 { -131008 } : BV:32
=memlabel-mem-esp_end
1 : 4294692863 { -274433 } : BV:32
=memlabel-mem-esp_begin
1 : 221184 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 28128 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1379413094
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 46
=pc L0%0%1_L0%0%1 nodece 46 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1464150254
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 46 nodece_path
=pc L0%0%1_L0%0%1 nodece 46 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 46 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1464150254
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 47
=pc L0%0%1_L0%0%1 nodece 47 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 238 , m_adder -> 27)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 238 , m_adder -> 27)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3044481074
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 47 nodece_path
=pc L0%0%1_L0%0%1 nodece 47 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 47 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 238 , m_adder -> 27)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 238 , m_adder -> 27)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3044481074
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 48
=pc L0%0%1_L0%0%1 nodece 48 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 2227288064 { -2067679232 } : BV:32
=symbol.2
1 : 3980377104 { -314590192 } : BV:32
=dst_symbol_addr.1
1 : 2227288064 { -2067679232 } : BV:32
=dst_symbol_addr.2
1 : 3980377104 { -314590192 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1833021436 : BV:32
=input.src.llvm-mem
1 : (( 2227416063 ) -> 72, ( 2227288068 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2227416063 ) -> 72, ( 2227288068 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2227416063 { -2067551233 } : BV:32
=stack.size
1 : 95006720 : BV:32
=input.dst.mem
1 : (( 2227416063 ) -> 72, ( 2227288068 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3980505103 { -314462193 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3980377104 { -314590192 } : BV:32
=memlabel-mem-esp_end
1 : 1833021439 : BV:32
=memlabel-mem-esp_begin
1 : 1738014720 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2227288064 { -2067679232 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
535187618
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 48 nodece_path
=pc L0%0%1_L0%0%1 nodece 48 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 48 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 2227288064 { -2067679232 } : BV:32
=symbol.2
1 : 3980377104 { -314590192 } : BV:32
=dst_symbol_addr.1
1 : 2227288064 { -2067679232 } : BV:32
=dst_symbol_addr.2
1 : 3980377104 { -314590192 } : BV:32
=input_stack_pointer_const
1 : 1833021436 : BV:32
=input.src.llvm-mem
1 : (( 2227416063 ) -> 72, ( 2227288068 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2227416063 ) -> 72, ( 2227288068 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2227416063 { -2067551233 } : BV:32
=stack.size
1 : 95006720 : BV:32
=input.dst.mem
1 : (( 2227416063 ) -> 72, ( 2227288068 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3980505103 { -314462193 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3980377104 { -314590192 } : BV:32
=memlabel-mem-esp_end
1 : 1833021439 : BV:32
=memlabel-mem-esp_begin
1 : 1738014720 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2227288064 { -2067679232 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
535187618
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 49
=pc L0%0%1_L0%0%1 nodece 49 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4294728720 { -238576 } : BV:32
=symbol.2
1 : 4290669568 { -4297728 } : BV:32
=dst_symbol_addr.1
1 : 4294728720 { -238576 } : BV:32
=dst_symbol_addr.2
1 : 4290669568 { -4297728 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4290523132 { -4444164 } : BV:32
=input.src.llvm-mem
1 : (( 4294856719 ) -> 255, ( 4294856718 ) -> 255, ( 4294856716 ) -> 255, ( 4294856717 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4294856719 ) -> 255, ( 4294856718 ) -> 255, ( 4294856716 ) -> 255, ( 4294856717 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294856719 { -110577 } : BV:32
=stack.size
1 : 4290514944 { -4452352 } : BV:32
=input.dst.mem
1 : (( 4294856719 ) -> 255, ( 4294856718 ) -> 255, ( 4294856716 ) -> 255, ( 4294856717 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4290797567 { -4169729 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4290669568 { -4297728 } : BV:32
=memlabel-mem-esp_end
1 : 4290523135 { -4444161 } : BV:32
=memlabel-mem-esp_begin
1 : 8192 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294728720 { -238576 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
693807394
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 49 nodece_path
=pc L0%0%1_L0%0%1 nodece 49 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 49 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 4294728720 { -238576 } : BV:32
=symbol.2
1 : 4290669568 { -4297728 } : BV:32
=dst_symbol_addr.1
1 : 4294728720 { -238576 } : BV:32
=dst_symbol_addr.2
1 : 4290669568 { -4297728 } : BV:32
=input_stack_pointer_const
1 : 4290523132 { -4444164 } : BV:32
=input.src.llvm-mem
1 : (( 4294856719 ) -> 255, ( 4294856718 ) -> 255, ( 4294856716 ) -> 255, ( 4294856717 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4294856719 ) -> 255, ( 4294856718 ) -> 255, ( 4294856716 ) -> 255, ( 4294856717 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294856719 { -110577 } : BV:32
=stack.size
1 : 4290514944 { -4452352 } : BV:32
=input.dst.mem
1 : (( 4294856719 ) -> 255, ( 4294856718 ) -> 255, ( 4294856716 ) -> 255, ( 4294856717 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4290797567 { -4169729 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4290669568 { -4297728 } : BV:32
=memlabel-mem-esp_end
1 : 4290523135 { -4444161 } : BV:32
=memlabel-mem-esp_begin
1 : 8192 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294728720 { -238576 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
693807394
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 50
=pc L0%0%1_L0%0%1 nodece 50 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664255 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 637664255 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 637664255 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
406967877
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 50 nodece_path
=pc L0%0%1_L0%0%1 nodece 50 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 50 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664255 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 637664255 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 637664255 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
406967877
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 51
=pc L0%0%1_L0%0%1 nodece 51 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1233934451
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 51 nodece_path
=pc L0%0%1_L0%0%1 nodece 51 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 51 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1233934451
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 52
=pc L0%0%1_L0%0%1 nodece 52 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1325366596
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 52 nodece_path
=pc L0%0%1_L0%0%1 nodece 52 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 52 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1325366596
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 53
=pc L0%0%1_L0%0%1 nodece 53 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 255 , m_adder -> 137)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 255 , m_adder -> 137)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2899573782
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 53 nodece_path
=pc L0%0%1_L0%0%1 nodece 53 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 53 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 255 , m_adder -> 137)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 255 , m_adder -> 137)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2899573782
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 54
=pc L0%0%1_L0%0%1 nodece 54 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 18729984 : BV:32
=symbol.2
1 : 4190176 : BV:32
=dst_symbol_addr.1
1 : 18729984 : BV:32
=dst_symbol_addr.2
1 : 4190176 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4292841468 { -2125828 } : BV:32
=input.src.llvm-mem
1 : (( 4190186 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4190186 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 18857983 : BV:32
=stack.size
1 : 4234113024 { -60854272 } : BV:32
=input.dst.mem
1 : (( 4190186 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4318175 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4190176 : BV:32
=memlabel-mem-esp_end
1 : 4292841471 { -2125825 } : BV:32
=memlabel-mem-esp_begin
1 : 58728448 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 18729984 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1048576 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1680949563
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 54 nodece_path
=pc L0%0%1_L0%0%1 nodece 54 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 54 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 18729984 : BV:32
=symbol.2
1 : 4190176 : BV:32
=dst_symbol_addr.1
1 : 18729984 : BV:32
=dst_symbol_addr.2
1 : 4190176 : BV:32
=input_stack_pointer_const
1 : 4292841468 { -2125828 } : BV:32
=input.src.llvm-mem
1 : (( 4190186 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4190186 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 18857983 : BV:32
=stack.size
1 : 4234113024 { -60854272 } : BV:32
=input.dst.mem
1 : (( 4190186 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4318175 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4190176 : BV:32
=memlabel-mem-esp_end
1 : 4292841471 { -2125825 } : BV:32
=memlabel-mem-esp_begin
1 : 58728448 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 18729984 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1048576 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1680949563
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 55
=pc L0%0%1_L0%0%1 nodece 55 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3464375296 { -830592000 } : BV:32
=symbol.2
1 : 3707386896 { -587580400 } : BV:32
=dst_symbol_addr.1
1 : 3464375296 { -830592000 } : BV:32
=dst_symbol_addr.2
1 : 3707386896 { -587580400 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-mem
1 : (( 3464375307 ) -> 255, ( 3464375305 ) -> 255, ( 3464375306 ) -> 255, ( 3464375304 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3464375307 ) -> 255, ( 3464375305 ) -> 255, ( 3464375306 ) -> 255, ( 3464375304 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3464503295 { -830464001 } : BV:32
=stack.size
1 : 3034525696 { -1260441600 } : BV:32
=input.dst.mem
1 : (( 3464375307 ) -> 255, ( 3464375305 ) -> 255, ( 3464375306 ) -> 255, ( 3464375304 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3707514895 { -587452401 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707386896 { -587580400 } : BV:32
=memlabel-mem-esp_end
1 : 3437506559 { -857460737 } : BV:32
=memlabel-mem-esp_begin
1 : 402980864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3464375296 { -830592000 } : BV:32
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
790413831
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 55 nodece_path
=pc L0%0%1_L0%0%1 nodece 55 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 55 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3464375296 { -830592000 } : BV:32
=symbol.2
1 : 3707386896 { -587580400 } : BV:32
=dst_symbol_addr.1
1 : 3464375296 { -830592000 } : BV:32
=dst_symbol_addr.2
1 : 3707386896 { -587580400 } : BV:32
=input_stack_pointer_const
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-mem
1 : (( 3464375307 ) -> 255, ( 3464375305 ) -> 255, ( 3464375306 ) -> 255, ( 3464375304 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3464375307 ) -> 255, ( 3464375305 ) -> 255, ( 3464375306 ) -> 255, ( 3464375304 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3464503295 { -830464001 } : BV:32
=stack.size
1 : 3034525696 { -1260441600 } : BV:32
=input.dst.mem
1 : (( 3464375307 ) -> 255, ( 3464375305 ) -> 255, ( 3464375306 ) -> 255, ( 3464375304 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3707514895 { -587452401 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707386896 { -587580400 } : BV:32
=memlabel-mem-esp_end
1 : 3437506559 { -857460737 } : BV:32
=memlabel-mem-esp_begin
1 : 402980864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3464375296 { -830592000 } : BV:32
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
790413831
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 56
=pc L0%0%1_L0%0%1 nodece 56 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 268308491 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 268308491 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 268308491 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2147483648 { -2147483648 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1091359264
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 56 nodece_path
=pc L0%0%1_L0%0%1 nodece 56 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 56 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 268308491 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 268308491 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 268308491 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2147483648 { -2147483648 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1091359264
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 57
=pc L0%0%1_L0%0%1 nodece 57 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 920576 : BV:32
=symbol.2
1 : 748592 : BV:32
=dst_symbol_addr.1
1 : 920576 : BV:32
=dst_symbol_addr.2
1 : 748592 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1048570 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1048570 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1048575 : BV:32
=stack.size
1 : 4293914624 { -1052672 } : BV:32
=input.dst.mem
1 : (( 1048570 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 876591 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 748592 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 1052672 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 920576 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1874586284
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 57 nodece_path
=pc L0%0%1_L0%0%1 nodece 57 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 57 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 920576 : BV:32
=symbol.2
1 : 748592 : BV:32
=dst_symbol_addr.1
1 : 920576 : BV:32
=dst_symbol_addr.2
1 : 748592 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1048570 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1048570 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1048575 : BV:32
=stack.size
1 : 4293914624 { -1052672 } : BV:32
=input.dst.mem
1 : (( 1048570 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 876591 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 748592 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 1052672 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 920576 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1874586284
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 58
=pc L0%0%1_L0%0%1 nodece 58 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3464375296 { -830592000 } : BV:32
=symbol.2
1 : 3707386896 { -587580400 } : BV:32
=dst_symbol_addr.1
1 : 3464375296 { -830592000 } : BV:32
=dst_symbol_addr.2
1 : 3707386896 { -587580400 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-mem
1 : (( 3707514890 ) -> 255, ( 3707514891 ) -> 255, ( 3707514889 ) -> 255, ( 3707514888 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3707514890 ) -> 255, ( 3707514891 ) -> 255, ( 3707514889 ) -> 255, ( 3707514888 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3464503295 { -830464001 } : BV:32
=stack.size
1 : 3034525696 { -1260441600 } : BV:32
=input.dst.mem
1 : (( 3707514890 ) -> 255, ( 3707514891 ) -> 255, ( 3707514889 ) -> 255, ( 3707514888 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3707514895 { -587452401 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707386896 { -587580400 } : BV:32
=memlabel-mem-esp_end
1 : 3437506559 { -857460737 } : BV:32
=memlabel-mem-esp_begin
1 : 402980864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3464375296 { -830592000 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1615408917
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 58 nodece_path
=pc L0%0%1_L0%0%1 nodece 58 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 58 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3464375296 { -830592000 } : BV:32
=symbol.2
1 : 3707386896 { -587580400 } : BV:32
=dst_symbol_addr.1
1 : 3464375296 { -830592000 } : BV:32
=dst_symbol_addr.2
1 : 3707386896 { -587580400 } : BV:32
=input_stack_pointer_const
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-mem
1 : (( 3707514890 ) -> 255, ( 3707514891 ) -> 255, ( 3707514889 ) -> 255, ( 3707514888 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3707514890 ) -> 255, ( 3707514891 ) -> 255, ( 3707514889 ) -> 255, ( 3707514888 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3464503295 { -830464001 } : BV:32
=stack.size
1 : 3034525696 { -1260441600 } : BV:32
=input.dst.mem
1 : (( 3707514890 ) -> 255, ( 3707514891 ) -> 255, ( 3707514889 ) -> 255, ( 3707514888 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3707514895 { -587452401 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707386896 { -587580400 } : BV:32
=memlabel-mem-esp_end
1 : 3437506559 { -857460737 } : BV:32
=memlabel-mem-esp_begin
1 : 402980864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3464375296 { -830592000 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1615408917
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 59
=pc L0%0%1_L0%0%1 nodece 59 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664251 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 637664251 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 637664251 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2094197274
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 59 nodece_path
=pc L0%0%1_L0%0%1 nodece 59 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 59 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664251 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 637664251 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 637664251 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2094197274
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 60
=pc L0%0%1_L0%0%1 nodece 60 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3464375296 { -830592000 } : BV:32
=symbol.2
1 : 3707386896 { -587580400 } : BV:32
=dst_symbol_addr.1
1 : 3464375296 { -830592000 } : BV:32
=dst_symbol_addr.2
1 : 3707386896 { -587580400 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-mem
1 : (( 3464503282 ) -> 255, ( 3464503283 ) -> 255, ( 3464503281 ) -> 255, ( 3464503280 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3464503282 ) -> 255, ( 3464503283 ) -> 255, ( 3464503281 ) -> 255, ( 3464503280 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3464503295 { -830464001 } : BV:32
=stack.size
1 : 3034525696 { -1260441600 } : BV:32
=input.dst.mem
1 : (( 3464503282 ) -> 255, ( 3464503283 ) -> 255, ( 3464503281 ) -> 255, ( 3464503280 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3707514895 { -587452401 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707386896 { -587580400 } : BV:32
=memlabel-mem-esp_end
1 : 3437506559 { -857460737 } : BV:32
=memlabel-mem-esp_begin
1 : 402980864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3464375296 { -830592000 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1515450385
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 60 nodece_path
=pc L0%0%1_L0%0%1 nodece 60 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 60 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3464375296 { -830592000 } : BV:32
=symbol.2
1 : 3707386896 { -587580400 } : BV:32
=dst_symbol_addr.1
1 : 3464375296 { -830592000 } : BV:32
=dst_symbol_addr.2
1 : 3707386896 { -587580400 } : BV:32
=input_stack_pointer_const
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-mem
1 : (( 3464503282 ) -> 255, ( 3464503283 ) -> 255, ( 3464503281 ) -> 255, ( 3464503280 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3464503282 ) -> 255, ( 3464503283 ) -> 255, ( 3464503281 ) -> 255, ( 3464503280 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3464503295 { -830464001 } : BV:32
=stack.size
1 : 3034525696 { -1260441600 } : BV:32
=input.dst.mem
1 : (( 3464503282 ) -> 255, ( 3464503283 ) -> 255, ( 3464503281 ) -> 255, ( 3464503280 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3707514895 { -587452401 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707386896 { -587580400 } : BV:32
=memlabel-mem-esp_end
1 : 3437506559 { -857460737 } : BV:32
=memlabel-mem-esp_begin
1 : 402980864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3464375296 { -830592000 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1515450385
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 61
=pc L0%0%1_L0%0%1 nodece 61 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1659447024 : BV:32
=symbol.2
1 : 2045379584 : BV:32
=dst_symbol_addr.1
1 : 1659447024 : BV:32
=dst_symbol_addr.2
1 : 2045379584 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294930428 { -36868 } : BV:32
=input.src.llvm-mem
1 : (( 2045507569 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2045507569 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1659575023 : BV:32
=stack.size
1 : 2147450880 : BV:32
=input.dst.mem
1 : (( 2045507569 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2045507583 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2045379584 : BV:32
=memlabel-mem-esp_end
1 : 4294930431 { -36865 } : BV:32
=memlabel-mem-esp_begin
1 : 2147479552 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1659447024 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2071977971
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 61 nodece_path
=pc L0%0%1_L0%0%1 nodece 61 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 61 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1659447024 : BV:32
=symbol.2
1 : 2045379584 : BV:32
=dst_symbol_addr.1
1 : 1659447024 : BV:32
=dst_symbol_addr.2
1 : 2045379584 : BV:32
=input_stack_pointer_const
1 : 4294930428 { -36868 } : BV:32
=input.src.llvm-mem
1 : (( 2045507569 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2045507569 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1659575023 : BV:32
=stack.size
1 : 2147450880 : BV:32
=input.dst.mem
1 : (( 2045507569 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2045507583 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2045379584 : BV:32
=memlabel-mem-esp_end
1 : 4294930431 { -36865 } : BV:32
=memlabel-mem-esp_begin
1 : 2147479552 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1659447024 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2071977971
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 62
=pc L0%0%1_L0%0%1 nodece 62 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664243 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 637664243 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 637664243 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1749146145
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 62 nodece_path
=pc L0%0%1_L0%0%1 nodece 62 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 62 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664243 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 637664243 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 637664243 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1749146145
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 63
=pc L0%0%1_L0%0%1 nodece 63 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4279183360 { -15783936 } : BV:32
=symbol.2
1 : 4261178368 { -33788928 } : BV:32
=dst_symbol_addr.1
1 : 4279183360 { -15783936 } : BV:32
=dst_symbol_addr.2
1 : 4261178368 { -33788928 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4227604476 { -67362820 } : BV:32
=input.src.llvm-mem
1 : (( 4261178377 ) -> 31, ( 4261178376 ) -> 84, ( 4279311348 ) -> 126, ( 4261178372 ) -> 0, ( 4261306352 ) -> 128, ( 4279311349 ) -> 7, ( 4261306353 ) -> 28, () -> 35) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4261178377 ) -> 31, ( 4261178376 ) -> 84, ( 4279311348 ) -> 126, ( 4261178372 ) -> 0, ( 4261306352 ) -> 128, ( 4279311349 ) -> 7, ( 4261306353 ) -> 28, () -> 35) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4279311359 { -15655937 } : BV:32
=stack.size
1 : 4227600384 { -67366912 } : BV:32
=input.dst.mem
1 : (( 4261178377 ) -> 31, ( 4261178376 ) -> 84, ( 4279311348 ) -> 126, ( 4261178372 ) -> 0, ( 4261306352 ) -> 128, ( 4279311349 ) -> 7, ( 4261306353 ) -> 28, () -> 35) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4261306367 { -33660929 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4261178368 { -33788928 } : BV:32
=memlabel-mem-esp_end
1 : 4227604479 { -67362817 } : BV:32
=memlabel-mem-esp_begin
1 : 4096 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4279183360 { -15783936 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
845987038
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 63 nodece_path
=pc L0%0%1_L0%0%1 nodece 63 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 63 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 4279183360 { -15783936 } : BV:32
=symbol.2
1 : 4261178368 { -33788928 } : BV:32
=dst_symbol_addr.1
1 : 4279183360 { -15783936 } : BV:32
=dst_symbol_addr.2
1 : 4261178368 { -33788928 } : BV:32
=input_stack_pointer_const
1 : 4227604476 { -67362820 } : BV:32
=input.src.llvm-mem
1 : (( 4261178377 ) -> 31, ( 4261178376 ) -> 84, ( 4279311348 ) -> 126, ( 4261178372 ) -> 0, ( 4261306352 ) -> 128, ( 4279311349 ) -> 7, ( 4261306353 ) -> 28, () -> 35) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4261178377 ) -> 31, ( 4261178376 ) -> 84, ( 4279311348 ) -> 126, ( 4261178372 ) -> 0, ( 4261306352 ) -> 128, ( 4279311349 ) -> 7, ( 4261306353 ) -> 28, () -> 35) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4279311359 { -15655937 } : BV:32
=stack.size
1 : 4227600384 { -67366912 } : BV:32
=input.dst.mem
1 : (( 4261178377 ) -> 31, ( 4261178376 ) -> 84, ( 4279311348 ) -> 126, ( 4261178372 ) -> 0, ( 4261306352 ) -> 128, ( 4279311349 ) -> 7, ( 4261306353 ) -> 28, () -> 35) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4261306367 { -33660929 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4261178368 { -33788928 } : BV:32
=memlabel-mem-esp_end
1 : 4227604479 { -67362817 } : BV:32
=memlabel-mem-esp_begin
1 : 4096 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4279183360 { -15783936 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
845987038
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 64
=pc L0%0%1_L0%0%1 nodece 64 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 679741312 : BV:32
=symbol.2
1 : 2676456448 { -1618510848 } : BV:32
=dst_symbol_addr.1
1 : 679741312 : BV:32
=dst_symbol_addr.2
1 : 2676456448 { -1618510848 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 142241788 : BV:32
=input.src.llvm-mem
1 : (( 2676456453 ) -> 14, ( 2676584432 ) -> 193, ( 2676456456 ) -> 66, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2676456453 ) -> 14, ( 2676584432 ) -> 193, ( 2676456456 ) -> 66, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 679869311 : BV:32
=stack.size
1 : 108437504 : BV:32
=input.dst.mem
1 : (( 2676456453 ) -> 14, ( 2676584432 ) -> 193, ( 2676456456 ) -> 66, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2676584447 { -1618382849 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2676456448 { -1618510848 } : BV:32
=memlabel-mem-esp_end
1 : 142241791 : BV:32
=memlabel-mem-esp_begin
1 : 33804288 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 679741312 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1277930067
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 64 nodece_path
=pc L0%0%1_L0%0%1 nodece 64 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 64 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 679741312 : BV:32
=symbol.2
1 : 2676456448 { -1618510848 } : BV:32
=dst_symbol_addr.1
1 : 679741312 : BV:32
=dst_symbol_addr.2
1 : 2676456448 { -1618510848 } : BV:32
=input_stack_pointer_const
1 : 142241788 : BV:32
=input.src.llvm-mem
1 : (( 2676456453 ) -> 14, ( 2676584432 ) -> 193, ( 2676456456 ) -> 66, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2676456453 ) -> 14, ( 2676584432 ) -> 193, ( 2676456456 ) -> 66, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 679869311 : BV:32
=stack.size
1 : 108437504 : BV:32
=input.dst.mem
1 : (( 2676456453 ) -> 14, ( 2676584432 ) -> 193, ( 2676456456 ) -> 66, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2676584447 { -1618382849 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2676456448 { -1618510848 } : BV:32
=memlabel-mem-esp_end
1 : 142241791 : BV:32
=memlabel-mem-esp_begin
1 : 33804288 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 679741312 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1277930067
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 65
=pc L0%0%1_L0%0%1 nodece 65 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 268308485 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 268308485 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 268308485 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1789613693
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 65 nodece_path
=pc L0%0%1_L0%0%1 nodece 65 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 65 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 268308485 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 268308485 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 268308485 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1789613693
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 66
=pc L0%0%1_L0%0%1 nodece 66 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3296603136 { -998364160 } : BV:32
=symbol.2
1 : 3309190160 { -985777136 } : BV:32
=dst_symbol_addr.1
1 : 3296603136 { -998364160 } : BV:32
=dst_symbol_addr.2
1 : 3309190160 { -985777136 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3242209276 { -1052758020 } : BV:32
=input.src.llvm-mem
1 : (( 3309318148 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3309318148 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3296731135 { -998236161 } : BV:32
=stack.size
1 : 3023712256 { -1271255040 } : BV:32
=input.dst.mem
1 : (( 3309318148 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3309318159 { -985649137 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3309190160 { -985777136 } : BV:32
=memlabel-mem-esp_end
1 : 3242209279 { -1052758017 } : BV:32
=memlabel-mem-esp_begin
1 : 218497024 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3296603136 { -998364160 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1831265917
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 66 nodece_path
=pc L0%0%1_L0%0%1 nodece 66 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 66 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3296603136 { -998364160 } : BV:32
=symbol.2
1 : 3309190160 { -985777136 } : BV:32
=dst_symbol_addr.1
1 : 3296603136 { -998364160 } : BV:32
=dst_symbol_addr.2
1 : 3309190160 { -985777136 } : BV:32
=input_stack_pointer_const
1 : 3242209276 { -1052758020 } : BV:32
=input.src.llvm-mem
1 : (( 3309318148 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3309318148 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3296731135 { -998236161 } : BV:32
=stack.size
1 : 3023712256 { -1271255040 } : BV:32
=input.dst.mem
1 : (( 3309318148 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3309318159 { -985649137 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3309190160 { -985777136 } : BV:32
=memlabel-mem-esp_end
1 : 3242209279 { -1052758017 } : BV:32
=memlabel-mem-esp_begin
1 : 218497024 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3296603136 { -998364160 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1831265917
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 67
=pc L0%0%1_L0%0%1 nodece 67 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4288412688 { -6554608 } : BV:32
=symbol.2
1 : 414319616 : BV:32
=dst_symbol_addr.1
1 : 4288412688 { -6554608 } : BV:32
=dst_symbol_addr.2
1 : 414319616 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3185045500 { -1109921796 } : BV:32
=input.src.llvm-mem
1 : (( 4288412700 ) -> 63, ( 414447604 ) -> 0, ( 4288540680 ) -> 0, () -> 191) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4288412700 ) -> 63, ( 414447604 ) -> 0, ( 4288540680 ) -> 0, () -> 191) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4288540687 { -6426609 } : BV:32
=stack.size
1 : 2374430720 { -1920536576 } : BV:32
=input.dst.mem
1 : (( 4288412700 ) -> 63, ( 414447604 ) -> 0, ( 4288540680 ) -> 0, () -> 191) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 414447615 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 414319616 : BV:32
=memlabel-mem-esp_end
1 : 3185045503 { -1109921793 } : BV:32
=memlabel-mem-esp_begin
1 : 810614784 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4288412688 { -6554608 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2115393921
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 67 nodece_path
=pc L0%0%1_L0%0%1 nodece 67 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 67 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 4288412688 { -6554608 } : BV:32
=symbol.2
1 : 414319616 : BV:32
=dst_symbol_addr.1
1 : 4288412688 { -6554608 } : BV:32
=dst_symbol_addr.2
1 : 414319616 : BV:32
=input_stack_pointer_const
1 : 3185045500 { -1109921796 } : BV:32
=input.src.llvm-mem
1 : (( 4288412700 ) -> 63, ( 414447604 ) -> 0, ( 4288540680 ) -> 0, () -> 191) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4288412700 ) -> 63, ( 414447604 ) -> 0, ( 4288540680 ) -> 0, () -> 191) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4288540687 { -6426609 } : BV:32
=stack.size
1 : 2374430720 { -1920536576 } : BV:32
=input.dst.mem
1 : (( 4288412700 ) -> 63, ( 414447604 ) -> 0, ( 4288540680 ) -> 0, () -> 191) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 414447615 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 414319616 : BV:32
=memlabel-mem-esp_end
1 : 3185045503 { -1109921793 } : BV:32
=memlabel-mem-esp_begin
1 : 810614784 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4288412688 { -6554608 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2115393921
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 68
=pc L0%0%1_L0%0%1 nodece 68 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637536268 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 637536268 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 637536268 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1522140470
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 68 nodece_path
=pc L0%0%1_L0%0%1 nodece 68 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 68 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637536268 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 637536268 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 637536268 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1522140470
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 69
=pc L0%0%1_L0%0%1 nodece 69 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
296638053
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 69 nodece_path
=pc L0%0%1_L0%0%1 nodece 69 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 69 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
296638053
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 70
=pc L0%0%1_L0%0%1 nodece 70 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
368163787
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 70 nodece_path
=pc L0%0%1_L0%0%1 nodece 70 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 70 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
368163787
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 71
=pc L0%0%1_L0%0%1 nodece 71 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 59 , m_adder -> 42)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 59 , m_adder -> 42)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
831738632
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 71 nodece_path
=pc L0%0%1_L0%0%1 nodece 71 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 71 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 59 , m_adder -> 42)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 59 , m_adder -> 42)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
831738632
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 72
=pc L0%0%1_L0%0%1 nodece 72 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
225040072
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 72 nodece_path
=pc L0%0%1_L0%0%1 nodece 72 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 72 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.2
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
225040072
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 73
=pc L0%0%1_L0%0%1 nodece 73 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
310123202
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 73 nodece_path
=pc L0%0%1_L0%0%1 nodece 73 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 73 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
310123202
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 74
=pc L0%0%1_L0%0%1 nodece 74 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 13 , m_adder -> 159)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 13 , m_adder -> 159)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1070782674
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 74 nodece_path
=pc L0%0%1_L0%0%1 nodece 74 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 74 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 13 , m_adder -> 159)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 13 , m_adder -> 159)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1070782674
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 75
=pc L0%0%1_L0%0%1 nodece 75 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1948223782
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 75 nodece_path
=pc L0%0%1_L0%0%1 nodece 75 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 75 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.1
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1948223782
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 76
=pc L0%0%1_L0%0%1 nodece 76 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2110122439
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 76 nodece_path
=pc L0%0%1_L0%0%1 nodece 76 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 76 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2110122439
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 77
=pc L0%0%1_L0%0%1 nodece 77 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 184 , m_adder -> 189)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 184 , m_adder -> 189)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1804436680
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 77 nodece_path
=pc L0%0%1_L0%0%1 nodece 77 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 77 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 184 , m_adder -> 189)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 184 , m_adder -> 189)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1804436680
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 78
=pc L0%0%1_L0%0%1 nodece 78 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 134160 : BV:32
=symbol.2
1 : 924672 : BV:32
=dst_symbol_addr.1
1 : 134160 : BV:32
=dst_symbol_addr.2
1 : 924672 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294959100 { -8196 } : BV:32
=input.src.llvm-mem
1 : (( 134176 ) -> 159, ( 924672 ) -> 187, ( 134172 ) -> 50, ( 924684 ) -> 50, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 134176 ) -> 159, ( 924672 ) -> 187, ( 134172 ) -> 50, ( 924684 ) -> 50, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 262159 : BV:32
=stack.size
1 : 4293906432 { -1060864 } : BV:32
=input.dst.mem
1 : (( 134176 ) -> 159, ( 924672 ) -> 187, ( 134172 ) -> 50, ( 924684 ) -> 50, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1052671 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 924672 : BV:32
=memlabel-mem-esp_end
1 : 4294959103 { -8193 } : BV:32
=memlabel-mem-esp_begin
1 : 1052672 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 134160 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 50 : BV:32
=unaliased_memslot.3
1 : 159 : BV:32
=unaliased_memslot.6
1 : 50 : BV:32
=unaliased_memslot.5
1 : 187 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1638341203
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 78 nodece_path
=pc L0%0%1_L0%0%1 nodece 78 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 78 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 134160 : BV:32
=symbol.2
1 : 924672 : BV:32
=dst_symbol_addr.1
1 : 134160 : BV:32
=dst_symbol_addr.2
1 : 924672 : BV:32
=input_stack_pointer_const
1 : 4294959100 { -8196 } : BV:32
=input.src.llvm-mem
1 : (( 134176 ) -> 159, ( 924672 ) -> 187, ( 134172 ) -> 50, ( 924684 ) -> 50, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 134176 ) -> 159, ( 924672 ) -> 187, ( 134172 ) -> 50, ( 924684 ) -> 50, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 262159 : BV:32
=stack.size
1 : 4293906432 { -1060864 } : BV:32
=input.dst.mem
1 : (( 134176 ) -> 159, ( 924672 ) -> 187, ( 134172 ) -> 50, ( 924684 ) -> 50, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1052671 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 924672 : BV:32
=memlabel-mem-esp_end
1 : 4294959103 { -8193 } : BV:32
=memlabel-mem-esp_begin
1 : 1052672 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 134160 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 50 : BV:32
=unaliased_memslot.3
1 : 159 : BV:32
=unaliased_memslot.6
1 : 50 : BV:32
=unaliased_memslot.5
1 : 187 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1638341203
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 79
=pc L0%0%1_L0%0%1 nodece 79 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3490185216 { -804782080 } : BV:32
=symbol.2
1 : 3825999872 { -468967424 } : BV:32
=dst_symbol_addr.1
1 : 3490185216 { -804782080 } : BV:32
=dst_symbol_addr.2
1 : 3825999872 { -468967424 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3423363068 { -871604228 } : BV:32
=input.src.llvm-mem
1 : (( 3825999884 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3825999884 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3490313215 { -804654081 } : BV:32
=stack.size
1 : 2986631168 { -1308336128 } : BV:32
=input.dst.mem
1 : (( 3825999884 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3826127871 { -468839425 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3825999872 { -468967424 } : BV:32
=memlabel-mem-esp_end
1 : 3423363071 { -871604225 } : BV:32
=memlabel-mem-esp_begin
1 : 436731904 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3490185216 { -804782080 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.6
1 : 64 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
268323726
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 79 nodece_path
=pc L0%0%1_L0%0%1 nodece 79 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 79 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3490185216 { -804782080 } : BV:32
=symbol.2
1 : 3825999872 { -468967424 } : BV:32
=dst_symbol_addr.1
1 : 3490185216 { -804782080 } : BV:32
=dst_symbol_addr.2
1 : 3825999872 { -468967424 } : BV:32
=input_stack_pointer_const
1 : 3423363068 { -871604228 } : BV:32
=input.src.llvm-mem
1 : (( 3825999884 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3825999884 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3490313215 { -804654081 } : BV:32
=stack.size
1 : 2986631168 { -1308336128 } : BV:32
=input.dst.mem
1 : (( 3825999884 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3826127871 { -468839425 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3825999872 { -468967424 } : BV:32
=memlabel-mem-esp_end
1 : 3423363071 { -871604225 } : BV:32
=memlabel-mem-esp_begin
1 : 436731904 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3490185216 { -804782080 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.6
1 : 64 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
268323726
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 80
=pc L0%0%1_L0%0%1 nodece 80 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1426066432 : BV:32
=symbol.2
1 : 1962806288 : BV:32
=dst_symbol_addr.1
1 : 1426066432 : BV:32
=dst_symbol_addr.2
1 : 1962806288 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1962806292 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1962806292 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1426194431 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 1962806292 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1962934287 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1962806288 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1426066432 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1702750723
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 80 nodece_path
=pc L0%0%1_L0%0%1 nodece 80 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 80 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1426066432 : BV:32
=symbol.2
1 : 1962806288 : BV:32
=dst_symbol_addr.1
1 : 1426066432 : BV:32
=dst_symbol_addr.2
1 : 1962806288 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1962806292 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1962806292 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1426194431 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 1962806292 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1962934287 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1962806288 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1426066432 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1702750723
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 81
=pc L0%0%1_L0%0%1 nodece 81 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 480 : BV:32
=symbol.2
1 : 129936 : BV:32
=dst_symbol_addr.1
1 : 480 : BV:32
=dst_symbol_addr.2
1 : 129936 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 129948 ) -> 41, ( 496 ) -> 10, ( 484 ) -> 1, ( 492 ) -> 41, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 129948 ) -> 41, ( 496 ) -> 10, ( 484 ) -> 1, ( 492 ) -> 41, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 128479 : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=input.dst.mem
1 : (( 129948 ) -> 41, ( 496 ) -> 10, ( 484 ) -> 1, ( 492 ) -> 41, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 257935 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 129936 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 258048 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 480 : BV:32
=unaliased_memslot.1
1 : 10 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 41 : BV:32
=unaliased_memslot.4
1 : 41 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
444298960
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 81 nodece_path
=pc L0%0%1_L0%0%1 nodece 81 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 81 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 480 : BV:32
=symbol.2
1 : 129936 : BV:32
=dst_symbol_addr.1
1 : 480 : BV:32
=dst_symbol_addr.2
1 : 129936 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 129948 ) -> 41, ( 496 ) -> 10, ( 484 ) -> 1, ( 492 ) -> 41, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 129948 ) -> 41, ( 496 ) -> 10, ( 484 ) -> 1, ( 492 ) -> 41, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 128479 : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=input.dst.mem
1 : (( 129948 ) -> 41, ( 496 ) -> 10, ( 484 ) -> 1, ( 492 ) -> 41, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 257935 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 129936 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 258048 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 480 : BV:32
=unaliased_memslot.1
1 : 10 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 41 : BV:32
=unaliased_memslot.4
1 : 41 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
444298960
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 82
=pc L0%0%1_L0%0%1 nodece 82 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 2081374208 : BV:32
=symbol.2
1 : 3359345424 { -935621872 } : BV:32
=dst_symbol_addr.1
1 : 2081374208 : BV:32
=dst_symbol_addr.2
1 : 3359345424 { -935621872 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1480359932 : BV:32
=input.src.llvm-mem
1 : (( 3359345436 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3359345436 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2081502207 : BV:32
=stack.size
1 : 1143341056 : BV:32
=input.dst.mem
1 : (( 3359345436 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3359473423 { -935493873 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3359345424 { -935621872 } : BV:32
=memlabel-mem-esp_end
1 : 1480359935 : BV:32
=memlabel-mem-esp_begin
1 : 337018880 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2081374208 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 32 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
791018654
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 82 nodece_path
=pc L0%0%1_L0%0%1 nodece 82 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 82 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 2081374208 : BV:32
=symbol.2
1 : 3359345424 { -935621872 } : BV:32
=dst_symbol_addr.1
1 : 2081374208 : BV:32
=dst_symbol_addr.2
1 : 3359345424 { -935621872 } : BV:32
=input_stack_pointer_const
1 : 1480359932 : BV:32
=input.src.llvm-mem
1 : (( 3359345436 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3359345436 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2081502207 : BV:32
=stack.size
1 : 1143341056 : BV:32
=input.dst.mem
1 : (( 3359345436 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3359473423 { -935493873 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3359345424 { -935621872 } : BV:32
=memlabel-mem-esp_end
1 : 1480359935 : BV:32
=memlabel-mem-esp_begin
1 : 337018880 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2081374208 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 32 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
791018654
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 83
=pc L0%0%1_L0%0%1 nodece 83 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1426066432 : BV:32
=symbol.2
1 : 1962806288 : BV:32
=dst_symbol_addr.1
1 : 1426066432 : BV:32
=dst_symbol_addr.2
1 : 1962806288 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1426066436 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1426066436 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1426194431 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 1426066436 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1962934287 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1962806288 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1426066432 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
404765852
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 83 nodece_path
=pc L0%0%1_L0%0%1 nodece 83 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 83 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1426066432 : BV:32
=symbol.2
1 : 1962806288 : BV:32
=dst_symbol_addr.1
1 : 1426066432 : BV:32
=dst_symbol_addr.2
1 : 1962806288 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1426066436 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1426066436 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1426194431 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 1426066436 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1962934287 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1962806288 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1426066432 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
404765852
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 84
=pc L0%0%1_L0%0%1 nodece 84 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 66978896 : BV:32
=symbol.2
1 : 2156028928 { -2138938368 } : BV:32
=dst_symbol_addr.1
1 : 66978896 : BV:32
=dst_symbol_addr.2
1 : 2156028928 { -2138938368 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286578684 { -8388612 } : BV:32
=input.src.llvm-mem
1 : (( 66978908 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 66978908 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 67106895 : BV:32
=stack.size
1 : 2057269248 : BV:32
=input.dst.mem
1 : (( 66978908 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2156156927 { -2138810369 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2156028928 { -2138938368 } : BV:32
=memlabel-mem-esp_end
1 : 4286578687 { -8388609 } : BV:32
=memlabel-mem-esp_begin
1 : 2229309440 { -2065657856 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 66978896 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 8 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
528743829
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 84 nodece_path
=pc L0%0%1_L0%0%1 nodece 84 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 84 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 66978896 : BV:32
=symbol.2
1 : 2156028928 { -2138938368 } : BV:32
=dst_symbol_addr.1
1 : 66978896 : BV:32
=dst_symbol_addr.2
1 : 2156028928 { -2138938368 } : BV:32
=input_stack_pointer_const
1 : 4286578684 { -8388612 } : BV:32
=input.src.llvm-mem
1 : (( 66978908 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 66978908 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 67106895 : BV:32
=stack.size
1 : 2057269248 : BV:32
=input.dst.mem
1 : (( 66978908 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2156156927 { -2138810369 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2156028928 { -2138938368 } : BV:32
=memlabel-mem-esp_end
1 : 4286578687 { -8388609 } : BV:32
=memlabel-mem-esp_begin
1 : 2229309440 { -2065657856 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 66978896 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 8 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
528743829
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 85
=pc L0%0%1_L0%0%1 nodece 85 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1013858304 : BV:32
=symbol.2
1 : 3506338832 { -788628464 } : BV:32
=dst_symbol_addr.1
1 : 1013858304 : BV:32
=dst_symbol_addr.2
1 : 3506338832 { -788628464 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 816869372 : BV:32
=input.src.llvm-mem
1 : (( 3506338844 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3506338844 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1013986303 : BV:32
=stack.size
1 : 661794816 : BV:32
=input.dst.mem
1 : (( 3506338844 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3506466831 { -788500465 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3506338832 { -788628464 } : BV:32
=memlabel-mem-esp_end
1 : 816869375 : BV:32
=memlabel-mem-esp_begin
1 : 155074560 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1013858304 : BV:32
=unaliased_memslot.1
1 : 16 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
939828293
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 85 nodece_path
=pc L0%0%1_L0%0%1 nodece 85 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 85 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1013858304 : BV:32
=symbol.2
1 : 3506338832 { -788628464 } : BV:32
=dst_symbol_addr.1
1 : 1013858304 : BV:32
=dst_symbol_addr.2
1 : 3506338832 { -788628464 } : BV:32
=input_stack_pointer_const
1 : 816869372 : BV:32
=input.src.llvm-mem
1 : (( 3506338844 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3506338844 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1013986303 : BV:32
=stack.size
1 : 661794816 : BV:32
=input.dst.mem
1 : (( 3506338844 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3506466831 { -788500465 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3506338832 { -788628464 } : BV:32
=memlabel-mem-esp_end
1 : 816869375 : BV:32
=memlabel-mem-esp_begin
1 : 155074560 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1013858304 : BV:32
=unaliased_memslot.1
1 : 16 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
939828293
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 86
=pc L0%0%1_L0%0%1 nodece 86 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1426066432 : BV:32
=symbol.2
1 : 1962806784 : BV:32
=dst_symbol_addr.1
1 : 1426066432 : BV:32
=dst_symbol_addr.2
1 : 1962806784 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1426066444 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1426066444 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1426194431 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 1426066444 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1962934783 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1962806784 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1426066432 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 16 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
761213948
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 86 nodece_path
=pc L0%0%1_L0%0%1 nodece 86 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 86 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1426066432 : BV:32
=symbol.2
1 : 1962806784 : BV:32
=dst_symbol_addr.1
1 : 1426066432 : BV:32
=dst_symbol_addr.2
1 : 1962806784 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1426066444 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1426066444 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1426194431 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 1426066444 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1962934783 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1962806784 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1426066432 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 16 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
761213948
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 87
=pc L0%0%1_L0%0%1 nodece 87 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 67129248 : BV:32
=symbol.2
1 : 33423376 : BV:32
=dst_symbol_addr.1
1 : 67129248 : BV:32
=dst_symbol_addr.2
1 : 33423376 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294443004 { -524292 } : BV:32
=input.src.llvm-mem
1 : (( 33423376 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33423376 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 67257247 : BV:32
=stack.size
1 : 4213719040 { -81248256 } : BV:32
=input.dst.mem
1 : (( 33423376 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33551375 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33423376 : BV:32
=memlabel-mem-esp_end
1 : 4294443007 { -524289 } : BV:32
=memlabel-mem-esp_begin
1 : 80723968 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 67129248 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
249524594
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 87 nodece_path
=pc L0%0%1_L0%0%1 nodece 87 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 87 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 67129248 : BV:32
=symbol.2
1 : 33423376 : BV:32
=dst_symbol_addr.1
1 : 67129248 : BV:32
=dst_symbol_addr.2
1 : 33423376 : BV:32
=input_stack_pointer_const
1 : 4294443004 { -524292 } : BV:32
=input.src.llvm-mem
1 : (( 33423376 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33423376 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 67257247 : BV:32
=stack.size
1 : 4213719040 { -81248256 } : BV:32
=input.dst.mem
1 : (( 33423376 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33551375 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33423376 : BV:32
=memlabel-mem-esp_end
1 : 4294443007 { -524289 } : BV:32
=memlabel-mem-esp_begin
1 : 80723968 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 67129248 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
249524594
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 88
=pc L0%0%1_L0%0%1 nodece 88 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3245222912 { -1049744384 } : BV:32
=symbol.2
1 : 3250469904 { -1044497392 } : BV:32
=dst_symbol_addr.1
1 : 3245222912 { -1049744384 } : BV:32
=dst_symbol_addr.2
1 : 3250469904 { -1044497392 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3244830716 { -1050136580 } : BV:32
=input.src.llvm-mem
1 : (( 3250469916 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3250469916 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3245350911 { -1049616385 } : BV:32
=stack.size
1 : 3233034240 { -1061933056 } : BV:32
=input.dst.mem
1 : (( 3250469916 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3250597903 { -1044369393 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3250469904 { -1044497392 } : BV:32
=memlabel-mem-esp_end
1 : 3244830719 { -1050136577 } : BV:32
=memlabel-mem-esp_begin
1 : 11796480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3245222912 { -1049744384 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
712828258
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 88 nodece_path
=pc L0%0%1_L0%0%1 nodece 88 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 88 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3245222912 { -1049744384 } : BV:32
=symbol.2
1 : 3250469904 { -1044497392 } : BV:32
=dst_symbol_addr.1
1 : 3245222912 { -1049744384 } : BV:32
=dst_symbol_addr.2
1 : 3250469904 { -1044497392 } : BV:32
=input_stack_pointer_const
1 : 3244830716 { -1050136580 } : BV:32
=input.src.llvm-mem
1 : (( 3250469916 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3250469916 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3245350911 { -1049616385 } : BV:32
=stack.size
1 : 3233034240 { -1061933056 } : BV:32
=input.dst.mem
1 : (( 3250469916 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3250597903 { -1044369393 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3250469904 { -1044497392 } : BV:32
=memlabel-mem-esp_end
1 : 3244830719 { -1050136577 } : BV:32
=memlabel-mem-esp_begin
1 : 11796480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3245222912 { -1049744384 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
712828258
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 89
=pc L0%0%1_L0%0%1 nodece 89 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1426066432 : BV:32
=symbol.2
1 : 1962806288 : BV:32
=dst_symbol_addr.1
1 : 1426066432 : BV:32
=dst_symbol_addr.2
1 : 1962806288 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1426066448 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1426066448 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1426194431 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 1426066448 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1962934287 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1962806288 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1426066432 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
412406912
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 89 nodece_path
=pc L0%0%1_L0%0%1 nodece 89 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 89 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1426066432 : BV:32
=symbol.2
1 : 1962806288 : BV:32
=dst_symbol_addr.1
1 : 1426066432 : BV:32
=dst_symbol_addr.2
1 : 1962806288 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1426066448 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1426066448 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1426194431 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 1426066448 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1962934287 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1962806288 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1426066432 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
412406912
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 90
=pc L0%0%1_L0%0%1 nodece 90 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2138545657
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 90 nodece_path
=pc L0%0%1_L0%0%1 nodece 90 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 90 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2138545657
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 91
=pc L0%0%1_L0%0%1 nodece 91 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
303351160
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 91 nodece_path
=pc L0%0%1_L0%0%1 nodece 91 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 91 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.3
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
303351160
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 92
=pc L0%0%1_L0%0%1 nodece 92 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 59 , m_adder -> 234)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 59 , m_adder -> 234)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3470341514
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 92 nodece_path
=pc L0%0%1_L0%0%1 nodece 92 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 92 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 59 , m_adder -> 234)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 59 , m_adder -> 234)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3470341514
=counter_example_end
=counterexamples at pc Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 2147450876 ) -> 0, ( 2147450879 ) -> 0, ( 2147450878 ) -> 0, ( 2147450877 ) -> 0, () -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 2
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192004 ) -> 107, ( 192005 ) -> 85, ( 192006 ) -> 22, ( 192007 ) -> 1, ( 180948 ) -> 144, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192004 ) -> 107, ( 192005 ) -> 85, ( 192006 ) -> 22, ( 192007 ) -> 1, ( 180948 ) -> 144, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 192004 ) -> 107, ( 192005 ) -> 85, ( 192006 ) -> 22, ( 192007 ) -> 1, ( 180948 ) -> 144, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 144 : BV:32
=unaliased_memslot.0
1 : 18240875 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192004 ) -> 107, ( 192005 ) -> 85, ( 192006 ) -> 22, ( 192007 ) -> 1, ( 180948 ) -> 144, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 192004 ) -> 107, ( 192005 ) -> 85, ( 192006 ) -> 22, ( 192007 ) -> 1, ( 180948 ) -> 144, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 192004 ) -> 107, ( 192005 ) -> 85, ( 192006 ) -> 22, ( 192007 ) -> 1, ( 180948 ) -> 144, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 144 : BV:32
=unaliased_memslot.0
1 : 18240875 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 3
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192004 ) -> 255, ( 192005 ) -> 255, ( 192006 ) -> 255, ( 192007 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192004 ) -> 255, ( 192005 ) -> 255, ( 192006 ) -> 255, ( 192007 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 192004 ) -> 255, ( 192005 ) -> 255, ( 192006 ) -> 255, ( 192007 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1967681095
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192004 ) -> 255, ( 192005 ) -> 255, ( 192006 ) -> 255, ( 192007 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 192004 ) -> 255, ( 192005 ) -> 255, ( 192006 ) -> 255, ( 192007 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 192004 ) -> 255, ( 192005 ) -> 255, ( 192006 ) -> 255, ( 192007 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1967681095
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 4
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52960 ) -> 4, ( 52968 ) -> 59, ( 52969 ) -> 32, ( 52970 ) -> 91, ( 52971 ) -> 22, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52960 ) -> 4, ( 52968 ) -> 59, ( 52969 ) -> 32, ( 52970 ) -> 91, ( 52971 ) -> 22, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52960 ) -> 4, ( 52968 ) -> 59, ( 52969 ) -> 32, ( 52970 ) -> 91, ( 52971 ) -> 22, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 4 : BV:32
=unaliased_memslot.0
1 : 375070779 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
917679292
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52960 ) -> 4, ( 52968 ) -> 59, ( 52969 ) -> 32, ( 52970 ) -> 91, ( 52971 ) -> 22, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 52960 ) -> 4, ( 52968 ) -> 59, ( 52969 ) -> 32, ( 52970 ) -> 91, ( 52971 ) -> 22, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52960 ) -> 4, ( 52968 ) -> 59, ( 52969 ) -> 32, ( 52970 ) -> 91, ( 52971 ) -> 22, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 4 : BV:32
=unaliased_memslot.0
1 : 375070779 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
917679292
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 5
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52968 ) -> 255, ( 52969 ) -> 255, ( 52970 ) -> 255, ( 52971 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52968 ) -> 255, ( 52969 ) -> 255, ( 52970 ) -> 255, ( 52971 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52968 ) -> 255, ( 52969 ) -> 255, ( 52970 ) -> 255, ( 52971 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2006811972
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52968 ) -> 255, ( 52969 ) -> 255, ( 52970 ) -> 255, ( 52971 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 52968 ) -> 255, ( 52969 ) -> 255, ( 52970 ) -> 255, ( 52971 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52968 ) -> 255, ( 52969 ) -> 255, ( 52970 ) -> 255, ( 52971 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2006811972
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 6
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192008 ) -> 4, ( 192016 ) -> 58, ( 192017 ) -> 152, ( 192018 ) -> 248, ( 192019 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192008 ) -> 4, ( 192016 ) -> 58, ( 192017 ) -> 152, ( 192018 ) -> 248, ( 192019 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 192008 ) -> 4, ( 192016 ) -> 58, ( 192017 ) -> 152, ( 192018 ) -> 248, ( 192019 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 116955194 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 4 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1242608872
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192008 ) -> 4, ( 192016 ) -> 58, ( 192017 ) -> 152, ( 192018 ) -> 248, ( 192019 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 192008 ) -> 4, ( 192016 ) -> 58, ( 192017 ) -> 152, ( 192018 ) -> 248, ( 192019 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 192008 ) -> 4, ( 192016 ) -> 58, ( 192017 ) -> 152, ( 192018 ) -> 248, ( 192019 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 116955194 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 4 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1242608872
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 7
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192016 ) -> 255, ( 192017 ) -> 255, ( 192018 ) -> 255, ( 192019 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192016 ) -> 255, ( 192017 ) -> 255, ( 192018 ) -> 255, ( 192019 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 192016 ) -> 255, ( 192017 ) -> 255, ( 192018 ) -> 255, ( 192019 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1137949908
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192016 ) -> 255, ( 192017 ) -> 255, ( 192018 ) -> 255, ( 192019 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 192016 ) -> 255, ( 192017 ) -> 255, ( 192018 ) -> 255, ( 192019 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 192016 ) -> 255, ( 192017 ) -> 255, ( 192018 ) -> 255, ( 192019 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1137949908
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 8
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 319999 ) -> 17, ( 52964 ) -> 36, ( 319996 ) -> 154, ( 319997 ) -> 84, ( 319998 ) -> 99, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 319999 ) -> 17, ( 52964 ) -> 36, ( 319996 ) -> 154, ( 319997 ) -> 84, ( 319998 ) -> 99, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 319999 ) -> 17, ( 52964 ) -> 36, ( 319996 ) -> 154, ( 319997 ) -> 84, ( 319998 ) -> 99, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 36 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 291722394 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1974806403
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 319999 ) -> 17, ( 52964 ) -> 36, ( 319996 ) -> 154, ( 319997 ) -> 84, ( 319998 ) -> 99, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 319999 ) -> 17, ( 52964 ) -> 36, ( 319996 ) -> 154, ( 319997 ) -> 84, ( 319998 ) -> 99, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 319999 ) -> 17, ( 52964 ) -> 36, ( 319996 ) -> 154, ( 319997 ) -> 84, ( 319998 ) -> 99, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 36 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 291722394 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1974806403
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 9
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52960 ) -> 0, ( 52961 ) -> 0, ( 52962 ) -> 0, ( 52963 ) -> 0, ( 52964 ) -> 0, ( 52965 ) -> 0, ( 52966 ) -> 0, ( 52967 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52960 ) -> 0, ( 52961 ) -> 0, ( 52962 ) -> 0, ( 52963 ) -> 0, ( 52964 ) -> 0, ( 52965 ) -> 0, ( 52966 ) -> 0, ( 52967 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52960 ) -> 0, ( 52961 ) -> 0, ( 52962 ) -> 0, ( 52963 ) -> 0, ( 52964 ) -> 0, ( 52965 ) -> 0, ( 52966 ) -> 0, ( 52967 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1473144500
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52960 ) -> 0, ( 52961 ) -> 0, ( 52962 ) -> 0, ( 52963 ) -> 0, ( 52964 ) -> 0, ( 52965 ) -> 0, ( 52966 ) -> 0, ( 52967 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 52960 ) -> 0, ( 52961 ) -> 0, ( 52962 ) -> 0, ( 52963 ) -> 0, ( 52964 ) -> 0, ( 52965 ) -> 0, ( 52966 ) -> 0, ( 52967 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52960 ) -> 0, ( 2147450876 ) -> 0, ( 2147450879 ) -> 0, ( 2147450878 ) -> 0, ( 2147450877 ) -> 0, ( 52961 ) -> 0, ( 52962 ) -> 0, ( 52963 ) -> 0, ( 52964 ) -> 0, ( 52965 ) -> 0, ( 52966 ) -> 0, ( 52967 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1473144500
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 10
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52960 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52960 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52960 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1739000681
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52960 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 52960 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52960 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1739000681
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 11
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 255, ( 180954 ) -> 255, ( 180955 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 255, ( 180954 ) -> 255, ( 180955 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 255, ( 180954 ) -> 255, ( 180955 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2016764524
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 255, ( 180954 ) -> 255, ( 180955 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 255, ( 180954 ) -> 255, ( 180955 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 255, ( 180954 ) -> 255, ( 180955 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2016764524
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 12
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52967 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52967 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52967 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 268435456 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1748349614
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52967 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 52967 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52967 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 268435456 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1748349614
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 13
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 180944 ) -> 255, ( 180945 ) -> 255, ( 180946 ) -> 255, ( 180947 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 180944 ) -> 255, ( 180945 ) -> 255, ( 180946 ) -> 255, ( 180947 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 180944 ) -> 255, ( 180945 ) -> 255, ( 180946 ) -> 255, ( 180947 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1353436873
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 180944 ) -> 255, ( 180945 ) -> 255, ( 180946 ) -> 255, ( 180947 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 180944 ) -> 255, ( 180945 ) -> 255, ( 180946 ) -> 255, ( 180947 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 180944 ) -> 255, ( 180945 ) -> 255, ( 180946 ) -> 255, ( 180947 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1353436873
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 14
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 319992 ) -> 255, ( 319993 ) -> 255, ( 319994 ) -> 255, ( 319995 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 319992 ) -> 255, ( 319993 ) -> 255, ( 319994 ) -> 255, ( 319995 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 319992 ) -> 255, ( 319993 ) -> 255, ( 319994 ) -> 255, ( 319995 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1983228458
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 319992 ) -> 255, ( 319993 ) -> 255, ( 319994 ) -> 255, ( 319995 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 319992 ) -> 255, ( 319993 ) -> 255, ( 319994 ) -> 255, ( 319995 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 319992 ) -> 255, ( 319993 ) -> 255, ( 319994 ) -> 255, ( 319995 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1983228458
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 15
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52967 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52967 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52967 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 134217728 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1584710873
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52967 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 52967 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52967 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 134217728 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1584710873
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 16
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 180948 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 180948 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 180948 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 15 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2073785404
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 180948 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 180948 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 180948 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 15 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2073785404
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 17
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192012 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192012 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 192012 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 15 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
333582338
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192012 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 192012 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 192012 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 15 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
333582338
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 18
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 319996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 319996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 319996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1388803074
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 319996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 319996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 319996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1388803074
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 19
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 319988 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 319988 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 319988 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
733327814
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 319988 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 319988 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 319988 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
733327814
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 20
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 319996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 319996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 319996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
107734713
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 319996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 319996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 319996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
107734713
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 21
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1630387677
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1630387677
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 22
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 222 , m_adder -> 218)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 222 , m_adder -> 218)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3098671733
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 222 , m_adder -> 218)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 2147450876 ) -> 0, ( 2147450879 ) -> 0, ( 2147450878 ) -> 0, ( 2147450877 ) -> 0, () -> (RAC: m_multiplier -> 222 , m_adder -> 218)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3098671733
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 23
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
14989683
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 1 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
14989683
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 24
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
343945053
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 1 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
343945053
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 25
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1287859999
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 2147450876 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1287859999
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 26
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 245 , m_adder -> 42)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 245 , m_adder -> 42)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3632899217
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 245 , m_adder -> 42)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 2147450876 ) -> 0, ( 2147450879 ) -> 128, ( 2147450878 ) -> 0, ( 2147450877 ) -> 0, () -> (RAC: m_multiplier -> 245 , m_adder -> 42)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3632899217
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 27
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 319984 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 319984 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 319984 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 3 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
216220853
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 319984 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 319984 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 319984 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 3 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
216220853
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 28
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52972 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52972 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52972 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
699460008
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52972 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 52972 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (( 52972 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
699460008
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 29
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
415522325
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 1 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
415522325
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 30
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
849725352
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
849725352
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 31
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
978587665
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
978587665
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 32
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 10 , m_adder -> 249)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : ([ 454656; 2147450879 ] -> 0, () -> (RAC: m_multiplier -> 10 , m_adder -> 249)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
481661279
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 10 , m_adder -> 249)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : ([ 454656; 2147450879 ] -> 0, () -> (RAC: m_multiplier -> 10 , m_adder -> 249)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
481661279
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 33
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 10 , m_adder -> 249)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : ([ 454656; 2147450879 ] -> 0, () -> (RAC: m_multiplier -> 10 , m_adder -> 249)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
481661279
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 9236422570018552680008613634395795162 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192000 ) -> 218, ( 192004 ) -> 42, ( 192005 ) -> 63, ( 192006 ) -> 83, ( 192007 ) -> 103, ( 192008 ) -> 122, ( 192009 ) -> 142, ( 192010 ) -> 162, ( 192011 ) -> 182, ( 192012 ) -> 202, ( 192013 ) -> 222, ( 192014 ) -> 242, ( 192015 ) -> 6, ( 192002 ) -> 2, ( 192001 ) -> 238, () -> (RAC: m_multiplier -> 10 , m_adder -> 249)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 52972 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%add
1 : 4 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 192016 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 16 : BV:32
=input.src.llvm-%arrayidx3
1 : 192012 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%arrayidx
1 : 192016 : BV:32
=input.src.llvm-%arrayidx1
1 : 52972 : BV:32
=input.src.llvm-%0
1 : 3081610137 { -1213357159 } : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%1
1 : 1329937201 : BV:32
=input.src.llvm-%add2
1 : 116580042 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 192012 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (( 192000 ) -> 218, ( 192004 ) -> 42, ( 192005 ) -> 63, ( 192006 ) -> 83, ( 192007 ) -> 103, ( 192008 ) -> 122, ( 192009 ) -> 142, ( 192010 ) -> 162, ( 192011 ) -> 182, ( 192012 ) -> 202, ( 192013 ) -> 222, ( 192014 ) -> 242, ( 192015 ) -> 6, ( 192002 ) -> 2, ( 192001 ) -> 238, [ 454656; 2147450879 ] -> 0, () -> (RAC: m_multiplier -> 10 , m_adder -> 249)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
481661279
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 34
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 10 , m_adder -> 249)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : ([ 454656; 2147450879 ] -> 0, () -> (RAC: m_multiplier -> 10 , m_adder -> 249)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
481661279
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 94640624463901147431600671970212130586 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192000 ) -> 218, ( 192004 ) -> 42, ( 192005 ) -> 63, ( 192006 ) -> 83, ( 192007 ) -> 103, ( 192008 ) -> 122, ( 192009 ) -> 142, ( 192010 ) -> 162, ( 192011 ) -> 182, ( 192012 ) -> 202, ( 192013 ) -> 222, ( 192014 ) -> 242, ( 192015 ) -> 6, ( 192016 ) -> 26, ( 192017 ) -> 47, ( 192018 ) -> 67, ( 192019 ) -> 87, ( 192028 ) -> 10, ( 192024 ) -> 186, ( 192020 ) -> 106, ( 192002 ) -> 2, ( 192001 ) -> 238, ( 192021 ) -> 127, ( 192022 ) -> 147, ( 192023 ) -> 167, ( 192025 ) -> 206, ( 192026 ) -> 226, ( 192027 ) -> 246, ( 192029 ) -> 31, ( 192030 ) -> 51, ( 192031 ) -> 71, () -> (RAC: m_multiplier -> 10 , m_adder -> 249)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 52988 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%add
1 : 8 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 192032 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 32 : BV:32
=input.src.llvm-%arrayidx3
1 : 192028 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%arrayidx
1 : 192032 : BV:32
=input.src.llvm-%arrayidx1
1 : 52988 : BV:32
=input.src.llvm-%0
1 : 1464681273 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%1
1 : 4024818641 { -270148655 } : BV:32
=input.src.llvm-%add2
1 : 1194532618 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 192028 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (( 192000 ) -> 218, ( 192004 ) -> 42, ( 192005 ) -> 63, ( 192006 ) -> 83, ( 192007 ) -> 103, ( 192008 ) -> 122, ( 192009 ) -> 142, ( 192010 ) -> 162, ( 192011 ) -> 182, ( 192012 ) -> 202, ( 192013 ) -> 222, ( 192014 ) -> 242, ( 192015 ) -> 6, ( 192016 ) -> 26, ( 192017 ) -> 47, ( 192018 ) -> 67, ( 192019 ) -> 87, ( 192028 ) -> 10, ( 192024 ) -> 186, ( 192020 ) -> 106, ( 192002 ) -> 2, ( 192001 ) -> 238, ( 192021 ) -> 127, ( 192022 ) -> 147, ( 192023 ) -> 167, ( 192025 ) -> 206, ( 192026 ) -> 226, ( 192027 ) -> 246, ( 192029 ) -> 31, ( 192030 ) -> 51, ( 192031 ) -> 71, [ 454656; 2147450879 ] -> 0, () -> (RAC: m_multiplier -> 10 , m_adder -> 249)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 32 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
481661279
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 35
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 10 , m_adder -> 249)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : ([ 454656; 2147450879 ] -> 0, () -> (RAC: m_multiplier -> 10 , m_adder -> 249)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
481661279
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 48 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 180044826278555579668856052543941406554 { -160237540642382883794518554887826804902 } : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192000 ) -> 218, ( 192004 ) -> 42, ( 192005 ) -> 63, ( 192006 ) -> 83, ( 192007 ) -> 103, ( 192008 ) -> 122, ( 192009 ) -> 142, ( 192010 ) -> 162, ( 192011 ) -> 182, ( 192012 ) -> 202, ( 192013 ) -> 222, ( 192014 ) -> 242, ( 192015 ) -> 6, ( 192016 ) -> 26, ( 192017 ) -> 47, ( 192018 ) -> 67, ( 192019 ) -> 87, ( 192028 ) -> 10, ( 192024 ) -> 186, ( 192020 ) -> 106, ( 192002 ) -> 2, ( 192001 ) -> 238, ( 192021 ) -> 127, ( 192022 ) -> 147, ( 192023 ) -> 167, ( 192025 ) -> 206, ( 192026 ) -> 226, ( 192027 ) -> 246, ( 192029 ) -> 31, ( 192030 ) -> 51, ( 192031 ) -> 71, ( 192032 ) -> 90, ( 192033 ) -> 111, ( 192034 ) -> 130, ( 192035 ) -> 150, ( 192044 ) -> 74, ( 192036 ) -> 170, ( 192039 ) -> 230, ( 192043 ) -> 55, ( 192040 ) -> 250, ( 192038 ) -> 210, ( 192047 ) -> 135, ( 192046 ) -> 115, ( 192041 ) -> 14, ( 192045 ) -> 95, ( 192042 ) -> 35, ( 192037 ) -> 190, () -> (RAC: m_multiplier -> 10 , m_adder -> 249)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 53004 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%add
1 : 12 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 12 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 192048 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 48 : BV:32
=input.src.llvm-%arrayidx3
1 : 192044 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%arrayidx
1 : 192048 : BV:32
=input.src.llvm-%arrayidx1
1 : 53004 : BV:32
=input.src.llvm-%0
1 : 4159562713 { -135404583 } : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%1
1 : 2407889777 { -1887077519 } : BV:32
=input.src.llvm-%add2
1 : 2272485194 { -2022482102 } : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 192044 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%inc
1 : 12 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (( 192000 ) -> 218, ( 192004 ) -> 42, ( 192005 ) -> 63, ( 192006 ) -> 83, ( 192007 ) -> 103, ( 192008 ) -> 122, ( 192009 ) -> 142, ( 192010 ) -> 162, ( 192011 ) -> 182, ( 192012 ) -> 202, ( 192013 ) -> 222, ( 192014 ) -> 242, ( 192015 ) -> 6, ( 192016 ) -> 26, ( 192017 ) -> 47, ( 192018 ) -> 67, ( 192019 ) -> 87, ( 192028 ) -> 10, ( 192024 ) -> 186, ( 192020 ) -> 106, ( 192002 ) -> 2, ( 192001 ) -> 238, ( 192021 ) -> 127, ( 192022 ) -> 147, ( 192023 ) -> 167, ( 192025 ) -> 206, ( 192026 ) -> 226, ( 192027 ) -> 246, ( 192029 ) -> 31, ( 192030 ) -> 51, ( 192031 ) -> 71, ( 192032 ) -> 90, ( 192033 ) -> 111, ( 192034 ) -> 130, ( 192035 ) -> 150, ( 192044 ) -> 74, ( 192036 ) -> 170, ( 192039 ) -> 230, ( 192043 ) -> 55, ( 192040 ) -> 250, ( 192038 ) -> 210, ( 192047 ) -> 135, ( 192046 ) -> 115, ( 192041 ) -> 14, ( 192045 ) -> 95, ( 192042 ) -> 35, ( 192037 ) -> 190, [ 454656; 2147450879 ] -> 0, () -> (RAC: m_multiplier -> 10 , m_adder -> 249)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 48 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 12 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
481661279
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 36
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 64 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 16 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
408671759
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 80 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 53036 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 76 : BV:32
=input.src.llvm-%add
1 : 20 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 20 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 192080 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 80 : BV:32
=input.src.llvm-%arrayidx3
1 : 192076 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%arrayidx
1 : 192080 : BV:32
=input.src.llvm-%arrayidx1
1 : 53036 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 192076 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 76 : BV:32
=input.src.llvm-%inc
1 : 20 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 80 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 20 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
408671759
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 37
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 128 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 32 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 32 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
46811558
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 144 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 53100 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 140 : BV:32
=input.src.llvm-%add
1 : 36 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 36 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 192144 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 144 : BV:32
=input.src.llvm-%arrayidx3
1 : 192140 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%arrayidx
1 : 192144 : BV:32
=input.src.llvm-%arrayidx1
1 : 53100 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 192140 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 140 : BV:32
=input.src.llvm-%inc
1 : 36 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 144 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 36 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
46811558
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 38
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 256 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 64 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 64 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1767405991
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 272 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 53228 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 268 : BV:32
=input.src.llvm-%add
1 : 68 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 68 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 192272 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 272 : BV:32
=input.src.llvm-%arrayidx3
1 : 192268 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%arrayidx
1 : 192272 : BV:32
=input.src.llvm-%arrayidx1
1 : 53228 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 192268 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 268 : BV:32
=input.src.llvm-%inc
1 : 68 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 272 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 68 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1767405991
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 39
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 512 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 128 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 128 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1087157360
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 528 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 53484 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 524 : BV:32
=input.src.llvm-%add
1 : 132 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 132 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 192528 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 528 : BV:32
=input.src.llvm-%arrayidx3
1 : 192524 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%arrayidx
1 : 192528 : BV:32
=input.src.llvm-%arrayidx1
1 : 53484 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 192524 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 524 : BV:32
=input.src.llvm-%inc
1 : 132 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 528 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 132 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1087157360
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 40
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 1024 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 256 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 256 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1496216347
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 1040 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 53996 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 1036 : BV:32
=input.src.llvm-%add
1 : 260 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 260 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 193040 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 1040 : BV:32
=input.src.llvm-%arrayidx3
1 : 193036 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%arrayidx
1 : 193040 : BV:32
=input.src.llvm-%arrayidx1
1 : 53996 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 193036 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 1036 : BV:32
=input.src.llvm-%inc
1 : 260 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 1040 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 260 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1496216347
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 41
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 2048 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 512 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 512 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
233694996
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 2064 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 55020 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 2060 : BV:32
=input.src.llvm-%add
1 : 516 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 516 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 194064 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 2064 : BV:32
=input.src.llvm-%arrayidx3
1 : 194060 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%arrayidx
1 : 194064 : BV:32
=input.src.llvm-%arrayidx1
1 : 55020 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 194060 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 2060 : BV:32
=input.src.llvm-%inc
1 : 516 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 2064 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 516 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
233694996
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 42
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4096 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1024 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 1024 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
823098032
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4112 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 57068 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 4108 : BV:32
=input.src.llvm-%add
1 : 1028 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1028 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 196112 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 4112 : BV:32
=input.src.llvm-%arrayidx3
1 : 196108 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%arrayidx
1 : 196112 : BV:32
=input.src.llvm-%arrayidx1
1 : 57068 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 196108 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 4108 : BV:32
=input.src.llvm-%inc
1 : 1028 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 4112 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1028 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
823098032
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 43
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 8192 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2048 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 2048 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
340573924
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 8208 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 61164 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 8204 : BV:32
=input.src.llvm-%add
1 : 2052 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2052 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 200208 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 8208 : BV:32
=input.src.llvm-%arrayidx3
1 : 200204 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%arrayidx
1 : 200208 : BV:32
=input.src.llvm-%arrayidx1
1 : 61164 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 200204 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 8204 : BV:32
=input.src.llvm-%inc
1 : 2052 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 8208 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 2052 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
340573924
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 44
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16384 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4096 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 4096 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
48522001
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16400 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 69356 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 16396 : BV:32
=input.src.llvm-%add
1 : 4100 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4100 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 208400 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 16400 : BV:32
=input.src.llvm-%arrayidx3
1 : 208396 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%arrayidx
1 : 208400 : BV:32
=input.src.llvm-%arrayidx1
1 : 69356 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 208396 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 16396 : BV:32
=input.src.llvm-%inc
1 : 4100 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 16400 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4100 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
48522001
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 45
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 32768 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8192 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 8192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
253655458
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32784 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 85740 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 32780 : BV:32
=input.src.llvm-%add
1 : 8196 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8196 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 224784 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 32784 : BV:32
=input.src.llvm-%arrayidx3
1 : 224780 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%arrayidx
1 : 224784 : BV:32
=input.src.llvm-%arrayidx1
1 : 85740 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 224780 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 32780 : BV:32
=input.src.llvm-%inc
1 : 8196 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 32784 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8196 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
253655458
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 46
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 65536 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16384 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 16384 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
681678003
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 65552 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 118508 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 65548 : BV:32
=input.src.llvm-%add
1 : 16388 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16388 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 257552 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 65552 : BV:32
=input.src.llvm-%arrayidx3
1 : 257548 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%arrayidx
1 : 257552 : BV:32
=input.src.llvm-%arrayidx1
1 : 118508 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 257548 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 65548 : BV:32
=input.src.llvm-%inc
1 : 16388 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 65552 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 16388 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
681678003
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 47
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127968 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31992 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 31992 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2084583195
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127968 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31992 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 31992 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2084583195
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 48
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127968 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31992 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 31992 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
388146290
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127968 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31992 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 31992 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
388146290
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 49
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127968 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 216 , m_adder -> 105)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31992 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : ([ 454656; 2147450879 ] -> 0, () -> (RAC: m_multiplier -> 216 , m_adder -> 105)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 31992 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1885760434
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127968 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 216 , m_adder -> 105)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31992 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.dst.mem
1 : ([ 454656; 2147450879 ] -> 0, () -> (RAC: m_multiplier -> 216 , m_adder -> 105)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 31992 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1885760434
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 50
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 28128 : BV:32
=symbol.2
1 : 4294836288 { -131008 } : BV:32
=dst_symbol_addr.1
1 : 28128 : BV:32
=dst_symbol_addr.2
1 : 4294836288 { -131008 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294692860 { -274436 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 156127 : BV:32
=stack.size
1 : 4294471680 { -495616 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294964287 { -3009 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294836288 { -131008 } : BV:32
=memlabel-mem-esp_end
1 : 4294692863 { -274433 } : BV:32
=memlabel-mem-esp_begin
1 : 221184 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 28128 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1379413094
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294692860 { -274436 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 28128 : BV:32
=symbol.2
1 : 4294836288 { -131008 } : BV:32
=dst_symbol_addr.1
1 : 28128 : BV:32
=dst_symbol_addr.2
1 : 4294836288 { -131008 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294692860 { -274436 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294692860 { -274436 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 156127 : BV:32
=stack.size
1 : 4294471680 { -495616 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294964287 { -3009 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294836288 { -131008 } : BV:32
=memlabel-mem-esp_end
1 : 4294692863 { -274433 } : BV:32
=memlabel-mem-esp_begin
1 : 221184 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 28128 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1379413094
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 51
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 28128 : BV:32
=symbol.2
1 : 4294836288 { -131008 } : BV:32
=dst_symbol_addr.1
1 : 28128 : BV:32
=dst_symbol_addr.2
1 : 4294836288 { -131008 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294692860 { -274436 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 156127 : BV:32
=stack.size
1 : 4294471680 { -495616 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294964287 { -3009 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294836288 { -131008 } : BV:32
=memlabel-mem-esp_end
1 : 4294692863 { -274433 } : BV:32
=memlabel-mem-esp_begin
1 : 221184 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 28128 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1379413094
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294692860 { -274436 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 28128 : BV:32
=symbol.2
1 : 4294836288 { -131008 } : BV:32
=dst_symbol_addr.1
1 : 28128 : BV:32
=dst_symbol_addr.2
1 : 4294836288 { -131008 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294692860 { -274436 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294692860 { -274436 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 4294836300 { -130996 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%add
1 : 4 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 28144 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 16 : BV:32
=input.src.llvm-%arrayidx3
1 : 28140 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 156127 : BV:32
=input.src.llvm-%arrayidx
1 : 28144 : BV:32
=input.src.llvm-%arrayidx1
1 : 4294836300 { -130996 } : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 4294471680 { -495616 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 28140 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294964287 { -3009 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294836288 { -131008 } : BV:32
=memlabel-mem-esp_end
1 : 4294692863 { -274433 } : BV:32
=memlabel-mem-esp_begin
1 : 221184 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 28128 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1379413094
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 52
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 28128 : BV:32
=symbol.2
1 : 4294836288 { -131008 } : BV:32
=dst_symbol_addr.1
1 : 28128 : BV:32
=dst_symbol_addr.2
1 : 4294836288 { -131008 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294692860 { -274436 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 156127 : BV:32
=stack.size
1 : 4294471680 { -495616 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294964287 { -3009 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294836288 { -131008 } : BV:32
=memlabel-mem-esp_end
1 : 4294692863 { -274433 } : BV:32
=memlabel-mem-esp_begin
1 : 221184 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 28128 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1379413094
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294692860 { -274436 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 28128 : BV:32
=symbol.2
1 : 4294836288 { -131008 } : BV:32
=dst_symbol_addr.1
1 : 28128 : BV:32
=dst_symbol_addr.2
1 : 4294836288 { -131008 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294692860 { -274436 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294692860 { -274436 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 4294836316 { -130980 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%add
1 : 8 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 28160 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 32 : BV:32
=input.src.llvm-%arrayidx3
1 : 28156 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 156127 : BV:32
=input.src.llvm-%arrayidx
1 : 28160 : BV:32
=input.src.llvm-%arrayidx1
1 : 4294836316 { -130980 } : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 4294471680 { -495616 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 28156 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 32 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294964287 { -3009 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294836288 { -131008 } : BV:32
=memlabel-mem-esp_end
1 : 4294692863 { -274433 } : BV:32
=memlabel-mem-esp_begin
1 : 221184 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 28128 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1379413094
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 53
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 28128 : BV:32
=symbol.2
1 : 4294836288 { -131008 } : BV:32
=dst_symbol_addr.1
1 : 28128 : BV:32
=dst_symbol_addr.2
1 : 4294836288 { -131008 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294692860 { -274436 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 156127 : BV:32
=stack.size
1 : 4294471680 { -495616 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294964287 { -3009 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294836288 { -131008 } : BV:32
=memlabel-mem-esp_end
1 : 4294692863 { -274433 } : BV:32
=memlabel-mem-esp_begin
1 : 221184 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 28128 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1379413094
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))))
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 48 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294692860 { -274436 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 28128 : BV:32
=symbol.2
1 : 4294836288 { -131008 } : BV:32
=dst_symbol_addr.1
1 : 28128 : BV:32
=dst_symbol_addr.2
1 : 4294836288 { -131008 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294692860 { -274436 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294692860 { -274436 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 4294836332 { -130964 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%add
1 : 12 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 12 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 28176 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 48 : BV:32
=input.src.llvm-%arrayidx3
1 : 28172 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 156127 : BV:32
=input.src.llvm-%arrayidx
1 : 28176 : BV:32
=input.src.llvm-%arrayidx1
1 : 4294836332 { -130964 } : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 4294471680 { -495616 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 28172 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%inc
1 : 12 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 48 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 12 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294964287 { -3009 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294836288 { -131008 } : BV:32
=memlabel-mem-esp_end
1 : 4294692863 { -274433 } : BV:32
=memlabel-mem-esp_begin
1 : 221184 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 28128 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1379413094
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 54
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1464150254
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1464150254
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 55
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 238 , m_adder -> 27)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 238 , m_adder -> 27)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3044481074
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 238 , m_adder -> 27)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 4294967295 ) -> 0, ( 4294967292 ) -> 0, ( 4294967294 ) -> 0, ( 4294967293 ) -> 0, () -> (RAC: m_multiplier -> 238 , m_adder -> 27)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3044481074
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 56
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 238 , m_adder -> 27)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 238 , m_adder -> 27)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3044481074
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 280420929006588143855704971248795044590 { -59861437914350319607669636182973166866 } : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637536267 ) -> 98, ( 637536264 ) -> 206, ( 637536258 ) -> 166, ( 637536271 ) -> 210, ( 637536270 ) -> 247, ( 637536262 ) -> 23, ( 637536269 ) -> 27, ( 637536261 ) -> 59, ( 637536268 ) -> 62, ( 637536256 ) -> 238, ( 637536265 ) -> 170, ( 637536257 ) -> 202, ( 637536263 ) -> 243, ( 637536266 ) -> 134, ( 637536259 ) -> 131, ( 637536260 ) -> 94, () -> (RAC: m_multiplier -> 238 , m_adder -> 27)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 268308492 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%add
1 : 4 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 637536272 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 16 : BV:32
=input.src.llvm-%arrayidx3
1 : 637536268 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-%arrayidx
1 : 637536272 : BV:32
=input.src.llvm-%arrayidx1
1 : 268308492 : BV:32
=input.src.llvm-%0
1 : 3319261691 { -975705605 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%1
1 : 220148035 : BV:32
=input.src.llvm-%add2
1 : 3539409726 { -755557570 } : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 637536268 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (( 4294967295 ) -> 0, ( 4294967292 ) -> 0, ( 637536267 ) -> 98, ( 637536264 ) -> 206, ( 637536258 ) -> 166, ( 637536271 ) -> 210, ( 637536270 ) -> 247, ( 637536262 ) -> 23, ( 4294967294 ) -> 0, ( 637536269 ) -> 27, ( 637536261 ) -> 59, ( 637536268 ) -> 62, ( 637536256 ) -> 238, ( 637536265 ) -> 170, ( 4294967293 ) -> 0, ( 637536257 ) -> 202, ( 637536263 ) -> 243, ( 637536266 ) -> 134, ( 637536259 ) -> 131, ( 637536260 ) -> 94, () -> (RAC: m_multiplier -> 238 , m_adder -> 27)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3044481074
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 57
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 238 , m_adder -> 27)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 238 , m_adder -> 27)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3044481074
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 196345955108799949986838065041983900590 { -143936411812138513476536542389784310866 } : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637536281 ) -> 106, ( 637536267 ) -> 98, ( 637536264 ) -> 206, ( 637536258 ) -> 166, ( 637536271 ) -> 210, ( 637536270 ) -> 247, ( 637536262 ) -> 23, ( 637536279 ) -> 178, ( 637536269 ) -> 27, ( 637536261 ) -> 59, ( 637536276 ) -> 30, ( 637536268 ) -> 62, ( 637536256 ) -> 238, ( 637536265 ) -> 170, ( 637536286 ) -> 182, ( 637536275 ) -> 67, ( 637536274 ) -> 103, ( 637536283 ) -> 35, ( 637536282 ) -> 70, ( 637536273 ) -> 139, ( 637536287 ) -> 147, ( 637536257 ) -> 202, ( 637536284 ) -> 254, ( 637536277 ) -> 251, ( 637536278 ) -> 214, ( 637536280 ) -> 142, ( 637536263 ) -> 243, ( 637536285 ) -> 218, ( 637536266 ) -> 134, ( 637536259 ) -> 131, ( 637536260 ) -> 94, ( 637536272 ) -> 174, () -> (RAC: m_multiplier -> 238 , m_adder -> 27)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 268308508 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%add
1 : 8 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 637536288 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 32 : BV:32
=input.src.llvm-%arrayidx3
1 : 637536284 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-%arrayidx
1 : 637536288 : BV:32
=input.src.llvm-%arrayidx1
1 : 268308508 : BV:32
=input.src.llvm-%0
1 : 2780285403 { -1514681893 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%1
1 : 3992916259 { -302051037 } : BV:32
=input.src.llvm-%add2
1 : 2478234366 { -1816732930 } : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 637536284 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (( 4294967295 ) -> 0, ( 4294967292 ) -> 0, ( 637536281 ) -> 106, ( 637536267 ) -> 98, ( 637536264 ) -> 206, ( 637536258 ) -> 166, ( 637536271 ) -> 210, ( 637536270 ) -> 247, ( 637536262 ) -> 23, ( 637536279 ) -> 178, ( 4294967294 ) -> 0, ( 637536269 ) -> 27, ( 637536261 ) -> 59, ( 637536276 ) -> 30, ( 637536268 ) -> 62, ( 637536256 ) -> 238, ( 637536265 ) -> 170, ( 637536286 ) -> 182, ( 637536275 ) -> 67, ( 637536274 ) -> 103, ( 637536283 ) -> 35, ( 637536282 ) -> 70, ( 4294967293 ) -> 0, ( 637536273 ) -> 139, ( 637536287 ) -> 147, ( 637536257 ) -> 202, ( 637536284 ) -> 254, ( 637536277 ) -> 251, ( 637536278 ) -> 214, ( 637536280 ) -> 142, ( 637536263 ) -> 243, ( 637536285 ) -> 218, ( 637536266 ) -> 134, ( 637536259 ) -> 131, ( 637536260 ) -> 94, ( 637536272 ) -> 174, () -> (RAC: m_multiplier -> 238 , m_adder -> 27)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 32 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3044481074
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 58
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 238 , m_adder -> 27)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 238 , m_adder -> 27)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3044481074
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))))
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 48 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 110946945591005261502958489425215441774 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637536302 ) -> 119, ( 637536281 ) -> 106, ( 637536267 ) -> 98, ( 637536295 ) -> 114, ( 637536289 ) -> 75, ( 637536294 ) -> 150, ( 637536264 ) -> 206, ( 637536293 ) -> 186, ( 637536258 ) -> 166, ( 637536271 ) -> 210, ( 637536291 ) -> 3, ( 637536270 ) -> 247, ( 637536262 ) -> 23, ( 637536301 ) -> 154, ( 637536279 ) -> 178, ( 637536269 ) -> 27, ( 637536261 ) -> 59, ( 637536276 ) -> 30, ( 637536268 ) -> 62, ( 637536303 ) -> 83, ( 637536256 ) -> 238, ( 637536265 ) -> 170, ( 637536286 ) -> 182, ( 637536275 ) -> 67, ( 637536274 ) -> 103, ( 637536300 ) -> 190, ( 637536283 ) -> 35, ( 637536297 ) -> 42, ( 637536292 ) -> 222, ( 637536282 ) -> 70, ( 637536273 ) -> 139, ( 637536287 ) -> 147, ( 637536257 ) -> 202, ( 637536284 ) -> 254, ( 637536277 ) -> 251, ( 637536278 ) -> 214, ( 637536288 ) -> 110, ( 637536280 ) -> 142, ( 637536263 ) -> 243, ( 637536290 ) -> 39, ( 637536285 ) -> 218, ( 637536299 ) -> 227, ( 637536266 ) -> 134, ( 637536298 ) -> 7, ( 637536259 ) -> 131, ( 637536260 ) -> 94, ( 637536272 ) -> 174, ( 637536296 ) -> 78, () -> (RAC: m_multiplier -> 238 , m_adder -> 27)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 268308524 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%add
1 : 12 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 12 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 637536304 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 48 : BV:32
=input.src.llvm-%arrayidx3
1 : 637536300 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-%arrayidx
1 : 637536304 : BV:32
=input.src.llvm-%arrayidx1
1 : 268308524 : BV:32
=input.src.llvm-%0
1 : 2241309115 { -2053658181 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%1
1 : 3454005507 { -840961789 } : BV:32
=input.src.llvm-%add2
1 : 1400347326 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 637536300 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%inc
1 : 12 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (( 4294967295 ) -> 0, ( 4294967292 ) -> 0, ( 637536302 ) -> 119, ( 637536281 ) -> 106, ( 637536267 ) -> 98, ( 637536295 ) -> 114, ( 637536289 ) -> 75, ( 637536294 ) -> 150, ( 637536264 ) -> 206, ( 637536293 ) -> 186, ( 637536258 ) -> 166, ( 637536271 ) -> 210, ( 637536291 ) -> 3, ( 637536270 ) -> 247, ( 637536262 ) -> 23, ( 637536301 ) -> 154, ( 637536279 ) -> 178, ( 4294967294 ) -> 0, ( 637536269 ) -> 27, ( 637536261 ) -> 59, ( 637536276 ) -> 30, ( 637536268 ) -> 62, ( 637536303 ) -> 83, ( 637536256 ) -> 238, ( 637536265 ) -> 170, ( 637536286 ) -> 182, ( 637536275 ) -> 67, ( 637536274 ) -> 103, ( 637536300 ) -> 190, ( 637536283 ) -> 35, ( 637536297 ) -> 42, ( 637536292 ) -> 222, ( 637536282 ) -> 70, ( 4294967293 ) -> 0, ( 637536273 ) -> 139, ( 637536287 ) -> 147, ( 637536257 ) -> 202, ( 637536284 ) -> 254, ( 637536277 ) -> 251, ( 637536278 ) -> 214, ( 637536288 ) -> 110, ( 637536280 ) -> 142, ( 637536263 ) -> 243, ( 637536290 ) -> 39, ( 637536285 ) -> 218, ( 637536299 ) -> 227, ( 637536266 ) -> 134, ( 637536298 ) -> 7, ( 637536259 ) -> 131, ( 637536260 ) -> 94, ( 637536272 ) -> 174, ( 637536296 ) -> 78, () -> (RAC: m_multiplier -> 238 , m_adder -> 27)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 48 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 12 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3044481074
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 59
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 2227288064 { -2067679232 } : BV:32
=symbol.2
1 : 3980377104 { -314590192 } : BV:32
=dst_symbol_addr.1
1 : 2227288064 { -2067679232 } : BV:32
=dst_symbol_addr.2
1 : 3980377104 { -314590192 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1833021436 : BV:32
=input.src.llvm-mem
1 : (( 2227416063 ) -> 72, ( 2227288068 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2227416063 ) -> 72, ( 2227288068 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2227416063 { -2067551233 } : BV:32
=stack.size
1 : 95006720 : BV:32
=input.dst.mem
1 : (( 2227416063 ) -> 72, ( 2227288068 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3980505103 { -314462193 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3980377104 { -314590192 } : BV:32
=memlabel-mem-esp_end
1 : 1833021439 : BV:32
=memlabel-mem-esp_begin
1 : 1738014720 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2227288064 { -2067679232 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
535187618
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1833021436 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 2227288064 { -2067679232 } : BV:32
=symbol.2
1 : 3980377104 { -314590192 } : BV:32
=dst_symbol_addr.1
1 : 2227288064 { -2067679232 } : BV:32
=dst_symbol_addr.2
1 : 3980377104 { -314590192 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1833021436 : BV:32
=input.src.llvm-mem
1 : (( 2227416063 ) -> 72, ( 2227288068 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1833021436 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 2227416063 ) -> 72, ( 2227288068 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2227416063 { -2067551233 } : BV:32
=stack.size
1 : 95006720 : BV:32
=input.dst.mem
1 : (( 2227416063 ) -> 72, ( 2227288068 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3980505103 { -314462193 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3980377104 { -314590192 } : BV:32
=memlabel-mem-esp_end
1 : 1833021439 : BV:32
=memlabel-mem-esp_begin
1 : 1738014720 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2227288064 { -2067679232 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
535187618
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 60
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 2227288064 { -2067679232 } : BV:32
=symbol.2
1 : 3980377104 { -314590192 } : BV:32
=dst_symbol_addr.1
1 : 2227288064 { -2067679232 } : BV:32
=dst_symbol_addr.2
1 : 3980377104 { -314590192 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1833021436 : BV:32
=input.src.llvm-mem
1 : (( 2227416063 ) -> 72, ( 2227288068 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2227416063 ) -> 72, ( 2227288068 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2227416063 { -2067551233 } : BV:32
=stack.size
1 : 95006720 : BV:32
=input.dst.mem
1 : (( 2227416063 ) -> 72, ( 2227288068 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3980505103 { -314462193 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3980377104 { -314590192 } : BV:32
=memlabel-mem-esp_end
1 : 1833021439 : BV:32
=memlabel-mem-esp_begin
1 : 1738014720 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2227288064 { -2067679232 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
535187618
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1833021436 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 2 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 2227288064 { -2067679232 } : BV:32
=symbol.2
1 : 3980377104 { -314590192 } : BV:32
=dst_symbol_addr.1
1 : 2227288064 { -2067679232 } : BV:32
=dst_symbol_addr.2
1 : 3980377104 { -314590192 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1833021436 : BV:32
=input.src.llvm-mem
1 : (( 2227288064 ) -> 2, ( 2227416063 ) -> 72, ( 2227288068 ) -> 0, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1833021436 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 3980377116 { -314590180 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%add
1 : 4 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 2227288080 { -2067679216 } : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 16 : BV:32
=input.src.llvm-%arrayidx3
1 : 2227288076 { -2067679220 } : BV:32
=commonMEM.nonstack.mem
1 : (( 2227416063 ) -> 72, ( 2227288068 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2227416063 { -2067551233 } : BV:32
=input.src.llvm-%arrayidx
1 : 2227288080 { -2067679216 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3980377116 { -314590180 } : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 95006720 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 2227288076 { -2067679220 } : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (( 2227288064 ) -> 2, ( 2227416063 ) -> 72, ( 2227288068 ) -> 0, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3980505103 { -314462193 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3980377104 { -314590192 } : BV:32
=memlabel-mem-esp_end
1 : 1833021439 : BV:32
=memlabel-mem-esp_begin
1 : 1738014720 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2227288064 { -2067679232 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
535187618
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 61
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4294728720 { -238576 } : BV:32
=symbol.2
1 : 4290669568 { -4297728 } : BV:32
=dst_symbol_addr.1
1 : 4294728720 { -238576 } : BV:32
=dst_symbol_addr.2
1 : 4290669568 { -4297728 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4290523132 { -4444164 } : BV:32
=input.src.llvm-mem
1 : (( 4294856719 ) -> 255, ( 4294856718 ) -> 255, ( 4294856716 ) -> 255, ( 4294856717 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4294856719 ) -> 255, ( 4294856718 ) -> 255, ( 4294856716 ) -> 255, ( 4294856717 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294856719 { -110577 } : BV:32
=stack.size
1 : 4290514944 { -4452352 } : BV:32
=input.dst.mem
1 : (( 4294856719 ) -> 255, ( 4294856718 ) -> 255, ( 4294856716 ) -> 255, ( 4294856717 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4290797567 { -4169729 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4290669568 { -4297728 } : BV:32
=memlabel-mem-esp_end
1 : 4290523135 { -4444161 } : BV:32
=memlabel-mem-esp_begin
1 : 8192 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294728720 { -238576 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
693807394
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4290523132 { -4444164 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 4294728720 { -238576 } : BV:32
=symbol.2
1 : 4290669568 { -4297728 } : BV:32
=dst_symbol_addr.1
1 : 4294728720 { -238576 } : BV:32
=dst_symbol_addr.2
1 : 4290669568 { -4297728 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4290523132 { -4444164 } : BV:32
=input.src.llvm-mem
1 : (( 4294856719 ) -> 255, ( 4294856718 ) -> 255, ( 4294856716 ) -> 255, ( 4294856717 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4290523132 { -4444164 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 4294856719 ) -> 255, ( 4294856718 ) -> 255, ( 4294856716 ) -> 255, ( 4294856717 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294856719 { -110577 } : BV:32
=stack.size
1 : 4290514944 { -4452352 } : BV:32
=input.dst.mem
1 : (( 4294856719 ) -> 255, ( 4294856718 ) -> 255, ( 4294856716 ) -> 255, ( 4294856717 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4290797567 { -4169729 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4290669568 { -4297728 } : BV:32
=memlabel-mem-esp_end
1 : 4290523135 { -4444161 } : BV:32
=memlabel-mem-esp_begin
1 : 8192 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294728720 { -238576 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
693807394
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 62
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664255 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 637664255 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 637664255 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
406967877
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664255 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 637664255 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 637664255 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
406967877
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 63
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1233934451
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4291821564 { -3145732 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=input.dst.mem
1 : (( 4291821564 ) -> 255, ( 4291821566 ) -> 255, ( 4291821567 ) -> 255, ( 4291821565 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1233934451
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 64
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1325366596
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3227004924 { -1067962372 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=input.dst.mem
1 : (( 3227004924 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1325366596
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 65
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 255 , m_adder -> 137)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 255 , m_adder -> 137)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2899573782
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 255 , m_adder -> 137)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 4294967295 ) -> 128, ( 4294967292 ) -> 0, ( 4294967294 ) -> 0, ( 4294967293 ) -> 0, () -> (RAC: m_multiplier -> 255 , m_adder -> 137)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2899573782
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 66
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 255 , m_adder -> 137)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 255 , m_adder -> 137)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2899573782
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 320276223303272215912125385472769461518 { -20006143617666247551249221958998749938 } : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637536267 ) -> 248, ( 637536264 ) -> 254, ( 637536258 ) -> 11, ( 637536271 ) -> 240, ( 637536270 ) -> 242, ( 637536262 ) -> 3, ( 637536269 ) -> 244, ( 637536261 ) -> 5, ( 637536268 ) -> 246, ( 637536256 ) -> 14, ( 637536265 ) -> 252, ( 637536257 ) -> 13, ( 637536263 ) -> 1, ( 637536266 ) -> 250, ( 637536259 ) -> 9, ( 637536260 ) -> 6, () -> (RAC: m_multiplier -> 255 , m_adder -> 137)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 268308492 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%add
1 : 4 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 637536272 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 16 : BV:32
=input.src.llvm-%arrayidx3
1 : 637536268 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-%arrayidx
1 : 637536272 : BV:32
=input.src.llvm-%arrayidx1
1 : 268308492 : BV:32
=input.src.llvm-%0
1 : 1987541113 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%1
1 : 2054913149 : BV:32
=input.src.llvm-%add2
1 : 4042454262 { -252513034 } : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 637536268 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (( 4294967295 ) -> 128, ( 4294967292 ) -> 0, ( 637536267 ) -> 248, ( 637536264 ) -> 254, ( 637536258 ) -> 11, ( 637536271 ) -> 240, ( 637536270 ) -> 242, ( 637536262 ) -> 3, ( 4294967294 ) -> 0, ( 637536269 ) -> 244, ( 637536261 ) -> 5, ( 637536268 ) -> 246, ( 637536256 ) -> 14, ( 637536265 ) -> 252, ( 4294967293 ) -> 0, ( 637536257 ) -> 13, ( 637536263 ) -> 1, ( 637536266 ) -> 250, ( 637536259 ) -> 9, ( 637536260 ) -> 6, () -> (RAC: m_multiplier -> 255 , m_adder -> 137)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2899573782
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 67
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 18729984 : BV:32
=symbol.2
1 : 4190176 : BV:32
=dst_symbol_addr.1
1 : 18729984 : BV:32
=dst_symbol_addr.2
1 : 4190176 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4292841468 { -2125828 } : BV:32
=input.src.llvm-mem
1 : (( 4190186 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4190186 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 18857983 : BV:32
=stack.size
1 : 4234113024 { -60854272 } : BV:32
=input.dst.mem
1 : (( 4190186 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4318175 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4190176 : BV:32
=memlabel-mem-esp_end
1 : 4292841471 { -2125825 } : BV:32
=memlabel-mem-esp_begin
1 : 58728448 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 18729984 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1048576 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1680949563
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4292841468 { -2125828 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 18729984 : BV:32
=symbol.2
1 : 4190176 : BV:32
=dst_symbol_addr.1
1 : 18729984 : BV:32
=dst_symbol_addr.2
1 : 4190176 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4292841468 { -2125828 } : BV:32
=input.src.llvm-mem
1 : (( 4190186 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4292841468 { -2125828 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 4190186 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 18857983 : BV:32
=stack.size
1 : 4234113024 { -60854272 } : BV:32
=input.dst.mem
1 : (( 4190186 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4318175 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4190176 : BV:32
=memlabel-mem-esp_end
1 : 4292841471 { -2125825 } : BV:32
=memlabel-mem-esp_begin
1 : 58728448 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 18729984 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1048576 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1680949563
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 68
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3464375296 { -830592000 } : BV:32
=symbol.2
1 : 3707386896 { -587580400 } : BV:32
=dst_symbol_addr.1
1 : 3464375296 { -830592000 } : BV:32
=dst_symbol_addr.2
1 : 3707386896 { -587580400 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-mem
1 : (( 3464375307 ) -> 255, ( 3464375305 ) -> 255, ( 3464375306 ) -> 255, ( 3464375304 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3464375307 ) -> 255, ( 3464375305 ) -> 255, ( 3464375306 ) -> 255, ( 3464375304 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3464503295 { -830464001 } : BV:32
=stack.size
1 : 3034525696 { -1260441600 } : BV:32
=input.dst.mem
1 : (( 3464375307 ) -> 255, ( 3464375305 ) -> 255, ( 3464375306 ) -> 255, ( 3464375304 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3707514895 { -587452401 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707386896 { -587580400 } : BV:32
=memlabel-mem-esp_end
1 : 3437506559 { -857460737 } : BV:32
=memlabel-mem-esp_begin
1 : 402980864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3464375296 { -830592000 } : BV:32
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
790413831
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3437506556 { -857460740 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3464375296 { -830592000 } : BV:32
=symbol.2
1 : 3707386896 { -587580400 } : BV:32
=dst_symbol_addr.1
1 : 3464375296 { -830592000 } : BV:32
=dst_symbol_addr.2
1 : 3707386896 { -587580400 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-mem
1 : (( 3464375307 ) -> 255, ( 3464375305 ) -> 255, ( 3464375306 ) -> 255, ( 3464375304 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 3464375307 ) -> 255, ( 3464375305 ) -> 255, ( 3464375306 ) -> 255, ( 3464375304 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3464503295 { -830464001 } : BV:32
=stack.size
1 : 3034525696 { -1260441600 } : BV:32
=input.dst.mem
1 : (( 3464375307 ) -> 255, ( 3464375305 ) -> 255, ( 3464375306 ) -> 255, ( 3464375304 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3707514895 { -587452401 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707386896 { -587580400 } : BV:32
=memlabel-mem-esp_end
1 : 3437506559 { -857460737 } : BV:32
=memlabel-mem-esp_begin
1 : 402980864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3464375296 { -830592000 } : BV:32
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
790413831
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 69
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 920576 : BV:32
=symbol.2
1 : 748592 : BV:32
=dst_symbol_addr.1
1 : 920576 : BV:32
=dst_symbol_addr.2
1 : 748592 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1048570 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1048570 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1048575 : BV:32
=stack.size
1 : 4293914624 { -1052672 } : BV:32
=input.dst.mem
1 : (( 1048570 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 876591 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 748592 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 1052672 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 920576 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1874586284
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 920576 : BV:32
=symbol.2
1 : 748592 : BV:32
=dst_symbol_addr.1
1 : 920576 : BV:32
=dst_symbol_addr.2
1 : 748592 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1048570 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 1048570 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1048575 : BV:32
=stack.size
1 : 4293914624 { -1052672 } : BV:32
=input.dst.mem
1 : (( 1048570 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 876591 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 748592 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 1052672 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 920576 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1874586284
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 70
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3464375296 { -830592000 } : BV:32
=symbol.2
1 : 3707386896 { -587580400 } : BV:32
=dst_symbol_addr.1
1 : 3464375296 { -830592000 } : BV:32
=dst_symbol_addr.2
1 : 3707386896 { -587580400 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-mem
1 : (( 3707514890 ) -> 255, ( 3707514891 ) -> 255, ( 3707514889 ) -> 255, ( 3707514888 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3707514890 ) -> 255, ( 3707514891 ) -> 255, ( 3707514889 ) -> 255, ( 3707514888 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3464503295 { -830464001 } : BV:32
=stack.size
1 : 3034525696 { -1260441600 } : BV:32
=input.dst.mem
1 : (( 3707514890 ) -> 255, ( 3707514891 ) -> 255, ( 3707514889 ) -> 255, ( 3707514888 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3707514895 { -587452401 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707386896 { -587580400 } : BV:32
=memlabel-mem-esp_end
1 : 3437506559 { -857460737 } : BV:32
=memlabel-mem-esp_begin
1 : 402980864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3464375296 { -830592000 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1615408917
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3437506556 { -857460740 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3464375296 { -830592000 } : BV:32
=symbol.2
1 : 3707386896 { -587580400 } : BV:32
=dst_symbol_addr.1
1 : 3464375296 { -830592000 } : BV:32
=dst_symbol_addr.2
1 : 3707386896 { -587580400 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-mem
1 : (( 3707514890 ) -> 255, ( 3707514891 ) -> 255, ( 3707514889 ) -> 255, ( 3707514888 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 3707514890 ) -> 255, ( 3707514891 ) -> 255, ( 3707514889 ) -> 255, ( 3707514888 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3464503295 { -830464001 } : BV:32
=stack.size
1 : 3034525696 { -1260441600 } : BV:32
=input.dst.mem
1 : (( 3707514890 ) -> 255, ( 3707514891 ) -> 255, ( 3707514889 ) -> 255, ( 3707514888 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3707514895 { -587452401 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707386896 { -587580400 } : BV:32
=memlabel-mem-esp_end
1 : 3437506559 { -857460737 } : BV:32
=memlabel-mem-esp_begin
1 : 402980864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3464375296 { -830592000 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1615408917
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 71
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3464375296 { -830592000 } : BV:32
=symbol.2
1 : 3707386896 { -587580400 } : BV:32
=dst_symbol_addr.1
1 : 3464375296 { -830592000 } : BV:32
=dst_symbol_addr.2
1 : 3707386896 { -587580400 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-mem
1 : (( 3464503282 ) -> 255, ( 3464503283 ) -> 255, ( 3464503281 ) -> 255, ( 3464503280 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3464503282 ) -> 255, ( 3464503283 ) -> 255, ( 3464503281 ) -> 255, ( 3464503280 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3464503295 { -830464001 } : BV:32
=stack.size
1 : 3034525696 { -1260441600 } : BV:32
=input.dst.mem
1 : (( 3464503282 ) -> 255, ( 3464503283 ) -> 255, ( 3464503281 ) -> 255, ( 3464503280 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3707514895 { -587452401 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707386896 { -587580400 } : BV:32
=memlabel-mem-esp_end
1 : 3437506559 { -857460737 } : BV:32
=memlabel-mem-esp_begin
1 : 402980864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3464375296 { -830592000 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1515450385
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3437506556 { -857460740 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3464375296 { -830592000 } : BV:32
=symbol.2
1 : 3707386896 { -587580400 } : BV:32
=dst_symbol_addr.1
1 : 3464375296 { -830592000 } : BV:32
=dst_symbol_addr.2
1 : 3707386896 { -587580400 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-mem
1 : (( 3464503282 ) -> 255, ( 3464503283 ) -> 255, ( 3464503281 ) -> 255, ( 3464503280 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 3464503282 ) -> 255, ( 3464503283 ) -> 255, ( 3464503281 ) -> 255, ( 3464503280 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3464503295 { -830464001 } : BV:32
=stack.size
1 : 3034525696 { -1260441600 } : BV:32
=input.dst.mem
1 : (( 3464503282 ) -> 255, ( 3464503283 ) -> 255, ( 3464503281 ) -> 255, ( 3464503280 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3707514895 { -587452401 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707386896 { -587580400 } : BV:32
=memlabel-mem-esp_end
1 : 3437506559 { -857460737 } : BV:32
=memlabel-mem-esp_begin
1 : 402980864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3464375296 { -830592000 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1515450385
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 72
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1659447024 : BV:32
=symbol.2
1 : 2045379584 : BV:32
=dst_symbol_addr.1
1 : 1659447024 : BV:32
=dst_symbol_addr.2
1 : 2045379584 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294930428 { -36868 } : BV:32
=input.src.llvm-mem
1 : (( 2045507569 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2045507569 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1659575023 : BV:32
=stack.size
1 : 2147450880 : BV:32
=input.dst.mem
1 : (( 2045507569 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2045507583 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2045379584 : BV:32
=memlabel-mem-esp_end
1 : 4294930431 { -36865 } : BV:32
=memlabel-mem-esp_begin
1 : 2147479552 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1659447024 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2071977971
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294930428 { -36868 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 1659447024 : BV:32
=symbol.2
1 : 2045379584 : BV:32
=dst_symbol_addr.1
1 : 1659447024 : BV:32
=dst_symbol_addr.2
1 : 2045379584 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294930428 { -36868 } : BV:32
=input.src.llvm-mem
1 : (( 2045507569 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294930428 { -36868 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 2045507569 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1659575023 : BV:32
=stack.size
1 : 2147450880 : BV:32
=input.dst.mem
1 : (( 2045507569 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2045507583 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2045379584 : BV:32
=memlabel-mem-esp_end
1 : 4294930431 { -36865 } : BV:32
=memlabel-mem-esp_begin
1 : 2147479552 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1659447024 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2071977971
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 73
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4279183360 { -15783936 } : BV:32
=symbol.2
1 : 4261178368 { -33788928 } : BV:32
=dst_symbol_addr.1
1 : 4279183360 { -15783936 } : BV:32
=dst_symbol_addr.2
1 : 4261178368 { -33788928 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4227604476 { -67362820 } : BV:32
=input.src.llvm-mem
1 : (( 4261178377 ) -> 31, ( 4261178376 ) -> 84, ( 4279311348 ) -> 126, ( 4261178372 ) -> 0, ( 4261306352 ) -> 128, ( 4279311349 ) -> 7, ( 4261306353 ) -> 28, () -> 35) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4261178377 ) -> 31, ( 4261178376 ) -> 84, ( 4279311348 ) -> 126, ( 4261178372 ) -> 0, ( 4261306352 ) -> 128, ( 4279311349 ) -> 7, ( 4261306353 ) -> 28, () -> 35) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4279311359 { -15655937 } : BV:32
=stack.size
1 : 4227600384 { -67366912 } : BV:32
=input.dst.mem
1 : (( 4261178377 ) -> 31, ( 4261178376 ) -> 84, ( 4279311348 ) -> 126, ( 4261178372 ) -> 0, ( 4261306352 ) -> 128, ( 4279311349 ) -> 7, ( 4261306353 ) -> 28, () -> 35) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4261306367 { -33660929 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4261178368 { -33788928 } : BV:32
=memlabel-mem-esp_end
1 : 4227604479 { -67362817 } : BV:32
=memlabel-mem-esp_begin
1 : 4096 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4279183360 { -15783936 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
845987038
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4227604476 { -67362820 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 4279183360 { -15783936 } : BV:32
=symbol.2
1 : 4261178368 { -33788928 } : BV:32
=dst_symbol_addr.1
1 : 4279183360 { -15783936 } : BV:32
=dst_symbol_addr.2
1 : 4261178368 { -33788928 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4227604476 { -67362820 } : BV:32
=input.src.llvm-mem
1 : (( 4261178377 ) -> 31, ( 4261178376 ) -> 84, ( 4279311348 ) -> 126, ( 4261178372 ) -> 0, ( 4261306352 ) -> 128, ( 4279311349 ) -> 7, ( 4261306353 ) -> 28, () -> 35) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4227604476 { -67362820 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 4261178377 ) -> 31, ( 4261178376 ) -> 84, ( 4279311348 ) -> 126, ( 4261178372 ) -> 0, ( 4261306352 ) -> 128, ( 4279311349 ) -> 7, ( 4261306353 ) -> 28, () -> 35) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4279311359 { -15655937 } : BV:32
=stack.size
1 : 4227600384 { -67366912 } : BV:32
=input.dst.mem
1 : (( 4261178377 ) -> 31, ( 4261178376 ) -> 84, ( 4279311348 ) -> 126, ( 4261178372 ) -> 0, ( 4261306352 ) -> 128, ( 4279311349 ) -> 7, ( 4261306353 ) -> 28, ( 4227604476 ) -> 0, ( 4227604479 ) -> 0, ( 4227604477 ) -> 0, ( 4227604478 ) -> 0, () -> 35) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4261306367 { -33660929 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4261178368 { -33788928 } : BV:32
=memlabel-mem-esp_end
1 : 4227604479 { -67362817 } : BV:32
=memlabel-mem-esp_begin
1 : 4096 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4279183360 { -15783936 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
845987038
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 74
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4279183360 { -15783936 } : BV:32
=symbol.2
1 : 4261178368 { -33788928 } : BV:32
=dst_symbol_addr.1
1 : 4279183360 { -15783936 } : BV:32
=dst_symbol_addr.2
1 : 4261178368 { -33788928 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4227604476 { -67362820 } : BV:32
=input.src.llvm-mem
1 : (( 4261178377 ) -> 31, ( 4261178376 ) -> 84, ( 4279311348 ) -> 126, ( 4261178372 ) -> 0, ( 4261306352 ) -> 128, ( 4279311349 ) -> 7, ( 4261306353 ) -> 28, () -> 35) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4261178377 ) -> 31, ( 4261178376 ) -> 84, ( 4279311348 ) -> 126, ( 4261178372 ) -> 0, ( 4261306352 ) -> 128, ( 4279311349 ) -> 7, ( 4261306353 ) -> 28, () -> 35) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4279311359 { -15655937 } : BV:32
=stack.size
1 : 4227600384 { -67366912 } : BV:32
=input.dst.mem
1 : (( 4261178377 ) -> 31, ( 4261178376 ) -> 84, ( 4279311348 ) -> 126, ( 4261178372 ) -> 0, ( 4261306352 ) -> 128, ( 4279311349 ) -> 7, ( 4261306353 ) -> 28, () -> 35) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4261306367 { -33660929 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4261178368 { -33788928 } : BV:32
=memlabel-mem-esp_end
1 : 4227604479 { -67362817 } : BV:32
=memlabel-mem-esp_begin
1 : 4096 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4279183360 { -15783936 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
845987038
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4227604476 { -67362820 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 93410845821434070023978341787662435910 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 4279183360 { -15783936 } : BV:32
=symbol.2
1 : 4261178368 { -33788928 } : BV:32
=dst_symbol_addr.1
1 : 4279183360 { -15783936 } : BV:32
=dst_symbol_addr.2
1 : 4261178368 { -33788928 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4227604476 { -67362820 } : BV:32
=input.src.llvm-mem
1 : (( 4279183366 ) -> 70, ( 4279183361 ) -> 70, ( 4279183365 ) -> 70, ( 4279183370 ) -> 70, ( 4279183371 ) -> 70, ( 4279183368 ) -> 119, ( 4279183360 ) -> 70, ( 4261178377 ) -> 31, ( 4279183367 ) -> 70, ( 4279183375 ) -> 70, ( 4261178376 ) -> 84, ( 4279311348 ) -> 126, ( 4261178372 ) -> 0, ( 4261306352 ) -> 128, ( 4279311349 ) -> 7, ( 4279183372 ) -> 70, ( 4279183369 ) -> 66, ( 4279183374 ) -> 70, ( 4261306353 ) -> 28, ( 4279183373 ) -> 70, ( 4279183363 ) -> 70, ( 4279183362 ) -> 70, () -> 35) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4227604476 { -67362820 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 4261178380 { -33788916 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%add
1 : 4 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 4279183376 { -15783920 } : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 16 : BV:32
=input.src.llvm-%arrayidx3
1 : 4279183372 { -15783924 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4261178377 ) -> 31, ( 4261178376 ) -> 84, ( 4279311348 ) -> 126, ( 4261178372 ) -> 0, ( 4261306352 ) -> 128, ( 4279311349 ) -> 7, ( 4261306353 ) -> 28, () -> 35) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4279311359 { -15655937 } : BV:32
=input.src.llvm-%arrayidx
1 : 4279183376 { -15783920 } : BV:32
=input.src.llvm-%arrayidx1
1 : 4261178380 { -33788916 } : BV:32
=input.src.llvm-%0
1 : 589505315 : BV:32
=stack.size
1 : 4227600384 { -67366912 } : BV:32
=input.src.llvm-%1
1 : 589505315 : BV:32
=input.src.llvm-%add2
1 : 1179010630 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 4279183372 { -15783924 } : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (( 4279183366 ) -> 70, ( 4279183361 ) -> 70, ( 4279183365 ) -> 70, ( 4279183370 ) -> 70, ( 4279183371 ) -> 70, ( 4279183368 ) -> 119, ( 4279183360 ) -> 70, ( 4261178377 ) -> 31, ( 4279183367 ) -> 70, ( 4279183375 ) -> 70, ( 4261178376 ) -> 84, ( 4279311348 ) -> 126, ( 4261178372 ) -> 0, ( 4261306352 ) -> 128, ( 4279311349 ) -> 7, ( 4279183372 ) -> 70, ( 4279183369 ) -> 66, ( 4279183374 ) -> 70, ( 4261306353 ) -> 28, ( 4227604476 ) -> 0, ( 4227604479 ) -> 0, ( 4279183373 ) -> 70, ( 4227604477 ) -> 0, ( 4227604478 ) -> 0, ( 4279183363 ) -> 70, ( 4279183362 ) -> 70, () -> 35) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4261306367 { -33660929 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4261178368 { -33788928 } : BV:32
=memlabel-mem-esp_end
1 : 4227604479 { -67362817 } : BV:32
=memlabel-mem-esp_begin
1 : 4096 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4279183360 { -15783936 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
845987038
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 75
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 679741312 : BV:32
=symbol.2
1 : 2676456448 { -1618510848 } : BV:32
=dst_symbol_addr.1
1 : 679741312 : BV:32
=dst_symbol_addr.2
1 : 2676456448 { -1618510848 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 142241788 : BV:32
=input.src.llvm-mem
1 : (( 2676456453 ) -> 14, ( 2676584432 ) -> 193, ( 2676456456 ) -> 66, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2676456453 ) -> 14, ( 2676584432 ) -> 193, ( 2676456456 ) -> 66, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 679869311 : BV:32
=stack.size
1 : 108437504 : BV:32
=input.dst.mem
1 : (( 2676456453 ) -> 14, ( 2676584432 ) -> 193, ( 2676456456 ) -> 66, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2676584447 { -1618382849 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2676456448 { -1618510848 } : BV:32
=memlabel-mem-esp_end
1 : 142241791 : BV:32
=memlabel-mem-esp_begin
1 : 33804288 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 679741312 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1277930067
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 142241788 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 679741312 : BV:32
=symbol.2
1 : 2676456448 { -1618510848 } : BV:32
=dst_symbol_addr.1
1 : 679741312 : BV:32
=dst_symbol_addr.2
1 : 2676456448 { -1618510848 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 142241788 : BV:32
=input.src.llvm-mem
1 : (( 2676456453 ) -> 14, ( 2676584432 ) -> 193, ( 2676456456 ) -> 66, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 142241788 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 2676456453 ) -> 14, ( 2676584432 ) -> 193, ( 2676456456 ) -> 66, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 679869311 : BV:32
=stack.size
1 : 108437504 : BV:32
=input.dst.mem
1 : (( 2676456453 ) -> 14, ( 2676584432 ) -> 193, ( 2676456456 ) -> 66, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2676584447 { -1618382849 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2676456448 { -1618510848 } : BV:32
=memlabel-mem-esp_end
1 : 142241791 : BV:32
=memlabel-mem-esp_begin
1 : 33804288 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 679741312 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1277930067
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 76
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 679741312 : BV:32
=symbol.2
1 : 2676456448 { -1618510848 } : BV:32
=dst_symbol_addr.1
1 : 679741312 : BV:32
=dst_symbol_addr.2
1 : 2676456448 { -1618510848 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 142241788 : BV:32
=input.src.llvm-mem
1 : (( 2676456453 ) -> 14, ( 2676584432 ) -> 193, ( 2676456456 ) -> 66, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2676456453 ) -> 14, ( 2676584432 ) -> 193, ( 2676456456 ) -> 66, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 679869311 : BV:32
=stack.size
1 : 108437504 : BV:32
=input.dst.mem
1 : (( 2676456453 ) -> 14, ( 2676584432 ) -> 193, ( 2676456456 ) -> 66, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2676584447 { -1618382849 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2676456448 { -1618510848 } : BV:32
=memlabel-mem-esp_end
1 : 142241791 : BV:32
=memlabel-mem-esp_begin
1 : 33804288 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 679741312 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1277930067
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 142241788 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 1217485124257993195520 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 679741312 : BV:32
=symbol.2
1 : 2676456448 { -1618510848 } : BV:32
=dst_symbol_addr.1
1 : 679741312 : BV:32
=dst_symbol_addr.2
1 : 2676456448 { -1618510848 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 142241788 : BV:32
=input.src.llvm-mem
1 : (( 2676456453 ) -> 14, ( 2676584432 ) -> 193, ( 2676456456 ) -> 66, ( 679741317 ) -> 14, ( 679741320 ) -> 66, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 142241788 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 2676456460 { -1618510836 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%add
1 : 4 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 679741328 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 16 : BV:32
=input.src.llvm-%arrayidx3
1 : 679741324 : BV:32
=commonMEM.nonstack.mem
1 : (( 2676456453 ) -> 14, ( 2676584432 ) -> 193, ( 2676456456 ) -> 66, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 679869311 : BV:32
=input.src.llvm-%arrayidx
1 : 679741328 : BV:32
=input.src.llvm-%arrayidx1
1 : 2676456460 { -1618510836 } : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 108437504 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 679741324 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (( 2676456453 ) -> 14, ( 2676584432 ) -> 193, ( 2676456456 ) -> 66, ( 679741317 ) -> 14, ( 679741320 ) -> 66, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2676584447 { -1618382849 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2676456448 { -1618510848 } : BV:32
=memlabel-mem-esp_end
1 : 142241791 : BV:32
=memlabel-mem-esp_begin
1 : 33804288 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 679741312 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1277930067
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 77
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3296603136 { -998364160 } : BV:32
=symbol.2
1 : 3309190160 { -985777136 } : BV:32
=dst_symbol_addr.1
1 : 3296603136 { -998364160 } : BV:32
=dst_symbol_addr.2
1 : 3309190160 { -985777136 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3242209276 { -1052758020 } : BV:32
=input.src.llvm-mem
1 : (( 3309318148 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3309318148 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3296731135 { -998236161 } : BV:32
=stack.size
1 : 3023712256 { -1271255040 } : BV:32
=input.dst.mem
1 : (( 3309318148 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3309318159 { -985649137 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3309190160 { -985777136 } : BV:32
=memlabel-mem-esp_end
1 : 3242209279 { -1052758017 } : BV:32
=memlabel-mem-esp_begin
1 : 218497024 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3296603136 { -998364160 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1831265917
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3242209276 { -1052758020 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3296603136 { -998364160 } : BV:32
=symbol.2
1 : 3309190160 { -985777136 } : BV:32
=dst_symbol_addr.1
1 : 3296603136 { -998364160 } : BV:32
=dst_symbol_addr.2
1 : 3309190160 { -985777136 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3242209276 { -1052758020 } : BV:32
=input.src.llvm-mem
1 : (( 3309318148 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3242209276 { -1052758020 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 3309318148 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3296731135 { -998236161 } : BV:32
=stack.size
1 : 3023712256 { -1271255040 } : BV:32
=input.dst.mem
1 : (( 3309318148 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3309318159 { -985649137 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3309190160 { -985777136 } : BV:32
=memlabel-mem-esp_end
1 : 3242209279 { -1052758017 } : BV:32
=memlabel-mem-esp_begin
1 : 218497024 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3296603136 { -998364160 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1831265917
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 78
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4288412688 { -6554608 } : BV:32
=symbol.2
1 : 414319616 : BV:32
=dst_symbol_addr.1
1 : 4288412688 { -6554608 } : BV:32
=dst_symbol_addr.2
1 : 414319616 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3185045500 { -1109921796 } : BV:32
=input.src.llvm-mem
1 : (( 4288412700 ) -> 63, ( 414447604 ) -> 0, ( 4288540680 ) -> 0, () -> 191) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4288412700 ) -> 63, ( 414447604 ) -> 0, ( 4288540680 ) -> 0, () -> 191) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4288540687 { -6426609 } : BV:32
=stack.size
1 : 2374430720 { -1920536576 } : BV:32
=input.dst.mem
1 : (( 4288412700 ) -> 63, ( 414447604 ) -> 0, ( 4288540680 ) -> 0, () -> 191) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 414447615 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 414319616 : BV:32
=memlabel-mem-esp_end
1 : 3185045503 { -1109921793 } : BV:32
=memlabel-mem-esp_begin
1 : 810614784 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4288412688 { -6554608 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2115393921
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3185045500 { -1109921796 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 4288412688 { -6554608 } : BV:32
=symbol.2
1 : 414319616 : BV:32
=dst_symbol_addr.1
1 : 4288412688 { -6554608 } : BV:32
=dst_symbol_addr.2
1 : 414319616 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3185045500 { -1109921796 } : BV:32
=input.src.llvm-mem
1 : (( 4288412700 ) -> 63, ( 414447604 ) -> 0, ( 4288540680 ) -> 0, () -> 191) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3185045500 { -1109921796 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 4288412700 ) -> 63, ( 414447604 ) -> 0, ( 4288540680 ) -> 0, () -> 191) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4288540687 { -6426609 } : BV:32
=stack.size
1 : 2374430720 { -1920536576 } : BV:32
=input.dst.mem
1 : (( 3185045502 ) -> 0, ( 4288412700 ) -> 63, ( 3185045500 ) -> 0, ( 3185045503 ) -> 0, ( 414447604 ) -> 0, ( 4288540680 ) -> 0, ( 3185045501 ) -> 0, () -> 191) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 414447615 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 414319616 : BV:32
=memlabel-mem-esp_end
1 : 3185045503 { -1109921793 } : BV:32
=memlabel-mem-esp_begin
1 : 810614784 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4288412688 { -6554608 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2115393921
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 79
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4288412688 { -6554608 } : BV:32
=symbol.2
1 : 414319616 : BV:32
=dst_symbol_addr.1
1 : 4288412688 { -6554608 } : BV:32
=dst_symbol_addr.2
1 : 414319616 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3185045500 { -1109921796 } : BV:32
=input.src.llvm-mem
1 : (( 4288412700 ) -> 63, ( 414447604 ) -> 0, ( 4288540680 ) -> 0, () -> 191) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4288412700 ) -> 63, ( 414447604 ) -> 0, ( 4288540680 ) -> 0, () -> 191) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4288540687 { -6426609 } : BV:32
=stack.size
1 : 2374430720 { -1920536576 } : BV:32
=input.dst.mem
1 : (( 4288412700 ) -> 63, ( 414447604 ) -> 0, ( 4288540680 ) -> 0, () -> 191) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 414447615 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 414319616 : BV:32
=memlabel-mem-esp_end
1 : 3185045503 { -1109921793 } : BV:32
=memlabel-mem-esp_begin
1 : 810614784 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4288412688 { -6554608 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2115393921
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3185045500 { -1109921796 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 169473963053945109066296167653764464510 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 4288412688 { -6554608 } : BV:32
=symbol.2
1 : 414319616 : BV:32
=dst_symbol_addr.1
1 : 4288412688 { -6554608 } : BV:32
=dst_symbol_addr.2
1 : 414319616 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3185045500 { -1109921796 } : BV:32
=input.src.llvm-mem
1 : (( 4288412697 ) -> 126, ( 4288412700 ) -> 126, ( 4288412688 ) -> 126, ( 414447604 ) -> 0, ( 4288540680 ) -> 0, ( 4288412694 ) -> 127, ( 4288412692 ) -> 126, ( 4288412699 ) -> 127, ( 4288412695 ) -> 127, ( 4288412696 ) -> 254, ( 4288412702 ) -> 127, ( 4288412701 ) -> 127, ( 4288412698 ) -> 127, ( 4288412693 ) -> 127, ( 4288412703 ) -> 127, ( 4288412689 ) -> 127, ( 4288412690 ) -> 127, ( 4288412691 ) -> 127, () -> 191) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3185045500 { -1109921796 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 414319628 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%add
1 : 4 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 4288412704 { -6554592 } : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 16 : BV:32
=input.src.llvm-%arrayidx3
1 : 4288412700 { -6554596 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4288412700 ) -> 63, ( 414447604 ) -> 0, ( 4288540680 ) -> 0, () -> 191) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4288540687 { -6426609 } : BV:32
=input.src.llvm-%arrayidx
1 : 4288412704 { -6554592 } : BV:32
=input.src.llvm-%arrayidx1
1 : 414319628 : BV:32
=input.src.llvm-%0
1 : 3217014719 { -1077952577 } : BV:32
=stack.size
1 : 2374430720 { -1920536576 } : BV:32
=input.src.llvm-%1
1 : 3217014719 { -1077952577 } : BV:32
=input.src.llvm-%add2
1 : 2139062142 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 4288412700 { -6554596 } : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (( 3185045502 ) -> 0, ( 4288412697 ) -> 126, ( 4288412700 ) -> 126, ( 3185045500 ) -> 0, ( 3185045503 ) -> 0, ( 4288412688 ) -> 126, ( 414447604 ) -> 0, ( 4288540680 ) -> 0, ( 4288412694 ) -> 127, ( 4288412692 ) -> 126, ( 4288412699 ) -> 127, ( 4288412695 ) -> 127, ( 4288412696 ) -> 254, ( 3185045501 ) -> 0, ( 4288412702 ) -> 127, ( 4288412701 ) -> 127, ( 4288412698 ) -> 127, ( 4288412693 ) -> 127, ( 4288412703 ) -> 127, ( 4288412689 ) -> 127, ( 4288412690 ) -> 127, ( 4288412691 ) -> 127, () -> 191) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 414447615 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 414319616 : BV:32
=memlabel-mem-esp_end
1 : 3185045503 { -1109921793 } : BV:32
=memlabel-mem-esp_begin
1 : 810614784 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4288412688 { -6554608 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2115393921
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 80
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
296638053
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4291821564 { -3145732 } : BV:32
=input.dst.exreg.0.5
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
296638053
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 81
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
225040072
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 1 : BV:32
=input.dst.exreg.0.4
1 : 3227004924 { -1067962372 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
225040072
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 82
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1948223782
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3227004924 { -1067962372 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 1 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1948223782
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 83
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 134160 : BV:32
=symbol.2
1 : 924672 : BV:32
=dst_symbol_addr.1
1 : 134160 : BV:32
=dst_symbol_addr.2
1 : 924672 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294959100 { -8196 } : BV:32
=input.src.llvm-mem
1 : (( 134176 ) -> 159, ( 924672 ) -> 187, ( 134172 ) -> 50, ( 924684 ) -> 50, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 134176 ) -> 159, ( 924672 ) -> 187, ( 134172 ) -> 50, ( 924684 ) -> 50, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 262159 : BV:32
=stack.size
1 : 4293906432 { -1060864 } : BV:32
=input.dst.mem
1 : (( 134176 ) -> 159, ( 924672 ) -> 187, ( 134172 ) -> 50, ( 924684 ) -> 50, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1052671 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 924672 : BV:32
=memlabel-mem-esp_end
1 : 4294959103 { -8193 } : BV:32
=memlabel-mem-esp_begin
1 : 1052672 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 134160 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 50 : BV:32
=unaliased_memslot.3
1 : 159 : BV:32
=unaliased_memslot.6
1 : 50 : BV:32
=unaliased_memslot.5
1 : 187 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1638341203
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294959100 { -8196 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 134160 : BV:32
=symbol.2
1 : 924672 : BV:32
=dst_symbol_addr.1
1 : 134160 : BV:32
=dst_symbol_addr.2
1 : 924672 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294959100 { -8196 } : BV:32
=input.src.llvm-mem
1 : (( 134176 ) -> 159, ( 924672 ) -> 187, ( 134172 ) -> 50, ( 924684 ) -> 50, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294959100 { -8196 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 134176 ) -> 159, ( 924672 ) -> 187, ( 134172 ) -> 50, ( 924684 ) -> 50, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 262159 : BV:32
=stack.size
1 : 4293906432 { -1060864 } : BV:32
=input.dst.mem
1 : (( 134176 ) -> 159, ( 924672 ) -> 187, ( 134172 ) -> 50, ( 924684 ) -> 50, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1052671 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 924672 : BV:32
=memlabel-mem-esp_end
1 : 4294959103 { -8193 } : BV:32
=memlabel-mem-esp_begin
1 : 1052672 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 134160 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 50 : BV:32
=unaliased_memslot.3
1 : 159 : BV:32
=unaliased_memslot.6
1 : 50 : BV:32
=unaliased_memslot.5
1 : 187 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1638341203
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 84
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3490185216 { -804782080 } : BV:32
=symbol.2
1 : 3825999872 { -468967424 } : BV:32
=dst_symbol_addr.1
1 : 3490185216 { -804782080 } : BV:32
=dst_symbol_addr.2
1 : 3825999872 { -468967424 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3423363068 { -871604228 } : BV:32
=input.src.llvm-mem
1 : (( 3825999884 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3825999884 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3490313215 { -804654081 } : BV:32
=stack.size
1 : 2986631168 { -1308336128 } : BV:32
=input.dst.mem
1 : (( 3825999884 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3826127871 { -468839425 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3825999872 { -468967424 } : BV:32
=memlabel-mem-esp_end
1 : 3423363071 { -871604225 } : BV:32
=memlabel-mem-esp_begin
1 : 436731904 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3490185216 { -804782080 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.6
1 : 64 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
268323726
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3423363068 { -871604228 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3490185216 { -804782080 } : BV:32
=symbol.2
1 : 3825999872 { -468967424 } : BV:32
=dst_symbol_addr.1
1 : 3490185216 { -804782080 } : BV:32
=dst_symbol_addr.2
1 : 3825999872 { -468967424 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3423363068 { -871604228 } : BV:32
=input.src.llvm-mem
1 : (( 3825999884 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3423363068 { -871604228 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 3825999884 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3490313215 { -804654081 } : BV:32
=stack.size
1 : 2986631168 { -1308336128 } : BV:32
=input.dst.mem
1 : (( 3825999884 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3826127871 { -468839425 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3825999872 { -468967424 } : BV:32
=memlabel-mem-esp_end
1 : 3423363071 { -871604225 } : BV:32
=memlabel-mem-esp_begin
1 : 436731904 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3490185216 { -804782080 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.6
1 : 64 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
268323726
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 85
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1426066432 : BV:32
=symbol.2
1 : 1962806288 : BV:32
=dst_symbol_addr.1
1 : 1426066432 : BV:32
=dst_symbol_addr.2
1 : 1962806288 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1962806292 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1962806292 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1426194431 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 1962806292 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1962934287 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1962806288 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1426066432 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1702750723
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 1426066432 : BV:32
=symbol.2
1 : 1962806288 : BV:32
=dst_symbol_addr.1
1 : 1426066432 : BV:32
=dst_symbol_addr.2
1 : 1962806288 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1962806292 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 1962806292 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1426194431 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 1962806292 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1962934287 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1962806288 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1426066432 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1702750723
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 86
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 480 : BV:32
=symbol.2
1 : 129936 : BV:32
=dst_symbol_addr.1
1 : 480 : BV:32
=dst_symbol_addr.2
1 : 129936 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 129948 ) -> 41, ( 496 ) -> 10, ( 484 ) -> 1, ( 492 ) -> 41, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 129948 ) -> 41, ( 496 ) -> 10, ( 484 ) -> 1, ( 492 ) -> 41, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 128479 : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=input.dst.mem
1 : (( 129948 ) -> 41, ( 496 ) -> 10, ( 484 ) -> 1, ( 492 ) -> 41, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 257935 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 129936 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 258048 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 480 : BV:32
=unaliased_memslot.1
1 : 10 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 41 : BV:32
=unaliased_memslot.4
1 : 41 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
444298960
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 480 : BV:32
=symbol.2
1 : 129936 : BV:32
=dst_symbol_addr.1
1 : 480 : BV:32
=dst_symbol_addr.2
1 : 129936 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 129948 ) -> 41, ( 496 ) -> 10, ( 484 ) -> 1, ( 492 ) -> 41, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 129948 ) -> 41, ( 496 ) -> 10, ( 484 ) -> 1, ( 492 ) -> 41, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 128479 : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=input.dst.mem
1 : (( 129948 ) -> 41, ( 496 ) -> 10, ( 484 ) -> 1, ( 492 ) -> 41, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 257935 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 129936 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 258048 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 480 : BV:32
=unaliased_memslot.1
1 : 10 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 41 : BV:32
=unaliased_memslot.4
1 : 41 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
444298960
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 87
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 2081374208 : BV:32
=symbol.2
1 : 3359345424 { -935621872 } : BV:32
=dst_symbol_addr.1
1 : 2081374208 : BV:32
=dst_symbol_addr.2
1 : 3359345424 { -935621872 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1480359932 : BV:32
=input.src.llvm-mem
1 : (( 3359345436 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3359345436 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2081502207 : BV:32
=stack.size
1 : 1143341056 : BV:32
=input.dst.mem
1 : (( 3359345436 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3359473423 { -935493873 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3359345424 { -935621872 } : BV:32
=memlabel-mem-esp_end
1 : 1480359935 : BV:32
=memlabel-mem-esp_begin
1 : 337018880 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2081374208 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 32 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
791018654
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1480359932 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 2081374208 : BV:32
=symbol.2
1 : 3359345424 { -935621872 } : BV:32
=dst_symbol_addr.1
1 : 2081374208 : BV:32
=dst_symbol_addr.2
1 : 3359345424 { -935621872 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1480359932 : BV:32
=input.src.llvm-mem
1 : (( 3359345436 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1480359932 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 3359345436 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2081502207 : BV:32
=stack.size
1 : 1143341056 : BV:32
=input.dst.mem
1 : (( 3359345436 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3359473423 { -935493873 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3359345424 { -935621872 } : BV:32
=memlabel-mem-esp_end
1 : 1480359935 : BV:32
=memlabel-mem-esp_begin
1 : 337018880 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2081374208 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 32 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
791018654
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 88
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1426066432 : BV:32
=symbol.2
1 : 1962806288 : BV:32
=dst_symbol_addr.1
1 : 1426066432 : BV:32
=dst_symbol_addr.2
1 : 1962806288 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1426066436 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1426066436 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1426194431 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 1426066436 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1962934287 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1962806288 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1426066432 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
404765852
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 1426066432 : BV:32
=symbol.2
1 : 1962806288 : BV:32
=dst_symbol_addr.1
1 : 1426066432 : BV:32
=dst_symbol_addr.2
1 : 1962806288 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1426066436 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 1426066436 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1426194431 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.mem
1 : (( 1426066436 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1962934287 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1962806288 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1426066432 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
404765852
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 89
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 66978896 : BV:32
=symbol.2
1 : 2156028928 { -2138938368 } : BV:32
=dst_symbol_addr.1
1 : 66978896 : BV:32
=dst_symbol_addr.2
1 : 2156028928 { -2138938368 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286578684 { -8388612 } : BV:32
=input.src.llvm-mem
1 : (( 66978908 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 66978908 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 67106895 : BV:32
=stack.size
1 : 2057269248 : BV:32
=input.dst.mem
1 : (( 66978908 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2156156927 { -2138810369 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2156028928 { -2138938368 } : BV:32
=memlabel-mem-esp_end
1 : 4286578687 { -8388609 } : BV:32
=memlabel-mem-esp_begin
1 : 2229309440 { -2065657856 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 66978896 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 8 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
528743829
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286578684 { -8388612 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 66978896 : BV:32
=symbol.2
1 : 2156028928 { -2138938368 } : BV:32
=dst_symbol_addr.1
1 : 66978896 : BV:32
=dst_symbol_addr.2
1 : 2156028928 { -2138938368 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286578684 { -8388612 } : BV:32
=input.src.llvm-mem
1 : (( 66978908 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286578684 { -8388612 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 66978908 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 67106895 : BV:32
=stack.size
1 : 2057269248 : BV:32
=input.dst.mem
1 : (( 66978908 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2156156927 { -2138810369 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2156028928 { -2138938368 } : BV:32
=memlabel-mem-esp_end
1 : 4286578687 { -8388609 } : BV:32
=memlabel-mem-esp_begin
1 : 2229309440 { -2065657856 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 66978896 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 8 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
528743829
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 90
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 67129248 : BV:32
=symbol.2
1 : 33423376 : BV:32
=dst_symbol_addr.1
1 : 67129248 : BV:32
=dst_symbol_addr.2
1 : 33423376 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294443004 { -524292 } : BV:32
=input.src.llvm-mem
1 : (( 33423376 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33423376 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 67257247 : BV:32
=stack.size
1 : 4213719040 { -81248256 } : BV:32
=input.dst.mem
1 : (( 33423376 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33551375 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33423376 : BV:32
=memlabel-mem-esp_end
1 : 4294443007 { -524289 } : BV:32
=memlabel-mem-esp_begin
1 : 80723968 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 67129248 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
249524594
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294443004 { -524292 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 67129248 : BV:32
=symbol.2
1 : 33423376 : BV:32
=dst_symbol_addr.1
1 : 67129248 : BV:32
=dst_symbol_addr.2
1 : 33423376 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294443004 { -524292 } : BV:32
=input.src.llvm-mem
1 : (( 33423376 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294443004 { -524292 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 33423376 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 67257247 : BV:32
=stack.size
1 : 4213719040 { -81248256 } : BV:32
=input.dst.mem
1 : (( 33423376 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 33551375 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33423376 : BV:32
=memlabel-mem-esp_end
1 : 4294443007 { -524289 } : BV:32
=memlabel-mem-esp_begin
1 : 80723968 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 67129248 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
249524594
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 91
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3245222912 { -1049744384 } : BV:32
=symbol.2
1 : 3250469904 { -1044497392 } : BV:32
=dst_symbol_addr.1
1 : 3245222912 { -1049744384 } : BV:32
=dst_symbol_addr.2
1 : 3250469904 { -1044497392 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3244830716 { -1050136580 } : BV:32
=input.src.llvm-mem
1 : (( 3250469916 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3250469916 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3245350911 { -1049616385 } : BV:32
=stack.size
1 : 3233034240 { -1061933056 } : BV:32
=input.dst.mem
1 : (( 3250469916 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3250597903 { -1044369393 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3250469904 { -1044497392 } : BV:32
=memlabel-mem-esp_end
1 : 3244830719 { -1050136577 } : BV:32
=memlabel-mem-esp_begin
1 : 11796480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3245222912 { -1049744384 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
712828258
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3244830716 { -1050136580 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3245222912 { -1049744384 } : BV:32
=symbol.2
1 : 3250469904 { -1044497392 } : BV:32
=dst_symbol_addr.1
1 : 3245222912 { -1049744384 } : BV:32
=dst_symbol_addr.2
1 : 3250469904 { -1044497392 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3244830716 { -1050136580 } : BV:32
=input.src.llvm-mem
1 : (( 3250469916 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3244830716 { -1050136580 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 3250469916 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3245350911 { -1049616385 } : BV:32
=stack.size
1 : 3233034240 { -1061933056 } : BV:32
=input.dst.mem
1 : (( 3250469916 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3250597903 { -1044369393 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3250469904 { -1044497392 } : BV:32
=memlabel-mem-esp_end
1 : 3244830719 { -1050136577 } : BV:32
=memlabel-mem-esp_begin
1 : 11796480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3245222912 { -1049744384 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
712828258
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 92
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2138545657
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4291821564 { -3145732 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2138545657
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 93
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 64 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4164947964 { -130019332 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4227734544 { -67232752 } : BV:32
=symbol.2
1 : 4231928864 { -63038432 } : BV:32
=dst_symbol_addr.1
1 : 4227734544 { -67232752 } : BV:32
=dst_symbol_addr.2
1 : 4231928864 { -63038432 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4164947964 { -130019332 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4164947964 { -130019332 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4227862543 { -67104753 } : BV:32
=stack.size
1 : 4160872448 { -134094848 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 16 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4232056863 { -62910433 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4231928864 { -63038432 } : BV:32
=memlabel-mem-esp_end
1 : 4164947967 { -130019329 } : BV:32
=memlabel-mem-esp_begin
1 : 4075520 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4227734544 { -67232752 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
621582735
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 80 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4164947964 { -130019332 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 4227734544 { -67232752 } : BV:32
=symbol.2
1 : 4231928864 { -63038432 } : BV:32
=dst_symbol_addr.1
1 : 4227734544 { -67232752 } : BV:32
=dst_symbol_addr.2
1 : 4231928864 { -63038432 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4164947964 { -130019332 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4164947964 { -130019332 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 4231928940 { -63038356 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 76 : BV:32
=input.src.llvm-%add
1 : 20 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 20 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 4227734624 { -67232672 } : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 80 : BV:32
=input.src.llvm-%arrayidx3
1 : 4227734620 { -67232676 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4227862543 { -67104753 } : BV:32
=input.src.llvm-%arrayidx
1 : 4227734624 { -67232672 } : BV:32
=input.src.llvm-%arrayidx1
1 : 4231928940 { -63038356 } : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 4160872448 { -134094848 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 4227734620 { -67232676 } : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 76 : BV:32
=input.src.llvm-%inc
1 : 20 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 80 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 20 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4232056863 { -62910433 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4231928864 { -63038432 } : BV:32
=memlabel-mem-esp_end
1 : 4164947967 { -130019329 } : BV:32
=memlabel-mem-esp_begin
1 : 4075520 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4227734544 { -67232752 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
621582735
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 94
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 128 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4227727356 { -67239940 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4259741408 { -35225888 } : BV:32
=symbol.2
1 : 4291297040 { -3670256 } : BV:32
=dst_symbol_addr.1
1 : 4259741408 { -35225888 } : BV:32
=dst_symbol_addr.2
1 : 4291297040 { -3670256 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4227727356 { -67239940 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4227727356 { -67239940 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 32 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4259869407 { -35097889 } : BV:32
=stack.size
1 : 4227727360 { -67239936 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 32 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4291425039 { -3542257 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4291297040 { -3670256 } : BV:32
=memlabel-mem-esp_end
1 : 4227727359 { -67239937 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4259741408 { -35225888 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2123967051
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 144 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4227727356 { -67239940 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 4259741408 { -35225888 } : BV:32
=symbol.2
1 : 4291297040 { -3670256 } : BV:32
=dst_symbol_addr.1
1 : 4259741408 { -35225888 } : BV:32
=dst_symbol_addr.2
1 : 4291297040 { -3670256 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4227727356 { -67239940 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4227727356 { -67239940 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 4291297180 { -3670116 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 140 : BV:32
=input.src.llvm-%add
1 : 36 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 36 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 4259741552 { -35225744 } : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 144 : BV:32
=input.src.llvm-%arrayidx3
1 : 4259741548 { -35225748 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4259869407 { -35097889 } : BV:32
=input.src.llvm-%arrayidx
1 : 4259741552 { -35225744 } : BV:32
=input.src.llvm-%arrayidx1
1 : 4291297180 { -3670116 } : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 4227727360 { -67239936 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 4259741548 { -35225748 } : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 140 : BV:32
=input.src.llvm-%inc
1 : 36 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 144 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 36 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4291425039 { -3542257 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4291297040 { -3670256 } : BV:32
=memlabel-mem-esp_end
1 : 4227727359 { -67239937 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4259741408 { -35225888 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2123967051
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 95
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 256 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 285208572 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 395250688 : BV:32
=symbol.2
1 : 939405568 : BV:32
=dst_symbol_addr.1
1 : 395250688 : BV:32
=dst_symbol_addr.2
1 : 939405568 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 285208572 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 285208572 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 64 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 395378687 : BV:32
=stack.size
1 : 15724544 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 64 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 939533567 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 939405568 : BV:32
=memlabel-mem-esp_end
1 : 285208575 : BV:32
=memlabel-mem-esp_begin
1 : 269484032 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 395250688 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
602536681
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 272 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 285208572 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 395250688 : BV:32
=symbol.2
1 : 939405568 : BV:32
=dst_symbol_addr.1
1 : 395250688 : BV:32
=dst_symbol_addr.2
1 : 939405568 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 285208572 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 285208572 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 939405836 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 268 : BV:32
=input.src.llvm-%add
1 : 68 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 68 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 395250960 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 272 : BV:32
=input.src.llvm-%arrayidx3
1 : 395250956 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 395378687 : BV:32
=input.src.llvm-%arrayidx
1 : 395250960 : BV:32
=input.src.llvm-%arrayidx1
1 : 939405836 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 15724544 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 395250956 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 268 : BV:32
=input.src.llvm-%inc
1 : 68 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 272 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 68 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 939533567 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 939405568 : BV:32
=memlabel-mem-esp_end
1 : 285208575 : BV:32
=memlabel-mem-esp_begin
1 : 269484032 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 395250688 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
602536681
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 96
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 512 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1073283068 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1073284096 : BV:32
=symbol.2
1 : 1073547136 : BV:32
=dst_symbol_addr.1
1 : 1073284096 : BV:32
=dst_symbol_addr.2
1 : 1073547136 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073283068 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1073283068 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 128 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1073412095 : BV:32
=stack.size
1 : 8192 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 128 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1073675135 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1073547136 : BV:32
=memlabel-mem-esp_end
1 : 1073283071 : BV:32
=memlabel-mem-esp_begin
1 : 1073274880 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073284096 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1306954032
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 528 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1073283068 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 1073284096 : BV:32
=symbol.2
1 : 1073547136 : BV:32
=dst_symbol_addr.1
1 : 1073284096 : BV:32
=dst_symbol_addr.2
1 : 1073547136 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073283068 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1073283068 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 1073547660 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 524 : BV:32
=input.src.llvm-%add
1 : 132 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 132 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 1073284624 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 528 : BV:32
=input.src.llvm-%arrayidx3
1 : 1073284620 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1073412095 : BV:32
=input.src.llvm-%arrayidx
1 : 1073284624 : BV:32
=input.src.llvm-%arrayidx1
1 : 1073547660 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 8192 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 1073284620 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 524 : BV:32
=input.src.llvm-%inc
1 : 132 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 528 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 132 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1073675135 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1073547136 : BV:32
=memlabel-mem-esp_end
1 : 1073283071 : BV:32
=memlabel-mem-esp_begin
1 : 1073274880 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073284096 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1306954032
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 97
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 1024 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 603058172 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 2146437648 : BV:32
=symbol.2
1 : 4290715648 { -4251648 } : BV:32
=dst_symbol_addr.1
1 : 2146437648 : BV:32
=dst_symbol_addr.2
1 : 4290715648 { -4251648 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 603058172 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 603058172 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 256 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2146565647 : BV:32
=stack.size
1 : 69218304 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 256 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4290843647 { -4123649 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4290715648 { -4251648 } : BV:32
=memlabel-mem-esp_end
1 : 603058175 : BV:32
=memlabel-mem-esp_begin
1 : 533839872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2146437648 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1826785426
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 1040 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 603058172 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 2146437648 : BV:32
=symbol.2
1 : 4290715648 { -4251648 } : BV:32
=dst_symbol_addr.1
1 : 2146437648 : BV:32
=dst_symbol_addr.2
1 : 4290715648 { -4251648 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 603058172 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 603058172 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 4290716684 { -4250612 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 1036 : BV:32
=input.src.llvm-%add
1 : 260 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 260 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 2146438688 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 1040 : BV:32
=input.src.llvm-%arrayidx3
1 : 2146438684 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2146565647 : BV:32
=input.src.llvm-%arrayidx
1 : 2146438688 : BV:32
=input.src.llvm-%arrayidx1
1 : 4290716684 { -4250612 } : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 69218304 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 2146438684 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 1036 : BV:32
=input.src.llvm-%inc
1 : 260 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 1040 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 260 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4290843647 { -4123649 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4290715648 { -4251648 } : BV:32
=memlabel-mem-esp_end
1 : 603058175 : BV:32
=memlabel-mem-esp_begin
1 : 533839872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2146437648 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1826785426
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 98
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 2048 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4290768892 { -4198404 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4293916656 { -1050640 } : BV:32
=symbol.2
1 : 4290772208 { -4195088 } : BV:32
=dst_symbol_addr.1
1 : 4293916656 { -1050640 } : BV:32
=dst_symbol_addr.2
1 : 4290772208 { -4195088 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4290768892 { -4198404 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4290768892 { -4198404 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 512 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294044655 { -922641 } : BV:32
=stack.size
1 : 4290768896 { -4198400 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 512 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4290900207 { -4067089 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4290772208 { -4195088 } : BV:32
=memlabel-mem-esp_end
1 : 4290768895 { -4198401 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4293916656 { -1050640 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1990383233
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 2064 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4290768892 { -4198404 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 4293916656 { -1050640 } : BV:32
=symbol.2
1 : 4290772208 { -4195088 } : BV:32
=dst_symbol_addr.1
1 : 4293916656 { -1050640 } : BV:32
=dst_symbol_addr.2
1 : 4290772208 { -4195088 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4290768892 { -4198404 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4290768892 { -4198404 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 4290774268 { -4193028 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 2060 : BV:32
=input.src.llvm-%add
1 : 516 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 516 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 4293918720 { -1048576 } : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 2064 : BV:32
=input.src.llvm-%arrayidx3
1 : 4293918716 { -1048580 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294044655 { -922641 } : BV:32
=input.src.llvm-%arrayidx
1 : 4293918720 { -1048576 } : BV:32
=input.src.llvm-%arrayidx1
1 : 4290774268 { -4193028 } : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 4290768896 { -4198400 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 4293918716 { -1048580 } : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 2060 : BV:32
=input.src.llvm-%inc
1 : 516 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 2064 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 516 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4290900207 { -4067089 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4290772208 { -4195088 } : BV:32
=memlabel-mem-esp_end
1 : 4290768895 { -4198401 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4293916656 { -1050640 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1990383233
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 99
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4096 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4293914620 { -1052676 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4293917696 { -1049600 } : BV:32
=symbol.2
1 : 4294483456 { -483840 } : BV:32
=dst_symbol_addr.1
1 : 4293917696 { -1049600 } : BV:32
=dst_symbol_addr.2
1 : 4294483456 { -483840 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4293914620 { -1052676 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4293914620 { -1052676 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1024 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294045695 { -921601 } : BV:32
=stack.size
1 : 4293914624 { -1052672 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 1024 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294611455 { -355841 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294483456 { -483840 } : BV:32
=memlabel-mem-esp_end
1 : 4293914623 { -1052673 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4293917696 { -1049600 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
736480879
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4112 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4293914620 { -1052676 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 4293917696 { -1049600 } : BV:32
=symbol.2
1 : 4294483456 { -483840 } : BV:32
=dst_symbol_addr.1
1 : 4293917696 { -1049600 } : BV:32
=dst_symbol_addr.2
1 : 4294483456 { -483840 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4293914620 { -1052676 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4293914620 { -1052676 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 4294487564 { -479732 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 4108 : BV:32
=input.src.llvm-%add
1 : 1028 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1028 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 4293921808 { -1045488 } : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 4112 : BV:32
=input.src.llvm-%arrayidx3
1 : 4293921804 { -1045492 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294045695 { -921601 } : BV:32
=input.src.llvm-%arrayidx
1 : 4293921808 { -1045488 } : BV:32
=input.src.llvm-%arrayidx1
1 : 4294487564 { -479732 } : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 4293914624 { -1052672 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 4293921804 { -1045492 } : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 4108 : BV:32
=input.src.llvm-%inc
1 : 1028 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 4112 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1028 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294611455 { -355841 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294483456 { -483840 } : BV:32
=memlabel-mem-esp_end
1 : 4293914623 { -1052673 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4293917696 { -1049600 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
736480879
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 100
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 8192 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1576792060 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 2113536256 : BV:32
=symbol.2
1 : 4261347328 { -33619968 } : BV:32
=dst_symbol_addr.1
1 : 2113536256 : BV:32
=dst_symbol_addr.2
1 : 4261347328 { -33619968 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1576792060 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1576792060 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2048 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2113664255 : BV:32
=stack.size
1 : 553652224 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 2048 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4261475327 { -33491969 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4261347328 { -33619968 } : BV:32
=memlabel-mem-esp_end
1 : 1576792063 : BV:32
=memlabel-mem-esp_begin
1 : 1023139840 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2113536256 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1602262766
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 8208 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1576792060 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 2113536256 : BV:32
=symbol.2
1 : 4261347328 { -33619968 } : BV:32
=dst_symbol_addr.1
1 : 2113536256 : BV:32
=dst_symbol_addr.2
1 : 4261347328 { -33619968 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1576792060 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1576792060 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 4261355532 { -33611764 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 8204 : BV:32
=input.src.llvm-%add
1 : 2052 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2052 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 2113544464 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 8208 : BV:32
=input.src.llvm-%arrayidx3
1 : 2113544460 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2113664255 : BV:32
=input.src.llvm-%arrayidx
1 : 2113544464 : BV:32
=input.src.llvm-%arrayidx1
1 : 4261355532 { -33611764 } : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 553652224 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 2113544460 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 8204 : BV:32
=input.src.llvm-%inc
1 : 2052 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 8208 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 2052 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4261475327 { -33491969 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4261347328 { -33619968 } : BV:32
=memlabel-mem-esp_end
1 : 1576792063 : BV:32
=memlabel-mem-esp_begin
1 : 1023139840 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2113536256 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1602262766
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 101
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16384 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2013265916 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 2080140800 : BV:32
=symbol.2
1 : 4294444288 { -523008 } : BV:32
=dst_symbol_addr.1
1 : 2080140800 : BV:32
=dst_symbol_addr.2
1 : 4294444288 { -523008 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2013265916 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2013265916 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4096 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2080268799 : BV:32
=stack.size
1 : 75620352 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 4096 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294572287 { -395009 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294444288 { -523008 } : BV:32
=memlabel-mem-esp_end
1 : 2013265919 : BV:32
=memlabel-mem-esp_begin
1 : 1937645568 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2080140800 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1829715400
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16400 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2013265916 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 2080140800 : BV:32
=symbol.2
1 : 4294444288 { -523008 } : BV:32
=dst_symbol_addr.1
1 : 2080140800 : BV:32
=dst_symbol_addr.2
1 : 4294444288 { -523008 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2013265916 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2013265916 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 4294460684 { -506612 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 16396 : BV:32
=input.src.llvm-%add
1 : 4100 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4100 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 2080157200 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 16400 : BV:32
=input.src.llvm-%arrayidx3
1 : 2080157196 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2080268799 : BV:32
=input.src.llvm-%arrayidx
1 : 2080157200 : BV:32
=input.src.llvm-%arrayidx1
1 : 4294460684 { -506612 } : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 75620352 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 2080157196 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 16396 : BV:32
=input.src.llvm-%inc
1 : 4100 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 16400 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4100 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294572287 { -395009 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294444288 { -523008 } : BV:32
=memlabel-mem-esp_end
1 : 2013265919 : BV:32
=memlabel-mem-esp_begin
1 : 1937645568 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2080140800 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1829715400
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 102
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 32768 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3248852988 { -1046114308 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 2147450848 : BV:32
=symbol.2
1 : 805175424 : BV:32
=dst_symbol_addr.1
1 : 2147450848 : BV:32
=dst_symbol_addr.2
1 : 805175424 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3248852988 { -1046114308 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3248852988 { -1046114308 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8192 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2147578847 { -2147388449 } : BV:32
=stack.size
1 : 806187008 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 8192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 805303423 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 805175424 : BV:32
=memlabel-mem-esp_end
1 : 3248852991 { -1046114305 } : BV:32
=memlabel-mem-esp_begin
1 : 2442665984 { -1852301312 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147450848 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1868680459
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32784 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3248852988 { -1046114308 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 2147450848 : BV:32
=symbol.2
1 : 805175424 : BV:32
=dst_symbol_addr.1
1 : 2147450848 : BV:32
=dst_symbol_addr.2
1 : 805175424 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3248852988 { -1046114308 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3248852988 { -1046114308 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 805208204 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 32780 : BV:32
=input.src.llvm-%add
1 : 8196 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8196 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 2147483632 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 32784 : BV:32
=input.src.llvm-%arrayidx3
1 : 2147483628 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2147578847 { -2147388449 } : BV:32
=input.src.llvm-%arrayidx
1 : 2147483632 : BV:32
=input.src.llvm-%arrayidx1
1 : 805208204 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 806187008 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 2147483628 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 32780 : BV:32
=input.src.llvm-%inc
1 : 8196 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 32784 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8196 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 805303423 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 805175424 : BV:32
=memlabel-mem-esp_end
1 : 3248852991 { -1046114305 } : BV:32
=memlabel-mem-esp_begin
1 : 2442665984 { -1852301312 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147450848 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1868680459
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 103
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 65536 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 73724 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 2147429504 : BV:32
=symbol.2
1 : 3220580352 { -1074386944 } : BV:32
=dst_symbol_addr.1
1 : 2147429504 : BV:32
=dst_symbol_addr.2
1 : 3220580352 { -1074386944 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 73724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 73724 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16384 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2147557503 { -2147409793 } : BV:32
=stack.size
1 : 73728 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 16384 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3220708351 { -1074258945 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3220580352 { -1074386944 } : BV:32
=memlabel-mem-esp_end
1 : 73727 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147429504 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1783122045
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s121.0 : MEMLABEL
14 : 1 : BV:32
15 : bvadd(8, 14) : BV:32
16 : bvmul(15, 9) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 13, 18, 19, 20) : BV:32
22 : mlvar.llvm.s121.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 11) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 12, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s121.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(1, 2, 14, 15, 16) : BV:32
18 : mlvar.llvm.s121.1 : MEMLABEL
19 : symbol.2 : BV:32
20 : bvmul(8, 11) : BV:32
21 : bvadd(7, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : select(1, 18, 22, 15, 16) : BV:32
24 : bvadd(17, 23) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%add
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %add = add nsw i32 %i.0, 1, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add, !dbg !24)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !24*  %0 = load i32, i32* %arrayidx, align 4, !dbg !24)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add2 = add nsw i32 %0, %1, !dbg !26)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !27)))*((((  store i32 %add2, i32* %arrayidx3, align 4, !dbg !28*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*  br label %for.inc, !dbg !29)*(((  %inc = add nsw i32 %i.0, 1, !dbg !30*  br label %for.cond, !dbg !31, !llvm.loop !32)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !31, !llvm.loop !32))*(  br label %for.cond, !dbg !31, !llvm.loop !32*  br label %for.cond, !dbg !31, !llvm.loop !32)))))
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 31999 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 31999, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : 4 : BV:64
22 : bvextract(21, 9, 10) : BV:32
23 : bvadd(15, 22) : BV:32
24 : bvadd(3, 23) : BV:32
25 : 16 : INT
26 : 0 : BOOL
27 : select(1, 20, 24, 25, 26) : BV:128
28 : 127 : INT
29 : 96 : INT
30 : bvextract(27, 28, 29) : BV:32
31 : mlvar.dst.1 : MEMLABEL
32 : dst_symbol_addr.2 : BV:32
33 : bvadd(3, 32) : BV:32
34 : select(1, 31, 33, 25, 26) : BV:128
35 : bvextract(34, 28, 29) : BV:32
36 : bvadd(30, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(27, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(27, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvextract(27, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : store(1, 2, 19, 52, 25, 26) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127984 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127984 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127984 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 4 : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 16 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:128
17 : 127 : INT
18 : 96 : INT
19 : bvextract(16, 17, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.2 : BV:32
22 : bvadd(3, 21) : BV:32
23 : select(1, 20, 22, 14, 15) : BV:128
24 : bvextract(23, 17, 18) : BV:32
25 : bvadd(19, 24) : BV:32
26 : 95 : INT
27 : 64 : INT
28 : bvextract(16, 26, 27) : BV:32
29 : bvextract(23, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : 63 : INT
33 : 32 : INT
34 : bvextract(16, 32, 33) : BV:32
35 : bvextract(23, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvextract(16, 6, 7) : BV:32
38 : bvextract(23, 6, 7) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(36, 39) : BV:64
41 : bvconcat(31, 40) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127984 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 65552 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 73724 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 2147429504 : BV:32
=symbol.2
1 : 3220580352 { -1074386944 } : BV:32
=dst_symbol_addr.1
1 : 2147429504 : BV:32
=dst_symbol_addr.2
1 : 3220580352 { -1074386944 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 73724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 73724 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.3.total_offset
1 : 3220645900 { -1074321396 } : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.2.total_offset
1 : 65548 : BV:32
=input.src.llvm-%add
1 : 16388 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16388 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.3.total_offset
1 : 2147495056 { -2147472240 } : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.gepoffset.2.total_offset
1 : 65552 : BV:32
=input.src.llvm-%arrayidx3
1 : 2147495052 { -2147472244 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2147557503 { -2147409793 } : BV:32
=input.src.llvm-%arrayidx
1 : 2147495056 { -2147472240 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3220645900 { -1074321396 } : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=stack.size
1 : 73728 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%add2
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.3.total_offset
1 : 2147495052 { -2147472244 } : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.gepoffset.2.total_offset
1 : 65548 : BV:32
=input.src.llvm-%inc
1 : 16388 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d180ffd636653572515881cebb1c4efa.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%7613b8fbb2aee1c34337f42181a4da5.intermediate.gepoffset.2.offset
1 : 65552 : BV:32
=input.src.llvm-%f2a25a925c51a68fd489b5aa925fad7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 16388 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3220708351 { -1074258945 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3220580352 { -1074386944 } : BV:32
=memlabel-mem-esp_end
1 : 73727 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147429504 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1783122045
=counter_example_end
=graph_with_ce done
=graph_with_guessing begin
=Invariant states
=Invariant state at node L0%0%1_L0%0%1:
=pc L0%0%1_L0%0%1 invariant_state
is_top 0
is_stable 1
=pc L0%0%1_L0%0%1 invariant_state done
=Invariant state at node Lfor.body%1%1_L1%1%0:
=pc Lfor.body%1%1_L1%1%0 invariant_state
is_top 0
is_stable 1
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr expr_group_type ARR_EQ
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr expr 1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr pred 0
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BOOL
=RhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr predicate_set done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr_group_type BV_EQ
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 0
1 : symbol.1 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 1
1 : symbol.2 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 2
1 : retaddr_const : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 3
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 4
1 : input.src.llvm-%i.0 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 5
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(5, 4) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 7
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 8
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 31999 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 9
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 8 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 10
1 : input.src.llvm-%i.0 : BV:32
2 : 2 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 31999 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 11
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(5, 4) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 12
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 12 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 13
1 : input.src.llvm-%i.0 : BV:32
2 : 3 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 31999 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 14
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 8 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 15
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 16 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 16
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 12 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 17
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 31999 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 18
1 : input.dst.exreg.0.0 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 19
1 : input.dst.exreg.0.6 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 20
1 : input.dst.exreg.0.7 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 21
1 : input.dst.exreg.0.3 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 22
1 : input.dst.exreg.0.5 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 23
1 : input.dst.exreg.0.4 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 24
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127984 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 25
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 26
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127984 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 27
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 28
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127992 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 29
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127992 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 30
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 127996 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 31
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 32
1 : input.dst.esp.L0%1%1 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 0
=Comment
linear2-32-free_var_idx.32
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : input.dst.esp.L0%1%1 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.exreg.0.4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 1
=Comment
linear2-32-free_var_idx.18
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=RhsExpr
1 : input.dst.exreg.0.0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 2
=Comment
linear2-32-free_var_idx.17
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%cmp : BOOL
3 : bool_to_bv(2) : BV:1
4 : bvconcat(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 31999 : BV:32
9 : bvslt(7, 8) : BOOL
10 : bool_to_bv(9) : BV:1
11 : bvconcat(1, 10) : BV:32
12 : bvneg(11) : BV:32
13 : bvadd(4, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 3
=Comment
linear2-32-free_var_idx.8
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31999 : BV:32
6 : bvslt(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(1, 7) : BV:32
9 : bvneg(8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(1, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 4
=Comment
linear4-12-free_var_idx.23
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 4092 { -4 } : BV:12
2 : symbol.1 : BV:32
3 : 11 : INT
4 : 0 : INT
5 : bvextract(2, 3, 4) : BV:12
6 : 256 : BV:12
7 : bvmul(5, 6) : BV:12
8 : symbol.2 : BV:32
9 : bvextract(8, 3, 4) : BV:12
10 : 3584 { -512 } : BV:12
11 : bvmul(9, 10) : BV:12
12 : 2048 { -2048 } : BV:12
13 : input.src.llvm-%i.0 : BV:32
14 : bvextract(13, 3, 4) : BV:12
15 : bvmul(12, 14) : BV:12
16 : bvadd(1, 7, 11, 15) : BV:12
=RhsExpr
1 : input.dst.exreg.0.4 : BV:32
2 : 11 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:12
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 5
=Comment
linear2-32-free_var_idx.10
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%i.0 : BV:32
3 : 2 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31999 : BV:32
6 : bvslt(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(1, 7) : BV:32
9 : bvneg(8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(1, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 6
=Comment
linear2-32-free_var_idx.5
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : input.src.llvm-%i.0.phi.tmpvar : BV:32
3 : bvneg(2) : BV:32
4 : bvadd(1, 3) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 7
=Comment
linear2-32-free_var_idx.13
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%i.0 : BV:32
3 : 3 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31999 : BV:32
6 : bvslt(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(1, 7) : BV:32
9 : bvneg(8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(1, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 8
=Comment
linear1-2-free_var_idx.4
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:2
5 : bvneg(4) : BV:2
=RhsExpr
1 : 0 : BV:2
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 9
=Comment
linear2-32-free_var_idx.31
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 10
=Comment
linear1-32-free_var_idx.3
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BV:32
2 : 0 : BV:31
3 : input.src.llvm-%cmp : BOOL
4 : bool_to_bv(3) : BV:1
5 : bvconcat(2, 4) : BV:32
6 : bvneg(5) : BV:32
7 : bvadd(1, 6) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 11
=Comment
linear2-4-free_var_idx.1
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : 3 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:4
5 : bvneg(4) : BV:4
6 : 4 : BV:4
7 : input.src.llvm-%i.0 : BV:32
8 : bvextract(7, 2, 3) : BV:4
9 : bvmul(6, 8) : BV:4
10 : bvadd(5, 9) : BV:4
=RhsExpr
1 : 0 : BV:4
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 12
=Comment
linear2-4-free_var_idx.0
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : 3 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:4
5 : bvneg(4) : BV:4
6 : symbol.2 : BV:32
7 : bvextract(6, 2, 3) : BV:4
8 : 10 { -6 } : BV:4
9 : bvmul(7, 8) : BV:4
10 : bvadd(5, 9) : BV:4
=RhsExpr
1 : 0 : BV:4
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv predicate_set done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose expr_group_type BV_INEQ
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose expr 0
1 : input.src.llvm-%i.0 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose pred 0
=Comment
ub-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 32768 : BV:32
3 : bvsle(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose pred 1
=Comment
ub-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 32768 : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose pred 2
=Comment
lb-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose predicate_set done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose expr_group_type BV_INEQ
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose expr 0
1 : input.dst.exreg.0.0 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose pred 0
=Comment
ub-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 131072 : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose pred 1
=Comment
ub-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 131072 : BV:32
3 : bvsle(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose pred 2
=Comment
lb-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose predicate_set done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr_group_type HOUDINI
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 0
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 1
1 : dst_symbol_addr.2 : BV:32
2 : 127984 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 2
1 : dst_symbol_addr.1 : BV:32
2 : 127984 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 3
1 : dst_symbol_addr.1 : BV:32
2 : 127988 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 4
1 : dst_symbol_addr.2 : BV:32
2 : 127988 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 5
1 : dst_symbol_addr.1 : BV:32
2 : 127996 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 6
1 : dst_symbol_addr.1 : BV:32
2 : 127992 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 7
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 8
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 8 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 9
1 : dst_symbol_addr.2 : BV:32
2 : 127992 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 10
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.2.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 11
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 8 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 12
1 : symbol.2 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.2.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 13
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 12 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 14
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 12 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 15
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 16 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 0
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 12 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 1
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 8 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 2
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : dst_symbol_addr.2 : BV:32
2 : 127992 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 3
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 8 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 4
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 16 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 5
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 6
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : dst_symbol_addr.1 : BV:32
2 : 127992 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 7
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : dst_symbol_addr.1 : BV:32
2 : 127996 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 8
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : dst_symbol_addr.2 : BV:32
2 : 127988 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 9
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.2.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 10
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : dst_symbol_addr.1 : BV:32
2 : 127988 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 11
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : dst_symbol_addr.1 : BV:32
2 : 127984 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 12
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.2.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 13
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : dst_symbol_addr.2 : BV:32
2 : 127984 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 14
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 12 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 15
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini predicate_set done
=pc Lfor.body%1%1_L1%1%0 invariant_state done
=Invariant state at node E0%0%1_E0%0%1:
=pc E0%0%1_E0%0%1 invariant_state
is_top 0
is_stable 1
=pc E0%0%1_E0%0%1 invariant_state done
=graph_with_guessing done
=corr_graph_done
