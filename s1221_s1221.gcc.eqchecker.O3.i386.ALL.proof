=FunctionName: s1221
=result: 1
=corr_graph s1221
=src_tfg
=TFG_LLVM llvm.s1221:
=TFG:
=Nodes: L0%0%1 Lfor.cond%1%0 Lfor.cond%2%1 Lfor.body%1%1 Lfor.end%1%1 E0%0%1
=Edges:
Lfor.end%1%1 => E0%0%1
Lfor.cond%2%1 => Lfor.body%1%1
Lfor.cond%2%1 => Lfor.end%1%1
L0%0%1 => Lfor.cond%1%0
Lfor.cond%1%0 => Lfor.cond%2%1
Lfor.body%1%1 => Lfor.cond%1%0
=graph done
=Node outputs: E0%0%1
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : retaddr_const : BV:32
=Output: symbol.1.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: symbol.2.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : 0 : BV:32
=Node outputs done for E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : b : 128000 : 16 : 0
C_SYMBOL2 : a : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=state_end

=Node assumes and asserts: L0%0%1
=L0%0%1 assume predicate_set done
=L0%0%1 assert predicate_set done
=Node assumes and asserts: Lfor.cond%1%0
=Lfor.cond%1%0 assume predicate_set done
=Lfor.cond%1%0 assert predicate_set done
=Node assumes and asserts: Lfor.cond%2%1
=Lfor.cond%2%1 assume predicate_set done
=Lfor.cond%2%1 assert predicate_set done
=Node assumes and asserts: Lfor.body%1%1
=Lfor.body%1%1 assume predicate_set done
=Lfor.body%1%1 assert predicate_set done
=Node assumes and asserts: Lfor.end%1%1
=Lfor.end%1%1 assume predicate_set done
=Lfor.end%1%1 assert predicate_set done
=Node assumes and asserts: E0%0%1
=E0%0%1 assume predicate_set done
=E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.llvm.s1221.0 : memlabel-mem-symbol.1.0
=memlabel_map.1
mlvar.llvm.s1221.1 : memlabel-mem-symbol.2.0
=memlabel_map.2
mlvar.llvm.s1221.2 : memlabel-mem-symbol.1.0
=Edge: Lfor.end%1%1 => E0%0%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:1:  ret i32 0, !dbg !32

=Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)

=Edge: Lfor.cond%2%1 => Lfor.end%1%1
=Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)

=Edge: L0%0%1 => Lfor.cond%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))

=Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)

=Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>Lentry%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%1=>Lentry%1%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100003=>Lentry%1%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100004=>Lentry%1%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100005=>Lentry%1%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100006=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%0=>Lfor.cond%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%0=>Lfor.cond%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%1=>Lfor.cond%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.cond%2%100003
1 : input.src.llvm-%cmp : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.cond%2%100005
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.body%1%1
1 : input.src.llvm-%cmp : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.end%1%1
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100003=>Lfor.cond%2%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100004=>Lfor.body%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100005=>Lfor.cond%2%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100006=>Lfor.end%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%1=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%1=>Lfor.body%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%2%1=>Lfor.body%2%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%2%100003=>Lfor.body%2%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%2%100004=>Lfor.body%2%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%2%100005=>Lfor.body%3%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%1=>Lfor.body%3%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%100003=>Lfor.body%4%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%4%1=>Lfor.body%4%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%4%100003=>Lfor.body%4%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%4%100004=>Lfor.body%4%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%4%100005=>Lfor.body%5%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%5%1=>Lfor.body%5%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%5%100003=>Lfor.body%6%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%6%1=>Lfor.body%7%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%1=>Lfor.body%7%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%100003=>Lfor.body%7%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%100004=>Lfor.body%7%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%100005=>Lfor.body%8%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%8%1=>Lfor.body%9%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%9%1=>Lfor.body%9%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%9%100003=>Lfor.body%9%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%9%100004=>Lfor.inc%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.end%1%1=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%1%1=>Lfor.inc%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%1=>Lfor.inc%2%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100003=>Lfor.inc%2%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100004=>Lfor.inc%2%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100005=>Lfor.inc%2%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100006=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>Lentry%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>Lfor.cond%1%0
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%1=>Lentry%1%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100003=>Lentry%1%100004
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100004=>Lentry%1%100005
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100005=>Lentry%1%100006
=src.llvm-%i.0
1 : 4 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100006=>Lfor.cond%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%0=>Lfor.cond%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%0=>Lfor.cond%2%1
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%1=>Lfor.cond%2%1
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.cond%2%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.cond%2%100005
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.body%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.end%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100003=>Lfor.cond%2%100004
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100004=>Lfor.body%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100005=>Lfor.cond%2%100006
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100006=>Lfor.end%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%1=>Lfor.cond%1%0
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4294967280 { -16 } : BV:32
9 : bvadd(3, 6, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(1, 2, 9, 10, 11) : BV:32
13 : memlabel-mem-symbol.2.0 : MEMLABEL
14 : symbol.2 : BV:32
15 : bvadd(14, 6) : BV:32
16 : select(1, 13, 15, 10, 11) : BV:32
17 : bvadd(12, 16) : BV:32
18 : store(1, 2, 7, 17, 10, 11) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(1, 2) : BV:32
4 : 4294967280 { -16 } : BV:32
5 : bvadd(3, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 4294967280 { -16 } : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(1, 2) : BV:32
4 : 4294967280 { -16 } : BV:32
5 : bvadd(3, 4) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967292 { -4 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 4294967280 { -16 } : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : memlabel-mem-symbol.2.0 : MEMLABEL
13 : symbol.2 : BV:32
14 : bvadd(13, 6) : BV:32
15 : select(1, 12, 14, 9, 10) : BV:32
16 : bvadd(11, 15) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%1=>Lfor.body%2%1
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967292 { -4 } : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%2%1=>Lfor.body%2%100003
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%2%100003=>Lfor.body%2%100004
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 4 : BV:32
2 : input.src.llvm-%sub : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 4 : BV:32
2 : input.src.llvm-%sub : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%2%100004=>Lfor.body%2%100005
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%2%100005=>Lfor.body%3%1
=src.llvm-%arrayidx
1 : input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%1=>Lfor.body%3%100003
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%arrayidx : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%100003=>Lfor.body%4%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%4%1=>Lfor.body%4%100003
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%4%100003=>Lfor.body%4%100004
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%4%100004=>Lfor.body%4%100005
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%4%100005=>Lfor.body%5%1
=src.llvm-%arrayidx1
1 : input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%5%1=>Lfor.body%5%100003
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : input.src.llvm-%arrayidx1 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%5%100003=>Lfor.body%6%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%6%1=>Lfor.body%7%1
=src.llvm-%add
1 : input.src.llvm-%0 : BV:32
2 : input.src.llvm-%1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%1=>Lfor.body%7%100003
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%100003=>Lfor.body%7%100004
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%100004=>Lfor.body%7%100005
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%100005=>Lfor.body%8%1
=src.llvm-%arrayidx2
1 : input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%8%1=>Lfor.body%9%1
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset : BV:32
4 : input.src.llvm-%add : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%9%1=>Lfor.body%9%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%9%100003=>Lfor.body%9%100004
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%9%100004=>Lfor.inc%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.end%1%1=>E0%0%1
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%1%1=>Lfor.inc%2%1
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%1=>Lfor.inc%2%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100003=>Lfor.inc%2%100004
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%inc : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100004=>Lfor.inc%2%100005
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100005=>Lfor.inc%2%100006
=src.llvm-%i.0
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100006=>Lfor.cond%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lentry%1%1
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lentry%1%1 done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%1=>Lentry%1%100003
=graph_with_simplified_assets.simplified_assumes at Lentry%1%1=>Lentry%1%100003 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100003=>Lentry%1%100004
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100003=>Lentry%1%100004 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100004=>Lentry%1%100005
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100004=>Lentry%1%100005 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100005=>Lentry%1%100006
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100005=>Lentry%1%100006 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%1=>Lfor.cond%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%1=>Lfor.cond%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.body%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.body%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.end%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.end%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100003=>Lfor.cond%2%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100003=>Lfor.cond%2%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100004=>Lfor.body%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100004=>Lfor.body%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100005=>Lfor.cond%2%100006
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100005=>Lfor.cond%2%100006 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100006=>Lfor.end%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100006=>Lfor.end%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 0
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : bvadd(4, 5) : BV:32
8 : isgepoffset(6, 7) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 2
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : islangaligned(6, 7) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 3
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 4
1 : symbol.2 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 5
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 6
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 7
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : islangaligned(5, 6) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 8
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 9
1 : symbol.2 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : islangaligned(5, 6) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 10
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4294967292 { -4 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : eq(1, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003 assume# 0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100003=>Lfor.body%2%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100003=>Lfor.body%2%100004 assume# 0
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%sub : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100003=>Lfor.body%2%100004 assume# 1
1 : 0 : BV:32
2 : input.src.llvm-%sub : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100003=>Lfor.body%2%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100004=>Lfor.body%2%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100004=>Lfor.body%2%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100005=>Lfor.body%3%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100005=>Lfor.body%3%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003 assume# 0
1 : input.src.llvm-%arrayidx : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100003=>Lfor.body%4%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100003=>Lfor.body%4%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%4%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%4%100003 assume# 0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%4%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%4%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%100003=>Lfor.body%4%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%100003=>Lfor.body%4%100004 assume# 0
1 : symbol.2 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%100003=>Lfor.body%4%100004 assume# 1
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%100003=>Lfor.body%4%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%100004=>Lfor.body%4%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%100004=>Lfor.body%4%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%100005=>Lfor.body%5%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%100005=>Lfor.body%5%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%5%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%5%100003 assume# 0
1 : input.src.llvm-%arrayidx1 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%5%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100003=>Lfor.body%6%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100003=>Lfor.body%6%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%1=>Lfor.body%7%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%1=>Lfor.body%7%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%7%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%7%100003 assume# 0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%7%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%7%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100003=>Lfor.body%7%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100003=>Lfor.body%7%100004 assume# 0
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100003=>Lfor.body%7%100004 assume# 1
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100003=>Lfor.body%7%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100004=>Lfor.body%7%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100004=>Lfor.body%7%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100005=>Lfor.body%8%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100005=>Lfor.body%8%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%8%1=>Lfor.body%9%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%8%1=>Lfor.body%9%1 assume# 0
1 : input.src.llvm-%arrayidx2 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%8%1=>Lfor.body%9%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%1=>Lfor.body%9%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%1=>Lfor.body%9%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%100003=>Lfor.body%9%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%100003=>Lfor.body%9%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%100004=>Lfor.inc%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%100004=>Lfor.inc%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%1=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%1=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%1%1=>Lfor.inc%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%1%1=>Lfor.inc%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%1=>Lfor.inc%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%1=>Lfor.inc%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100003=>Lfor.inc%2%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100003=>Lfor.inc%2%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100004=>Lfor.inc%2%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100004=>Lfor.inc%2%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100005=>Lfor.inc%2%100006
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100005=>Lfor.inc%2%100006 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lentry%1%1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lentry%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1025
1 : 4 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1026
1 : 4 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%1=>Lentry%1%100003
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%1=>Lentry%1%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004 for loc_id 1026
1 : 4 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100004=>Lentry%1%100005
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100004=>Lentry%1%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006 for loc_id 1025
1 : 4 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1 for loc_id 1023
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1 for loc_id 1023
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.body%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.body%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.end%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.end%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100003=>Lfor.cond%2%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100003=>Lfor.cond%2%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100004=>Lfor.body%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100004=>Lfor.body%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100005=>Lfor.cond%2%100006
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100005=>Lfor.cond%2%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100006=>Lfor.end%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100006=>Lfor.end%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1002
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 4294967280 { -16 } : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1003
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1004
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1005
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1006
1 : symbol.2 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1007
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1008
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1009
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 4294967280 { -16 } : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : memlabel-mem-symbol.2.0 : MEMLABEL
13 : symbol.2 : BV:32
14 : bvadd(13, 6) : BV:32
15 : select(1, 12, 14, 9, 10) : BV:32
16 : bvadd(11, 15) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1010
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1011
1 : symbol.2 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1012
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1013
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1014
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(1, 2) : BV:32
4 : 4294967280 { -16 } : BV:32
5 : bvadd(3, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1015
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1016
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1017
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(1, 2) : BV:32
4 : 4294967280 { -16 } : BV:32
5 : bvadd(3, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1018
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1019
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1020
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1021
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1022
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1025
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1026
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1027
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1028
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967292 { -4 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1034
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4294967280 { -16 } : BV:32
9 : bvadd(3, 6, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(1, 2, 9, 10, 11) : BV:32
13 : memlabel-mem-symbol.2.0 : MEMLABEL
14 : symbol.2 : BV:32
15 : bvadd(14, 6) : BV:32
16 : select(1, 13, 15, 10, 11) : BV:32
17 : bvadd(12, 16) : BV:32
18 : store(1, 2, 7, 17, 10, 11) : ARRAY[BV:32 -> BV:8]
19 : memmask(18, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%2%1 for loc_id 1028
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967292 { -4 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003 for loc_id 1013
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003 for loc_id 1016
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100003=>Lfor.body%2%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100003=>Lfor.body%2%100004 for loc_id 1014
1 : 4 : BV:32
2 : input.src.llvm-%sub : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100003=>Lfor.body%2%100004 for loc_id 1017
1 : 4 : BV:32
2 : input.src.llvm-%sub : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100003=>Lfor.body%2%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100004=>Lfor.body%2%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100004=>Lfor.body%2%100005 for loc_id 1015
1 : symbol.1 : BV:32
2 : input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100004=>Lfor.body%2%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100005=>Lfor.body%3%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100005=>Lfor.body%3%1 for loc_id 1010
1 : input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100005=>Lfor.body%3%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003 for loc_id 1002
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%arrayidx : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100003=>Lfor.body%4%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100003=>Lfor.body%4%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%4%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%4%100003 for loc_id 1004
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%4%100003 for loc_id 1007
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%4%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100003=>Lfor.body%4%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100003=>Lfor.body%4%100004 for loc_id 1005
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100003=>Lfor.body%4%100004 for loc_id 1008
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100003=>Lfor.body%4%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100004=>Lfor.body%4%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100004=>Lfor.body%4%100005 for loc_id 1006
1 : symbol.2 : BV:32
2 : input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100004=>Lfor.body%4%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100005=>Lfor.body%5%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100005=>Lfor.body%5%1 for loc_id 1011
1 : input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100005=>Lfor.body%5%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%5%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%5%100003 for loc_id 1003
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : input.src.llvm-%arrayidx1 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%5%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100003=>Lfor.body%6%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100003=>Lfor.body%6%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%7%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%7%1 for loc_id 1009
1 : input.src.llvm-%0 : BV:32
2 : input.src.llvm-%1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%7%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%7%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%7%100003 for loc_id 1018
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%7%100003 for loc_id 1021
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%7%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100003=>Lfor.body%7%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100003=>Lfor.body%7%100004 for loc_id 1019
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100003=>Lfor.body%7%100004 for loc_id 1022
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100003=>Lfor.body%7%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100004=>Lfor.body%7%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100004=>Lfor.body%7%100005 for loc_id 1020
1 : symbol.1 : BV:32
2 : input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100004=>Lfor.body%7%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100005=>Lfor.body%8%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100005=>Lfor.body%8%1 for loc_id 1012
1 : input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100005=>Lfor.body%8%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%8%1=>Lfor.body%9%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%8%1=>Lfor.body%9%1 for loc_id 1034
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%arrayidx2 : BV:32
4 : input.src.llvm-%add : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%8%1=>Lfor.body%9%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%1=>Lfor.body%9%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%1=>Lfor.body%9%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%100003=>Lfor.body%9%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%100003=>Lfor.body%9%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%100004=>Lfor.inc%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%100004=>Lfor.inc%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1001
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1024
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1029
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1 for loc_id 1027
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%1=>Lfor.inc%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%1=>Lfor.inc%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004 for loc_id 1026
1 : input.src.llvm-%inc : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100004=>Lfor.inc%2%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100004=>Lfor.inc%2%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006 for loc_id 1025
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in llvm.s1221
=Loc 1001 in llvm.s1221.
LLVMVAR
llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Loc 1002 in llvm.s1221.
LLVMVAR
src.llvm-%0
1 : input.src.llvm-%0 : BV:32
=Loc 1003 in llvm.s1221.
LLVMVAR
src.llvm-%1
1 : input.src.llvm-%1 : BV:32
=Loc 1004 in llvm.s1221.
LLVMVAR
src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset : BV:32
=Loc 1005 in llvm.s1221.
LLVMVAR
src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset : BV:32
=Loc 1006 in llvm.s1221.
LLVMVAR
src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset : BV:32
=Loc 1007 in llvm.s1221.
LLVMVAR
src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset : BV:32
=Loc 1008 in llvm.s1221.
LLVMVAR
src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset : BV:32
=Loc 1009 in llvm.s1221.
LLVMVAR
src.llvm-%add
1 : input.src.llvm-%add : BV:32
=Loc 1010 in llvm.s1221.
LLVMVAR
src.llvm-%arrayidx
1 : input.src.llvm-%arrayidx : BV:32
=Loc 1011 in llvm.s1221.
LLVMVAR
src.llvm-%arrayidx1
1 : input.src.llvm-%arrayidx1 : BV:32
=Loc 1012 in llvm.s1221.
LLVMVAR
src.llvm-%arrayidx2
1 : input.src.llvm-%arrayidx2 : BV:32
=Loc 1013 in llvm.s1221.
LLVMVAR
src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset : BV:32
=Loc 1014 in llvm.s1221.
LLVMVAR
src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset : BV:32
=Loc 1015 in llvm.s1221.
LLVMVAR
src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset : BV:32
=Loc 1016 in llvm.s1221.
LLVMVAR
src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset : BV:32
=Loc 1017 in llvm.s1221.
LLVMVAR
src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset : BV:32
=Loc 1018 in llvm.s1221.
LLVMVAR
src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset : BV:32
=Loc 1019 in llvm.s1221.
LLVMVAR
src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset : BV:32
=Loc 1020 in llvm.s1221.
LLVMVAR
src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset : BV:32
=Loc 1021 in llvm.s1221.
LLVMVAR
src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset : BV:32
=Loc 1022 in llvm.s1221.
LLVMVAR
src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset : BV:32
=Loc 1023 in llvm.s1221.
LLVMVAR
src.llvm-%cmp
1 : input.src.llvm-%cmp : BOOL
=Loc 1024 in llvm.s1221.
LLVMVAR
src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=Loc 1025 in llvm.s1221.
LLVMVAR
src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
=Loc 1026 in llvm.s1221.
LLVMVAR
src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=Loc 1027 in llvm.s1221.
LLVMVAR
src.llvm-%inc
1 : input.src.llvm-%inc : BV:32
=Loc 1028 in llvm.s1221.
LLVMVAR
src.llvm-%sub
1 : input.src.llvm-%sub : BV:32
=Loc 1029 in llvm.s1221.
LLVMVAR
src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Loc 1030 in llvm.s1221.
REGMEM
econd
1 : input.econd : BOOL
=Loc 1031 in llvm.s1221.
REGMEM
uset_visit_expr
1 : input.uset_visit_expr : BOOL
=Loc 1032 in llvm.s1221.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1033 in llvm.s1221.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1034 in llvm.s1221.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.1.0
=Loc 1035 in llvm.s1221.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.2.0

=Alias analysis results in llvm.s1221
=Alias analysis result in llvm.s1221 at L0%0%1
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1004 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1005 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1006 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1007 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1008 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1010 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1011 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1012 (input.src.llvm-%arrayidx2)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1013 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1014 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1015 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1016 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1017 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1018 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1019 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1020 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1021 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1022 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1023 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1024 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1025 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1026 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1027 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1028 (input.src.llvm-%sub)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1029 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1030 (input.econd)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1031 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s1221 at L0%0%1 for loc 1035 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1004 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1005 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1006 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1007 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1008 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1010 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1011 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1012 (input.src.llvm-%arrayidx2)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1013 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1014 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1015 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1016 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1017 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1018 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1019 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1020 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1021 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1022 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1023 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1024 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1025 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1026 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1027 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1028 (input.src.llvm-%sub)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1029 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1030 (input.econd)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1031 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%1%0 for loc 1035 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1004 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1005 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1006 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1007 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1008 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1010 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1011 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1012 (input.src.llvm-%arrayidx2)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1013 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1014 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1015 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1016 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1017 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1018 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1019 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1020 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1021 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1022 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1023 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1024 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1025 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1026 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1027 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1028 (input.src.llvm-%sub)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1029 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1030 (input.econd)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1031 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s1221 at Lfor.cond%2%1 for loc 1035 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1004 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1005 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1006 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1007 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1008 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1010 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1011 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1012 (input.src.llvm-%arrayidx2)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1013 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1014 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1015 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1016 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1017 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1018 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1019 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1020 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1021 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1022 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1023 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1024 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1025 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1026 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1027 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1028 (input.src.llvm-%sub)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1029 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1030 (input.econd)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1031 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s1221 at Lfor.body%1%1 for loc 1035 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1004 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1005 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1006 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1007 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1008 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1010 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1011 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1012 (input.src.llvm-%arrayidx2)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1013 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1014 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1015 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1016 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1017 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1018 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1019 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1020 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1021 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1022 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1023 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1024 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1025 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1026 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1027 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1028 (input.src.llvm-%sub)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1029 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1030 (input.econd)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1031 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s1221 at Lfor.end%1%1 for loc 1035 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1001 (input.llvm-%ret-reg)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1004 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1005 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1006 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1007 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1008 (input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1010 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1011 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1012 (input.src.llvm-%arrayidx2)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1013 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1014 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1015 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1016 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1017 (input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1018 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1019 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1020 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1021 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1022 (input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1023 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1024 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1025 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1026 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1027 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1028 (input.src.llvm-%sub)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1029 (input.src.llvm-indir_tgt)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1030 (input.econd)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1031 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s1221 at E0%0%1 for loc 1035 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr

=Liveness in llvm.s1221
=live locs at L0%0%1
1032, 1034, 1035
=live locs at Lfor.cond%1%0
1025, 1032, 1034, 1035
=live locs at Lfor.cond%2%1
1023, 1025, 1032, 1034, 1035
=live locs at Lfor.body%1%1
1025, 1032, 1034, 1035
=live locs at Lfor.end%1%1
1032, 1034, 1035
=live locs at E0%0%1
1032, 1034, 1035

=Available expressions in llvm.s1221
=available expressions at L0%0%1 in llvm.s1221
=avail_exprs begin
=avail_exprs end
=available expressions at Lfor.cond%1%0 in llvm.s1221
=avail_exprs begin
=avail_exprs end
=available expressions at Lfor.cond%2%1 in llvm.s1221
=avail_exprs begin
=loc 1023
=from_expr
17403 : input.src.llvm-%cmp : BOOL
=to_expr
17400 : input.src.llvm-%i.0 : BV:32
17401 : 32000 : BV:32
17402 : bvslt(17400, 17401) : BOOL
=avail_exprs end
=available expressions at Lfor.body%1%1 in llvm.s1221
=avail_exprs begin
=loc 1023
=from_expr
17403 : input.src.llvm-%cmp : BOOL
=to_expr
17400 : input.src.llvm-%i.0 : BV:32
17401 : 32000 : BV:32
17402 : bvslt(17400, 17401) : BOOL
=avail_exprs end
=available expressions at Lfor.end%1%1 in llvm.s1221
=avail_exprs begin
=loc 1023
=from_expr
17403 : input.src.llvm-%cmp : BOOL
=to_expr
17400 : input.src.llvm-%i.0 : BV:32
17401 : 32000 : BV:32
17402 : bvslt(17400, 17401) : BOOL
=avail_exprs end
=available expressions at E0%0%1 in llvm.s1221
=avail_exprs begin
=loc 1001
=from_expr
17521 : input.llvm-%ret-reg : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1023
=from_expr
17403 : input.src.llvm-%cmp : BOOL
=to_expr
17400 : input.src.llvm-%i.0 : BV:32
17401 : 32000 : BV:32
17402 : bvslt(17400, 17401) : BOOL
=loc 1029
=from_expr
17528 : input.src.llvm-indir_tgt : BV:32
=to_expr
17387 : retaddr_const : BV:32
=avail_exprs end

=sprel_maps in llvm.s1221
=sprel_map at L0%0%1 in llvm.s1221
=sprel_map at Lfor.cond%1%0 in llvm.s1221
=sprel_map at Lfor.cond%2%1 in llvm.s1221
=sprel_map at Lfor.body%1%1 in llvm.s1221
=sprel_map at Lfor.end%1%1 in llvm.s1221
=sprel_map at E0%0%1 in llvm.s1221
=loc 1001
17389 : 0 : BV:32
=loc 1029
17387 : retaddr_const : BV:32
=graph_with_aliasing_done
=String-contents:
=Nextpc-map:
=TFGdone
=PC_to_linename:
=pc
Lentry%1%1
=linename
(line 8 at column 8)
=pc
Lfor.cond%1%1
=linename
(line 8 at column 21)
=pc
Lfor.cond%2%1
=linename
(line 8 at column 3)
=pc
Lfor.body%1%1
=linename
(line 9 at column 15)
=pc
Lfor.body%2%1
=linename
(line 9 at column 11)
=pc
Lfor.body%3%1
=linename
(line 9 at column 11)
=pc
Lfor.body%4%1
=linename
(line 9 at column 22)
=pc
Lfor.body%5%1
=linename
(line 9 at column 22)
=pc
Lfor.body%6%1
=linename
(line 9 at column 20)
=pc
Lfor.body%7%1
=linename
(line 9 at column 4)
=pc
Lfor.body%8%1
=linename
(line 9 at column 9)
=pc
Lfor.body%9%1
=linename
line 10
=pc
Lfor.end%1%1
=linename
line 11
=pc
Lfor.inc%1%1
=linename
(line 8 at column 29)
=pc
Lfor.inc%2%1
=linename
line 8
=PC_to_linename done
=PC_to_column_name:
=pc
Lentry%1%1
=column_name
 at column 8
=pc
Lfor.cond%1%1
=column_name
 at column 21
=pc
Lfor.cond%2%1
=column_name
 at column 3
=pc
Lfor.body%1%1
=column_name
 at column 15
=pc
Lfor.body%2%1
=column_name
 at column 11
=pc
Lfor.body%3%1
=column_name
 at column 11
=pc
Lfor.body%4%1
=column_name
 at column 22
=pc
Lfor.body%5%1
=column_name
 at column 22
=pc
Lfor.body%6%1
=column_name
 at column 20
=pc
Lfor.body%7%1
=column_name
 at column 4
=pc
Lfor.body%8%1
=column_name
 at column 9
=pc
Lfor.body%9%1
=column_name
 at column 3
=pc
Lfor.end%1%1
=column_name
 at column 2
=pc
Lfor.inc%1%1
=column_name
 at column 29
=pc
Lfor.inc%2%1
=column_name
 at column 3
=PC_to_column_name done
=PC_to_line_and_column:
=pc
Lentry%1%1
=line_and_column
line 8
=pc
Lfor.cond%1%1
=line_and_column
line 8
=pc
Lfor.cond%2%1
=line_and_column
line 8
=pc
Lfor.body%1%1
=line_and_column
line 9
=pc
Lfor.body%2%1
=line_and_column
line 9
=pc
Lfor.body%3%1
=line_and_column
line 9
=pc
Lfor.body%4%1
=line_and_column
line 9
=pc
Lfor.body%5%1
=line_and_column
line 9
=pc
Lfor.body%6%1
=line_and_column
line 9
=pc
Lfor.body%7%1
=line_and_column
line 9
=pc
Lfor.body%8%1
=line_and_column
line 9
=pc
Lfor.body%9%1
=line_and_column
line 10
=pc
Lfor.end%1%1
=line_and_column
line 11
=pc
Lfor.inc%1%1
=line_and_column
line 8
=pc
Lfor.inc%2%1
=line_and_column
line 8
=PC_to_line_and_column done
=SourceToLLVMVarnames:
=SourceToLLVMVarnames done
=InputLLVMToSourceVarnames:
input.src.llvm-%i.0 : i
input.src.llvm-%i.0.phi.tmpvar : 4
input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset : 0
input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset : (@a + bvmul(4, i))
input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset : bvmul(4, i)
input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset : (@b + bvmul(4, (i + (-4))))
input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset : bvmul(4, (i + (-4)))
input.src.llvm-%arrayidx2 : (@b + bvmul(4, i))
input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset : 0
input.src.llvm-%sub : (i + (-4))
input.src.llvm-%add : (input.src.llvm-%0 + input.src.llvm-%1)
input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset : 0
input.src.llvm-%arrayidx : (@b + bvmul(4, (i + (-4))))
input.src.llvm-%arrayidx1 : (@a + bvmul(4, i))
input.src.llvm-%inc : i
input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset : (@b + bvmul(4, i))
input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset : bvmul(4, i)
input.src.llvm-%cmp : (i&lt;<sub>s</sub>32000)
input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset : 0
input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset : bvmul(4, i)
input.src.llvm-indir_tgt : retaddr_const
input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset : bvmul(4, i)
input.llvm-%ret-reg : 0
input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset : 0
input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset : 0
input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset : bvmul(4, (i + (-4)))
=InputLLVMToSourceVarnames done
=TFG_LLVM_done
=dst_tfg
=TFG:
=Nodes: L0%0%1 L2%1%0 L6%1%1 L7%1%0 E0%0%1
=Edges:
L6%1%1 => L2%1%0
L6%1%1 => L7%1%0
L0%0%1 => L2%1%0
L7%1%0 => E0%0%1
L2%1%0 => L6%1%1
=graph done
=Node outputs: E0%0%1
=Output: heap
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=Output: symbol.1.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: symbol.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.dst.exreg.0.0 : BV:32
=Node outputs done for E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : b : 128000 : 16 : 0
C_SYMBOL2 : a : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=dst.exreg.22.0
1 : input.dst.exreg.22.0 : BV:11
=dst.exreg.1.0
1 : input.dst.exreg.1.0 : BV:64
=dst.invisible_regs.1
1 : input.dst.invisible_reg.0.1 : BV:8
=dst.contains_float_op
1 : input.dst.contains_float_op : BOOL
=dst.exreg.20.0
1 : input.dst.exreg.20.0 : BV:48
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=dst.exreg.17.0
1 : input.dst.exreg.17.0 : BV:16
=dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=dst.invisible_regs.0
1 : input.dst.invisible_reg.0.0 : BV:8
=dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=dst.exreg.21.0
1 : input.dst.exreg.21.0 : BV:48
=dst.contains_unsupported_op
1 : input.dst.contains_unsupported_op : BOOL
=dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=dst.exreg.1.1
1 : input.dst.exreg.1.1 : BV:64
=dst.exreg.1.2
1 : input.dst.exreg.1.2 : BV:64
=dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=dst.exreg.2.3
1 : input.dst.exreg.2.3 : BV:128
=dst.exreg.2.4
1 : input.dst.exreg.2.4 : BV:128
=dst.exreg.2.5
1 : input.dst.exreg.2.5 : BV:128
=dst.exreg.2.6
1 : input.dst.exreg.2.6 : BV:128
=dst.exreg.2.7
1 : input.dst.exreg.2.7 : BV:128
=dst.exreg.3.0
1 : input.dst.exreg.3.0 : BV:256
=dst.exreg.3.1
1 : input.dst.exreg.3.1 : BV:256
=dst.exreg.3.2
1 : input.dst.exreg.3.2 : BV:256
=dst.exreg.3.3
1 : input.dst.exreg.3.3 : BV:256
=dst.exreg.3.4
1 : input.dst.exreg.3.4 : BV:256
=dst.exreg.3.5
1 : input.dst.exreg.3.5 : BV:256
=dst.exreg.3.6
1 : input.dst.exreg.3.6 : BV:256
=dst.exreg.3.7
1 : input.dst.exreg.3.7 : BV:256
=dst.exreg.3.8
1 : input.dst.exreg.3.8 : BV:256
=dst.exreg.3.9
1 : input.dst.exreg.3.9 : BV:256
=dst.exreg.3.10
1 : input.dst.exreg.3.10 : BV:256
=dst.exreg.3.11
1 : input.dst.exreg.3.11 : BV:256
=dst.exreg.3.12
1 : input.dst.exreg.3.12 : BV:256
=dst.exreg.3.13
1 : input.dst.exreg.3.13 : BV:256
=dst.exreg.3.15
1 : input.dst.exreg.3.15 : BV:256
=dst.exreg.2.2
1 : input.dst.exreg.2.2 : BV:128
=dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=dst.exreg.4.1
1 : input.dst.exreg.4.1 : BV:80
=dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=dst.exreg.3.14
1 : input.dst.exreg.3.14 : BV:256
=dst.exreg.4.0
1 : input.dst.exreg.4.0 : BV:80
=dst.exreg.4.2
1 : input.dst.exreg.4.2 : BV:80
=dst.exreg.4.3
1 : input.dst.exreg.4.3 : BV:80
=dst.exreg.4.4
1 : input.dst.exreg.4.4 : BV:80
=dst.exreg.4.5
1 : input.dst.exreg.4.5 : BV:80
=dst.exreg.4.6
1 : input.dst.exreg.4.6 : BV:80
=dst.exreg.4.7
1 : input.dst.exreg.4.7 : BV:80
=dst.exreg.5.0
1 : input.dst.exreg.5.0 : BV:16
=dst.exreg.5.1
1 : input.dst.exreg.5.1 : BV:16
=dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=dst.exreg.5.4
1 : input.dst.exreg.5.4 : BV:16
=dst.exreg.5.5
1 : input.dst.exreg.5.5 : BV:16
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=dst.exreg.0.1
1 : input.dst.exreg.0.1 : BV:32
=dst.exreg.1.3
1 : input.dst.exreg.1.3 : BV:64
=dst.exreg.1.4
1 : input.dst.exreg.1.4 : BV:64
=dst.exreg.1.5
1 : input.dst.exreg.1.5 : BV:64
=dst.exreg.1.6
1 : input.dst.exreg.1.6 : BV:64
=dst.exreg.1.7
1 : input.dst.exreg.1.7 : BV:64
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=dst.exreg.19.0
1 : input.dst.exreg.19.0 : BV:16
=dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=dst.exreg.18.0
1 : input.dst.exreg.18.0 : BV:16
=dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=state_end

=Node assumes and asserts: L0%0%1
=L0%0%1 assume predicate_set done
=L0%0%1 assert predicate_set done
=Node assumes and asserts: L2%1%0
=L2%1%0 assume predicate_set done
=L2%1%0 assert predicate_set done
=Node assumes and asserts: L6%1%1
=L6%1%1 assume predicate_set done
=L6%1%1 assert predicate_set done
=Node assumes and asserts: L7%1%0
=L7%1%0 assume predicate_set done
=L7%1%0 assert predicate_set done
=Node assumes and asserts: E0%0%1
=E0%0%1 assume predicate_set done
=E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.dst.0 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.1
mlvar.dst.1 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.2
mlvar.dst.2 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.3
mlvar.dst.3 : memlabel-mem-esp
=memlabel_map.4
mlvar.dst.4 : memlabel-mem-esp
=Edge: L6%1%1 => L2%1%0
=Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:te_comment_not_implemented

=Edge: L6%1%1 => L7%1%0
=Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:te_comment_not_implemented

=Edge: L0%0%1 => L2%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))

=Edge: L7%1%0 => E0%0%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.esp.E0%0%1
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.hidden_reg.3
1 : input.dst.exreg.0.6 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.0.5 : BV:32
=dst.hidden_reg.5
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.0.3 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.0.7 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.4 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=dst.hidden_reg.0
1 : input.dst.exreg.5.2 : BV:16
=dst.hidden_reg.6
1 : input.dst.exreg.0.2 : BV:32
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)

=Edge: L2%1%0 => L6%1%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>L0%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>L2%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%1%1=>L1%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%1%1=>L2%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%1%0=>L2%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%1%0=>L6%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%1%1=>L3%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%1%1=>L4%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L4%1%1=>L5%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L5%1%1=>L6%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L6%1%1=>L2%1%0
1 : 1 : BV:1
2 : input.dst.exreg.8.0 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L6%1%1=>L7%1%0
1 : 1 : BV:1
2 : input.dst.exreg.8.0 : BV:1
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L7%1%0=>L7%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L7%1%0=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L7%1%1=>L8%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L8%1%1=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>L0%1%1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>L2%1%0
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 16 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%1%1=>L1%1%1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 16 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%1%1=>L2%1%0
=dst.exreg.0.0
1 : 16 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%1%0=>L2%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%1%0=>L6%1%1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.0 : BV:128
7 : 127 : INT
8 : 96 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.2 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvadd(9, 15) : BV:32
17 : 95 : INT
18 : 64 : INT
19 : bvextract(6, 17, 18) : BV:32
20 : 8 : BV:32
21 : bvadd(10, 4, 20) : BV:32
22 : select(1, 2, 21, 13, 14) : BV:32
23 : bvadd(19, 22) : BV:32
24 : 63 : INT
25 : 32 : INT
26 : bvextract(6, 24, 25) : BV:32
27 : 4 : BV:32
28 : bvadd(10, 27, 4) : BV:32
29 : select(1, 2, 28, 13, 14) : BV:32
30 : bvadd(26, 29) : BV:32
31 : 31 : INT
32 : 0 : INT
33 : bvextract(6, 31, 32) : BV:32
34 : bvadd(10, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvadd(33, 35) : BV:32
37 : bvconcat(16, 23, 30, 36) : BV:128
38 : 16 : INT
39 : store(1, 2, 5, 37, 38, 14) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 128000 : BV:32
5 : bvuge(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 128000 : BV:32
5 : bvuge(3, 4) : BOOL
6 : not(5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 128000 : BV:32
7 : bvuge(5, 6) : BOOL
8 : andnot1(3, 7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 127984 : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : 0 : BV:1
19 : ite(17, 1, 18) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 128000 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : or(3, 8) : BOOL
10 : 1 : BV:1
11 : 0 : BV:1
12 : ite(9, 10, 11) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : 16 : BV:32
8 : bvadd(6, 7) : BV:32
9 : bvextract(8, 2, 2) : BV:1
10 : eq(5, 9) : BOOL
11 : 4294839312 { -127984 } : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(5, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(10, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 5, 17) : BV:1
19 : 10 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : eq(5, 20) : BOOL
22 : ite(21, 5, 17) : BV:1
23 : 9 : INT
24 : 8 : INT
25 : bvextract(1, 23, 24) : BV:2
26 : ite(14, 5, 17) : BV:1
27 : 127984 : BV:32
28 : eq(6, 27) : BOOL
29 : ite(28, 5, 17) : BV:1
30 : 5 : INT
31 : bvextract(1, 30, 30) : BV:1
32 : 4 : INT
33 : bvextract(12, 32, 32) : BV:1
34 : eq(5, 33) : BOOL
35 : bvextract(8, 32, 32) : BV:1
36 : eq(5, 35) : BOOL
37 : xor(34, 36) : BOOL
38 : ite(37, 5, 17) : BV:1
39 : 3 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : 1 : INT
42 : bvextract(1, 41, 41) : BV:1
43 : 128000 : BV:32
44 : bvuge(8, 43) : BOOL
45 : not(44) : BOOL
46 : ite(45, 5, 17) : BV:1
47 : bvconcat(4, 18, 22, 25, 26, 29, 31, 38, 40, 17, 42, 46) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 12 : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : 8 : BV:32
19 : bvadd(7, 8, 18) : BV:32
20 : select(5, 6, 19, 11, 12) : BV:32
21 : bvadd(17, 20) : BV:32
22 : 63 : INT
23 : 32 : INT
24 : bvextract(1, 22, 23) : BV:32
25 : 4 : BV:32
26 : bvadd(7, 25, 8) : BV:32
27 : select(5, 6, 26, 11, 12) : BV:32
28 : bvadd(24, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(1, 29, 30) : BV:32
32 : bvadd(7, 8) : BV:32
33 : select(5, 6, 32, 11, 12) : BV:32
34 : bvadd(31, 33) : BV:32
35 : bvconcat(14, 21, 28, 34) : BV:128
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 1, 15) : BV:1
=dst.exreg.14.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 127984 : BV:32
17 : eq(2, 16) : BOOL
18 : or(15, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 1, 19) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%1%1=>L3%1%1
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 12 : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : 8 : BV:32
19 : bvadd(7, 8, 18) : BV:32
20 : select(5, 6, 19, 11, 12) : BV:32
21 : bvadd(17, 20) : BV:32
22 : 63 : INT
23 : 32 : INT
24 : bvextract(1, 22, 23) : BV:32
25 : 4 : BV:32
26 : bvadd(7, 25, 8) : BV:32
27 : select(5, 6, 26, 11, 12) : BV:32
28 : bvadd(24, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(1, 29, 30) : BV:32
32 : bvadd(7, 8) : BV:32
33 : select(5, 6, 32, 11, 12) : BV:32
34 : bvadd(31, 33) : BV:32
35 : bvconcat(14, 21, 28, 34) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%1%1=>L4%1%1
=dst.exreg.15.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : not(9) : BOOL
11 : ite(10, 1, 2) : BV:1
=dst.exreg.9.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : ite(9, 1, 2) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : ite(15, 1, 8) : BV:1
=dst.exreg.11.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : 4294967280 { -16 } : BV:32
11 : eq(3, 10) : BOOL
12 : not(11) : BOOL
13 : andnot1(9, 12) : BOOL
14 : ite(13, 1, 2) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 4294967280 { -16 } : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : ite(17, 1, 8) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : bvconcat(5, 1) : BV:33
7 : 16 : BV:33
8 : bvadd(6, 7) : BV:33
9 : 32 : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(4, 10) : BOOL
12 : or(3, 11) : BOOL
13 : ite(12, 4, 5) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 1 : BV:1
10 : eq(9, 7) : BOOL
11 : 16 : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(9, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(8, 15) : BOOL
17 : ite(16, 9, 5) : BV:1
18 : 10 : INT
19 : bvextract(1, 18, 18) : BV:1
20 : eq(9, 19) : BOOL
21 : ite(20, 9, 5) : BV:1
22 : 9 : INT
23 : 8 : INT
24 : bvextract(1, 22, 23) : BV:2
25 : ite(14, 9, 5) : BV:1
26 : 4294967280 { -16 } : BV:32
27 : eq(6, 26) : BOOL
28 : ite(27, 9, 5) : BV:1
29 : 5 : INT
30 : bvextract(1, 29, 29) : BV:1
31 : 4 : INT
32 : bvextract(12, 31, 31) : BV:1
33 : eq(9, 32) : BOOL
34 : bvextract(6, 31, 31) : BV:1
35 : eq(9, 34) : BOOL
36 : xor(33, 35) : BOOL
37 : ite(36, 9, 5) : BV:1
38 : 3 : INT
39 : bvextract(1, 38, 38) : BV:1
40 : 1 : INT
41 : bvextract(1, 40, 40) : BV:1
42 : bvconcat(5, 6) : BV:33
43 : 16 : BV:33
44 : bvadd(42, 43) : BV:33
45 : 32 : INT
46 : bvextract(44, 45, 45) : BV:1
47 : eq(9, 46) : BOOL
48 : ite(47, 9, 5) : BV:1
49 : bvconcat(4, 17, 21, 24, 25, 28, 30, 37, 39, 5, 41, 48) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : ite(14, 1, 8) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 16 : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : 0 : BV:1
11 : bvextract(1, 7, 7) : BV:1
12 : eq(10, 11) : BOOL
13 : eq(4, 11) : BOOL
14 : xor(13, 9) : BOOL
15 : and(12, 14) : BOOL
16 : iff(9, 15) : BOOL
17 : not(16) : BOOL
18 : or(3, 17) : BOOL
19 : ite(18, 4, 10) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L4%1%1=>L5%1%1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at L5%1%1=>L6%1%1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 : BV:1
15 : ite(13, 1, 14) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(2, 1) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 128000 : BV:32
14 : eq(13, 2) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : eq(2, 1) : BOOL
6 : or(4, 5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294839296 { -128000 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 : INT
22 : 8 : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 128000 : BV:32
26 : eq(25, 6) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=dst.exreg.7.0
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 : BV:1
14 : ite(12, 1, 13) : BV:1
=dst.exreg.14.0
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4294839296 { -128000 } : BV:32
6 : bvadd(2, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : bvextract(2, 7, 7) : BV:1
11 : eq(4, 10) : BOOL
12 : xor(11, 9) : BOOL
13 : and(11, 12) : BOOL
14 : iff(9, 13) : BOOL
15 : not(14) : BOOL
16 : or(3, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 4, 17) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L6%1%1=>L2%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at L6%1%1=>L7%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at L7%1%0=>L7%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L7%1%0=>E0%0%1
=dst.esp.E0%0%1
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.llvm-indir_tgt
1 : retaddr_const : BV:32
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.0.0
1 : 0 : BV:32
=dst.exreg.16.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : 1 : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L7%1%1=>L8%1%1
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.0.0
1 : 0 : BV:32
=dst.exreg.16.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : 1 : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L8%1%1=>E0%0%1
=dst.esp.E0%0%1
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L0%1%1
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L0%1%1 done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L2%1%0
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L2%1%0 done
=graph_with_simplified_assets.simplified_assumes at L0%1%1=>L1%1%1
=graph_with_simplified_assets.simplified_assumes at L0%1%1=>L1%1%1 done
=graph_with_simplified_assets.simplified_assumes at L1%1%1=>L2%1%0
=graph_with_simplified_assets.simplified_assumes at L1%1%1=>L2%1%0 done
=graph_with_simplified_assets.simplified_assumes at L2%1%0=>L2%1%1
=graph_with_simplified_assets.simplified_assumes at L2%1%0=>L2%1%1 done
=graph_with_simplified_assets.simplified_assumes at L2%1%0=>L6%1%1
=graph_with_simplified_assets.simplified_assumes at L2%1%0=>L6%1%1 done
=graph_with_simplified_assets.simplified_assumes at L2%1%1=>L3%1%1
=graph_with_simplified_assets.simplified_assumes at L2%1%1=>L3%1%1 done
=graph_with_simplified_assets.simplified_assumes at L3%1%1=>L4%1%1
=graph_with_simplified_assets.simplified_assumes at L3%1%1=>L4%1%1 done
=graph_with_simplified_assets.simplified_assumes at L4%1%1=>L5%1%1
=graph_with_simplified_assets.simplified_assumes at L4%1%1=>L5%1%1 done
=graph_with_simplified_assets.simplified_assumes at L5%1%1=>L6%1%1
=graph_with_simplified_assets.simplified_assumes at L5%1%1=>L6%1%1 done
=graph_with_simplified_assets.simplified_assumes at L6%1%1=>L2%1%0
=graph_with_simplified_assets.simplified_assumes at L6%1%1=>L2%1%0 done
=graph_with_simplified_assets.simplified_assumes at L6%1%1=>L7%1%0
=graph_with_simplified_assets.simplified_assumes at L6%1%1=>L7%1%0 done
=graph_with_simplified_assets.simplified_assumes at L7%1%0=>L7%1%1
=graph_with_simplified_assets.simplified_assumes at L7%1%0=>L7%1%1 done
=graph_with_simplified_assets.simplified_assumes at L7%1%0=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at L7%1%0=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes at L7%1%1=>L8%1%1
=graph_with_simplified_assets.simplified_assumes at L7%1%1=>L8%1%1 done
=graph_with_simplified_assets.simplified_assumes at L8%1%1=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at L8%1%1=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 3
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 5
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 6
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 7
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1017
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1033
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1036
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 0
1 : 16 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 3
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 4
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 5
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 6
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 7
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 1008
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 16 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 1017
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 1033
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 1036
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1 for loc_id 1008
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 16 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1 for loc_id 1018
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%0
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%0 for loc_id 0
1 : 16 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L2%1%1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L2%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L6%1%1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L6%1%1 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L6%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L6%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 128000 : BV:32
7 : bvuge(5, 6) : BOOL
8 : andnot1(3, 7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L6%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 127984 : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : 0 : BV:1
19 : ite(17, 1, 18) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L6%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 128000 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : or(3, 8) : BOOL
10 : 1 : BV:1
11 : 0 : BV:1
12 : ite(9, 10, 11) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L6%1%1 for loc_id 1005
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 127984 : BV:32
17 : eq(2, 16) : BOOL
18 : or(15, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 1, 19) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L6%1%1 for loc_id 1006
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 128000 : BV:32
5 : bvuge(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L6%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 1, 15) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L6%1%1 for loc_id 1008
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 12 : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : 8 : BV:32
19 : bvadd(7, 8, 18) : BV:32
20 : select(5, 6, 19, 11, 12) : BV:32
21 : bvadd(17, 20) : BV:32
22 : 63 : INT
23 : 32 : INT
24 : bvextract(1, 22, 23) : BV:32
25 : 4 : BV:32
26 : bvadd(7, 25, 8) : BV:32
27 : select(5, 6, 26, 11, 12) : BV:32
28 : bvadd(24, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(1, 29, 30) : BV:32
32 : bvadd(7, 8) : BV:32
33 : select(5, 6, 32, 11, 12) : BV:32
34 : bvadd(31, 33) : BV:32
35 : bvconcat(14, 21, 28, 34) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L6%1%1 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : 16 : BV:32
8 : bvadd(6, 7) : BV:32
9 : bvextract(8, 2, 2) : BV:1
10 : eq(5, 9) : BOOL
11 : 4294839312 { -127984 } : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(5, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(10, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 5, 17) : BV:1
19 : 10 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : eq(5, 20) : BOOL
22 : ite(21, 5, 17) : BV:1
23 : 9 : INT
24 : 8 : INT
25 : bvextract(1, 23, 24) : BV:2
26 : ite(14, 5, 17) : BV:1
27 : 127984 : BV:32
28 : eq(6, 27) : BOOL
29 : ite(28, 5, 17) : BV:1
30 : 5 : INT
31 : bvextract(1, 30, 30) : BV:1
32 : 4 : INT
33 : bvextract(12, 32, 32) : BV:1
34 : eq(5, 33) : BOOL
35 : bvextract(8, 32, 32) : BV:1
36 : eq(5, 35) : BOOL
37 : xor(34, 36) : BOOL
38 : ite(37, 5, 17) : BV:1
39 : 3 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : 1 : INT
42 : bvextract(1, 41, 41) : BV:1
43 : 128000 : BV:32
44 : bvuge(8, 43) : BOOL
45 : not(44) : BOOL
46 : ite(45, 5, 17) : BV:1
47 : bvconcat(4, 18, 22, 25, 26, 29, 31, 38, 40, 17, 42, 46) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L6%1%1 for loc_id 1012
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L6%1%1 for loc_id 1013
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L6%1%1 for loc_id 1014
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 128000 : BV:32
5 : bvuge(3, 4) : BOOL
6 : not(5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L6%1%1 for loc_id 1032
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.0 : BV:128
7 : 127 : INT
8 : 96 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.2 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvadd(9, 15) : BV:32
17 : 95 : INT
18 : 64 : INT
19 : bvextract(6, 17, 18) : BV:32
20 : 8 : BV:32
21 : bvadd(10, 4, 20) : BV:32
22 : select(1, 2, 21, 13, 14) : BV:32
23 : bvadd(19, 22) : BV:32
24 : 63 : INT
25 : 32 : INT
26 : bvextract(6, 24, 25) : BV:32
27 : 4 : BV:32
28 : bvadd(10, 27, 4) : BV:32
29 : select(1, 2, 28, 13, 14) : BV:32
30 : bvadd(26, 29) : BV:32
31 : 31 : INT
32 : 0 : INT
33 : bvextract(6, 31, 32) : BV:32
34 : bvadd(10, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvadd(33, 35) : BV:32
37 : bvconcat(16, 23, 30, 36) : BV:128
38 : 16 : INT
39 : store(1, 2, 5, 37, 38, 14) : ARRAY[BV:32 -> BV:8]
40 : memlabel-mem-heap : MEMLABEL
41 : memmask(39, 40) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L6%1%1 for loc_id 1034
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.0 : BV:128
7 : 127 : INT
8 : 96 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.2 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvadd(9, 15) : BV:32
17 : 95 : INT
18 : 64 : INT
19 : bvextract(6, 17, 18) : BV:32
20 : 8 : BV:32
21 : bvadd(10, 4, 20) : BV:32
22 : select(1, 2, 21, 13, 14) : BV:32
23 : bvadd(19, 22) : BV:32
24 : 63 : INT
25 : 32 : INT
26 : bvextract(6, 24, 25) : BV:32
27 : 4 : BV:32
28 : bvadd(10, 27, 4) : BV:32
29 : select(1, 2, 28, 13, 14) : BV:32
30 : bvadd(26, 29) : BV:32
31 : 31 : INT
32 : 0 : INT
33 : bvextract(6, 31, 32) : BV:32
34 : bvadd(10, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvadd(33, 35) : BV:32
37 : bvconcat(16, 23, 30, 36) : BV:128
38 : 16 : INT
39 : store(1, 2, 5, 37, 38, 14) : ARRAY[BV:32 -> BV:8]
40 : memlabel-mem-symbol.1.0 : MEMLABEL
41 : memmask(39, 40) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L6%1%1 for loc_id 1035
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.0 : BV:128
7 : 127 : INT
8 : 96 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.2 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvadd(9, 15) : BV:32
17 : 95 : INT
18 : 64 : INT
19 : bvextract(6, 17, 18) : BV:32
20 : 8 : BV:32
21 : bvadd(10, 4, 20) : BV:32
22 : select(1, 2, 21, 13, 14) : BV:32
23 : bvadd(19, 22) : BV:32
24 : 63 : INT
25 : 32 : INT
26 : bvextract(6, 24, 25) : BV:32
27 : 4 : BV:32
28 : bvadd(10, 27, 4) : BV:32
29 : select(1, 2, 28, 13, 14) : BV:32
30 : bvadd(26, 29) : BV:32
31 : 31 : INT
32 : 0 : INT
33 : bvextract(6, 31, 32) : BV:32
34 : bvadd(10, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvadd(33, 35) : BV:32
37 : bvconcat(16, 23, 30, 36) : BV:128
38 : 16 : INT
39 : store(1, 2, 5, 37, 38, 14) : ARRAY[BV:32 -> BV:8]
40 : memlabel-mem-symbol.2.0 : MEMLABEL
41 : memmask(39, 40) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L6%1%1 for loc_id 1037
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.0 : BV:128
7 : 127 : INT
8 : 96 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.2 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvadd(9, 15) : BV:32
17 : 95 : INT
18 : 64 : INT
19 : bvextract(6, 17, 18) : BV:32
20 : 8 : BV:32
21 : bvadd(10, 4, 20) : BV:32
22 : select(1, 2, 21, 13, 14) : BV:32
23 : bvadd(19, 22) : BV:32
24 : 63 : INT
25 : 32 : INT
26 : bvextract(6, 24, 25) : BV:32
27 : 4 : BV:32
28 : bvadd(10, 27, 4) : BV:32
29 : select(1, 2, 28, 13, 14) : BV:32
30 : bvadd(26, 29) : BV:32
31 : 31 : INT
32 : 0 : INT
33 : bvextract(6, 31, 32) : BV:32
34 : bvadd(10, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvadd(33, 35) : BV:32
37 : bvconcat(16, 23, 30, 36) : BV:128
38 : 16 : INT
39 : store(1, 2, 5, 37, 38, 14) : ARRAY[BV:32 -> BV:8]
40 : select(39, 2, 3, 38, 14) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L6%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1008
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 12 : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : 8 : BV:32
19 : bvadd(7, 8, 18) : BV:32
20 : select(5, 6, 19, 11, 12) : BV:32
21 : bvadd(17, 20) : BV:32
22 : 63 : INT
23 : 32 : INT
24 : bvextract(1, 22, 23) : BV:32
25 : 4 : BV:32
26 : bvadd(7, 25, 8) : BV:32
27 : select(5, 6, 26, 11, 12) : BV:32
28 : bvadd(24, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(1, 29, 30) : BV:32
32 : bvadd(7, 8) : BV:32
33 : select(5, 6, 32, 11, 12) : BV:32
34 : bvadd(31, 33) : BV:32
35 : bvconcat(14, 21, 28, 34) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1018
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : ite(15, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1002
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : 4294967280 { -16 } : BV:32
11 : eq(3, 10) : BOOL
12 : not(11) : BOOL
13 : andnot1(9, 12) : BOOL
14 : ite(13, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 4294967280 { -16 } : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : ite(17, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : bvconcat(5, 1) : BV:33
7 : 16 : BV:33
8 : bvadd(6, 7) : BV:33
9 : 32 : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(4, 10) : BOOL
12 : or(3, 11) : BOOL
13 : ite(12, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1005
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 16 : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : 0 : BV:1
11 : bvextract(1, 7, 7) : BV:1
12 : eq(10, 11) : BOOL
13 : eq(4, 11) : BOOL
14 : xor(13, 9) : BOOL
15 : and(12, 14) : BOOL
16 : iff(9, 15) : BOOL
17 : not(16) : BOOL
18 : or(3, 17) : BOOL
19 : ite(18, 4, 10) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1006
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : not(9) : BOOL
11 : ite(10, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : ite(14, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 1 : BV:1
10 : eq(9, 7) : BOOL
11 : 16 : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(9, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(8, 15) : BOOL
17 : ite(16, 9, 5) : BV:1
18 : 10 : INT
19 : bvextract(1, 18, 18) : BV:1
20 : eq(9, 19) : BOOL
21 : ite(20, 9, 5) : BV:1
22 : 9 : INT
23 : 8 : INT
24 : bvextract(1, 22, 23) : BV:2
25 : ite(14, 9, 5) : BV:1
26 : 4294967280 { -16 } : BV:32
27 : eq(6, 26) : BOOL
28 : ite(27, 9, 5) : BV:1
29 : 5 : INT
30 : bvextract(1, 29, 29) : BV:1
31 : 4 : INT
32 : bvextract(12, 31, 31) : BV:1
33 : eq(9, 32) : BOOL
34 : bvextract(6, 31, 31) : BV:1
35 : eq(9, 34) : BOOL
36 : xor(33, 35) : BOOL
37 : ite(36, 9, 5) : BV:1
38 : 3 : INT
39 : bvextract(1, 38, 38) : BV:1
40 : 1 : INT
41 : bvextract(1, 40, 40) : BV:1
42 : bvconcat(5, 6) : BV:33
43 : 16 : BV:33
44 : bvadd(42, 43) : BV:33
45 : 32 : INT
46 : bvextract(44, 45, 45) : BV:1
47 : eq(9, 46) : BOOL
48 : ite(47, 9, 5) : BV:1
49 : bvconcat(4, 17, 21, 24, 25, 28, 30, 37, 39, 5, 41, 48) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1012
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1013
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1014
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : ite(9, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1018
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1032
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-heap : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1034
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-symbol.1.0 : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1035
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1037
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : select(10, 2, 3, 8, 9) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 : BV:1
15 : ite(13, 1, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(2, 1) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 128000 : BV:32
14 : eq(13, 2) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : eq(2, 1) : BOOL
6 : or(4, 5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1005
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4294839296 { -128000 } : BV:32
6 : bvadd(2, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : bvextract(2, 7, 7) : BV:1
11 : eq(4, 10) : BOOL
12 : xor(11, 9) : BOOL
13 : and(11, 12) : BOOL
14 : iff(9, 13) : BOOL
15 : not(14) : BOOL
16 : or(3, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 4, 17) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1006
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 : BV:1
14 : ite(12, 1, 13) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294839296 { -128000 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 : INT
22 : 8 : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 128000 : BV:32
26 : eq(25, 6) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1012
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1013
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1014
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L2%1%0
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L2%1%0 for loc_id 1018
1 : input.dst.exreg.6.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L2%1%0 for loc_id 1019
1 : input.dst.exreg.7.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L2%1%0 for loc_id 1020
1 : input.dst.exreg.16.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L2%1%0 for loc_id 1021
1 : input.dst.exreg.8.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L2%1%0 for loc_id 1022
1 : input.dst.exreg.9.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L2%1%0 for loc_id 1023
1 : input.dst.exreg.10.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L2%1%0 for loc_id 1024
1 : input.dst.exreg.11.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L2%1%0 for loc_id 1025
1 : input.dst.exreg.12.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L2%1%0 for loc_id 1026
1 : input.dst.exreg.13.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L2%1%0 for loc_id 1027
1 : input.dst.exreg.14.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L2%1%0 for loc_id 1028
1 : input.dst.exreg.15.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L2%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1018
1 : input.dst.exreg.6.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1019
1 : input.dst.exreg.7.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1020
1 : input.dst.exreg.16.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1021
1 : input.dst.exreg.8.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1022
1 : input.dst.exreg.9.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1023
1 : input.dst.exreg.10.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1024
1 : input.dst.exreg.11.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1025
1 : input.dst.exreg.12.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1026
1 : input.dst.exreg.13.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1027
1 : input.dst.exreg.14.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1028
1 : input.dst.exreg.15.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>L7%1%1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>L7%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1012
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1013
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1014
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1015
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1016
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1018
1 : input.dst.exreg.5.2 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1019
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1021
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1022
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1023
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1024
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1025
1 : input.dst.exreg.0.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1012
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1013
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1014
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>E0%0%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>E0%0%1 for loc_id 1015
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>E0%0%1 for loc_id 1016
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>E0%0%1 for loc_id 1018
1 : input.dst.exreg.5.2 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>E0%0%1 for loc_id 1019
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>E0%0%1 for loc_id 1021
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>E0%0%1 for loc_id 1022
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>E0%0%1 for loc_id 1023
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>E0%0%1 for loc_id 1024
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>E0%0%1 for loc_id 1025
1 : input.dst.exreg.0.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in dst
=Loc 0 in dst.
REGMEM
dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=Loc 2 in dst.
REGMEM
dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=Loc 3 in dst.
REGMEM
dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=Loc 4 in dst.
REGMEM
dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=Loc 5 in dst.
REGMEM
dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=Loc 6 in dst.
REGMEM
dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=Loc 7 in dst.
REGMEM
dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=Loc 1001 in dst.
REGMEM
dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=Loc 1002 in dst.
REGMEM
dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=Loc 1003 in dst.
REGMEM
dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=Loc 1004 in dst.
REGMEM
dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=Loc 1005 in dst.
REGMEM
dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=Loc 1006 in dst.
REGMEM
dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=Loc 1007 in dst.
REGMEM
dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=Loc 1008 in dst.
REGMEM
dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=Loc 1009 in dst.
REGMEM
dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=Loc 1010 in dst.
REGMEM
dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=Loc 1011 in dst.
REGMEM
dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=Loc 1012 in dst.
REGMEM
dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=Loc 1013 in dst.
REGMEM
dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=Loc 1014 in dst.
REGMEM
dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=Loc 1015 in dst.
LLVMVAR
dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=Loc 1016 in dst.
REGMEM
dst.esp.E0%0%1
1 : input.dst.esp.E0%0%1 : BV:32
=Loc 1017 in dst.
REGMEM
dst.esp.L0%1%1
1 : input.dst.esp.L0%1%1 : BV:32
=Loc 1018 in dst.
REGMEM
dst.hidden_reg.0
1 : input.dst.hidden_reg.0 : BV:32
=Loc 1019 in dst.
REGMEM
dst.hidden_reg.1
1 : input.dst.hidden_reg.1 : BOOL
=Loc 1020 in dst.
REGMEM
dst.hidden_reg.10
1 : input.dst.hidden_reg.10 : BOOL
=Loc 1021 in dst.
REGMEM
dst.hidden_reg.2
1 : input.dst.hidden_reg.2 : BOOL
=Loc 1022 in dst.
REGMEM
dst.hidden_reg.3
1 : input.dst.hidden_reg.3 : BOOL
=Loc 1023 in dst.
REGMEM
dst.hidden_reg.4
1 : input.dst.hidden_reg.4 : BOOL
=Loc 1024 in dst.
REGMEM
dst.hidden_reg.5
1 : input.dst.hidden_reg.5 : BOOL
=Loc 1025 in dst.
REGMEM
dst.hidden_reg.6
1 : input.dst.hidden_reg.6 : BOOL
=Loc 1026 in dst.
REGMEM
dst.hidden_reg.7
1 : input.dst.hidden_reg.7 : BOOL
=Loc 1027 in dst.
REGMEM
dst.hidden_reg.8
1 : input.dst.hidden_reg.8 : BOOL
=Loc 1028 in dst.
REGMEM
dst.hidden_reg.9
1 : input.dst.hidden_reg.9 : BOOL
=Loc 1029 in dst.
REGMEM
econd
1 : input.econd : BOOL
=Loc 1032 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-heap
=Loc 1033 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-esp
=Loc 1034 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-symbol.1.0
=Loc 1035 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-symbol.2.0
=Loc 1036 in dst.
SLOT
=memname
dst.mem
=addr
1 : input_stack_pointer_const : BV:32
=nbytes
4
=bigendian
false
=Loc 1037 in dst.
SLOT
=memname
dst.mem
=addr
1 : dst_symbol_addr.1 : BV:32
=nbytes
16
=bigendian
false

=Alias analysis results in dst
=Alias analysis result in dst at L0%0%1
=Alias analysis result in dst at L0%0%1 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 3 (input.dst.exreg.0.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 4 (input.dst.exreg.0.4)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 5 (input.dst.exreg.0.5)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 6 (input.dst.exreg.0.6)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 7 (input.dst.exreg.0.7)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1009 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1010 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1011 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1012 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1013 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1014 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1015 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1016 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1017 (input.dst.esp.L0%1%1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1018 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1019 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1020 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1021 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1022 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1023 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1024 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1025 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1026 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1027 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1028 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1029 (input.econd)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1032 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1033 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1034 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1035 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1036 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1037 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, dst_symbol_addr.1, 16, false))
nullptr
=Alias analysis result in dst at L2%1%0
=Alias analysis result in dst at L2%1%0 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L2%1%0 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L2%1%0 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L2%1%0 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L2%1%0 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L2%1%0 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1009 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1010 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1011 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1012 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1013 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1014 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1015 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1016 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1017 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L2%1%0 for loc 1018 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1019 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1020 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1021 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1022 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1023 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1024 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1025 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1026 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1027 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1028 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1029 (input.econd)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1032 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1033 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1034 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1035 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1036 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L2%1%0 for loc 1037 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, dst_symbol_addr.1, 16, false))
nullptr
=Alias analysis result in dst at L6%1%1
=Alias analysis result in dst at L6%1%1 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L6%1%1 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L6%1%1 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L6%1%1 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L6%1%1 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L6%1%1 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1009 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1010 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1011 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1012 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1013 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1014 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1015 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1016 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1017 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L6%1%1 for loc 1018 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1019 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1020 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1021 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1022 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1023 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1024 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1025 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1026 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1027 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1028 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1029 (input.econd)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1032 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1033 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1034 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1035 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1036 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L6%1%1 for loc 1037 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, dst_symbol_addr.1, 16, false))
nullptr
=Alias analysis result in dst at L7%1%0
=Alias analysis result in dst at L7%1%0 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L7%1%0 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L7%1%0 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L7%1%0 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L7%1%0 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L7%1%0 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1009 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1010 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1011 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1012 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1013 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1014 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1015 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1016 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1017 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L7%1%0 for loc 1018 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1019 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1020 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1021 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1022 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1023 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1024 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1025 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1026 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1027 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1028 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1029 (input.econd)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1032 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1033 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1034 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1035 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1036 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L7%1%0 for loc 1037 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, dst_symbol_addr.1, 16, false))
nullptr
=Alias analysis result in dst at E0%0%1
=Alias analysis result in dst at E0%0%1 for loc 0 (input.dst.exreg.0.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 1001 (input.dst.exreg.10.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1002 (input.dst.exreg.11.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1003 (input.dst.exreg.12.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1004 (input.dst.exreg.13.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1005 (input.dst.exreg.14.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1006 (input.dst.exreg.15.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1007 (input.dst.exreg.16.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1009 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1010 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1011 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1012 (input.dst.exreg.7.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1013 (input.dst.exreg.8.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1014 (input.dst.exreg.9.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1015 (input.dst.llvm-indir_tgt)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 1016 (input.dst.esp.E0%0%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 1017 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 1018 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1019 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1020 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1021 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1022 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1023 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1024 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1025 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1026 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1027 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1028 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1029 (input.econd)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1032 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1033 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1034 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1035 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1036 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 1037 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, dst_symbol_addr.1, 16, false))
nullptr

=Liveness in dst
=live locs at L0%0%1
1032, 1034, 1035, 1037
=live locs at L2%1%0
0, 1008, 1032, 1034, 1035, 1037
=live locs at L6%1%1
0, 1008, 1013, 1032, 1034, 1035, 1037
=live locs at L7%1%0
1032, 1034, 1035, 1037
=live locs at E0%0%1
0, 1015, 1032, 1034, 1035, 1037

=Available expressions in dst

=sprel_maps in dst
=sprel_map at L0%0%1 in dst
=sprel_map at L2%1%0 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1017
17386 : input_stack_pointer_const : BV:32
=loc 1036
17387 : retaddr_const : BV:32
=sprel_map at L6%1%1 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1017
17386 : input_stack_pointer_const : BV:32
=loc 1036
17387 : retaddr_const : BV:32
=sprel_map at L7%1%0 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1017
17386 : input_stack_pointer_const : BV:32
=loc 1036
17387 : retaddr_const : BV:32
=sprel_map at E0%0%1 in dst
=loc 0
17389 : 0 : BV:32
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
17398 : 4 : BV:32
17982 : bvadd(17386, 17398) : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1001
17668 : 0 : BV:1
=loc 1002
17668 : 0 : BV:1
=loc 1003
17668 : 0 : BV:1
=loc 1004
17656 : 1 : BV:1
=loc 1005
17656 : 1 : BV:1
=loc 1006
17656 : 1 : BV:1
=loc 1007
17656 : 1 : BV:1
=loc 1012
17656 : 1 : BV:1
=loc 1013
17668 : 0 : BV:1
=loc 1014
17668 : 0 : BV:1
=loc 1015
17387 : retaddr_const : BV:32
=loc 1016
17386 : input_stack_pointer_const : BV:32
17398 : 4 : BV:32
17982 : bvadd(17386, 17398) : BV:32
=loc 1017
17386 : input_stack_pointer_const : BV:32
=loc 1036
17387 : retaddr_const : BV:32
=graph_with_aliasing_done
=String-contents:
=Nextpc-map:
=TFGdone
=eqcheck_info
=eqcheck
=proof_filename s1221_s1221.gcc.eqchecker.O3.i386.ALL.proof
=function_name s1221
=fixed_reg_mappings begin
0 : 0 : 0
0 : 4 : 4
=fixed_reg_mappings end
=rodata_map begin
=rodata_map end
=dst_iseq
.i0: movdqa %exvr5.3w:C_SYMBOL0,%exvr2.0 #
.i1: movl $0x10,%exvr0.0d #
.i2: paddd %exvr5.3w:C_SYMBOL1(%exvr0.0d),%exvr2.0 #
.i3: addl $0x10,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i4: movaps %exvr2.0,%exvr5.3w:C_SYMBOL0*1+-16/umask/32(%exvr0.0d) #
.i5: cmpl $0x1f400,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i6: jne .i2 #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i7: xorl %exvr0.0d,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i8: retl  #%exvr0.4d,%exvr5.2,%exvr0.2d,%exvr0.0d,%exvr0.7d,%exvr0.6d,%exvr0.5d,%exvr0.3d
=dst_iseq done
=dst_insn_pcs
0 : 0x0
1 : 0x4
2 : 0xc
3 : 0x11
4 : 0x18
5 : 0x20
6 : 0x23
7 : 0x2a
8 : 0x2f
=dst_insn_pcs done
=Memlabel assertions
=Symbol-map:
C_SYMBOL1 : b : 128000 : 16 : 0
C_SYMBOL2 : a : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=rodata_map begin
=rodata_map end
=assertion
1 : memlabel-mem-symbol.2.0_begin : BV:32
2 : memlabel-mem-symbol.2.0_end : BV:32
3 : bvule(1, 2) : BOOL
4 : 128000 : BV:32
5 : 4294967295 { -1 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : memlabel-mem-symbol.1.0_begin : BV:32
11 : memlabel-mem-symbol.1.0_end : BV:32
12 : bvule(10, 11) : BOOL
13 : and(9, 12) : BOOL
14 : bvadd(10, 6) : BV:32
15 : eq(11, 14) : BOOL
16 : and(13, 15) : BOOL
17 : memlabel-mem-esp_begin : BV:32
18 : memlabel-mem-esp_end : BV:32
19 : bvule(17, 18) : BOOL
20 : and(16, 19) : BOOL
21 : stack.size : BV:32
22 : bvadd(21, 5) : BV:32
23 : bvadd(17, 22) : BV:32
24 : eq(18, 23) : BOOL
25 : and(20, 24) : BOOL
26 : bvuge(1, 10) : BOOL
27 : bvule(1, 11) : BOOL
28 : and(26, 27) : BOOL
29 : bvuge(2, 10) : BOOL
30 : bvule(2, 11) : BOOL
31 : and(29, 30) : BOOL
32 : not(31) : BOOL
33 : andnot1(28, 32) : BOOL
34 : bvuge(1, 17) : BOOL
35 : bvule(1, 18) : BOOL
36 : and(34, 35) : BOOL
37 : bvuge(2, 17) : BOOL
38 : bvule(2, 18) : BOOL
39 : and(37, 38) : BOOL
40 : not(39) : BOOL
41 : andnot1(36, 40) : BOOL
42 : and(33, 41) : BOOL
43 : bvuge(10, 1) : BOOL
44 : bvule(10, 2) : BOOL
45 : and(43, 44) : BOOL
46 : bvuge(11, 1) : BOOL
47 : bvule(11, 2) : BOOL
48 : and(46, 47) : BOOL
49 : not(48) : BOOL
50 : andnot1(45, 49) : BOOL
51 : and(42, 50) : BOOL
52 : bvuge(10, 17) : BOOL
53 : bvule(10, 18) : BOOL
54 : and(52, 53) : BOOL
55 : bvuge(11, 17) : BOOL
56 : bvule(11, 18) : BOOL
57 : and(55, 56) : BOOL
58 : not(57) : BOOL
59 : andnot1(54, 58) : BOOL
60 : and(51, 59) : BOOL
61 : bvuge(17, 1) : BOOL
62 : bvule(17, 2) : BOOL
63 : and(61, 62) : BOOL
64 : bvuge(18, 1) : BOOL
65 : bvule(18, 2) : BOOL
66 : and(64, 65) : BOOL
67 : not(66) : BOOL
68 : andnot1(63, 67) : BOOL
69 : and(60, 68) : BOOL
70 : bvuge(17, 10) : BOOL
71 : bvule(17, 11) : BOOL
72 : and(70, 71) : BOOL
73 : bvuge(18, 10) : BOOL
74 : bvule(18, 11) : BOOL
75 : and(73, 74) : BOOL
76 : not(75) : BOOL
77 : andnot1(72, 76) : BOOL
78 : and(69, 77) : BOOL
79 : and(25, 78) : BOOL
80 : symbol.2 : BV:32
81 : 15 : BV:32
82 : bvand(80, 81) : BV:32
83 : 0 : BV:32
84 : eq(82, 83) : BOOL
85 : and(79, 84) : BOOL
86 : symbol.1 : BV:32
87 : bvand(86, 81) : BV:32
88 : eq(87, 83) : BOOL
89 : and(85, 88) : BOOL
90 : eq(86, 10) : BOOL
91 : eq(80, 1) : BOOL
92 : and(90, 91) : BOOL
93 : and(89, 92) : BOOL
94 : input_stack_pointer_const : BV:32
95 : bvule(17, 94) : BOOL
96 : bvule(94, 18) : BOOL
97 : and(95, 96) : BOOL
98 : 3 : BV:32
99 : bvadd(94, 98) : BV:32
100 : eq(99, 18) : BOOL
101 : and(97, 100) : BOOL
102 : and(93, 101) : BOOL
103 : 4294963200 { -4096 } : BV:32
104 : bvand(17, 103) : BV:32
105 : eq(104, 17) : BOOL
106 : 1 : BV:32
107 : bvadd(18, 106) : BV:32
108 : bvand(107, 103) : BV:32
109 : eq(108, 107) : BOOL
110 : and(105, 109) : BOOL
111 : and(102, 110) : BOOL
112 : dst_symbol_addr.1 : BV:32
113 : eq(86, 112) : BOOL
114 : dst_symbol_addr.2 : BV:32
115 : eq(80, 114) : BOOL
116 : and(113, 115) : BOOL
117 : and(111, 116) : BOOL
=concrete_assertion
1 : symbol.1 : BV:32
2 : 192000 : BV:32
3 : eq(1, 2) : BOOL
4 : symbol.2 : BV:32
5 : 52960 : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : dst_symbol_addr.1 : BV:32
9 : eq(8, 2) : BOOL
10 : and(7, 9) : BOOL
11 : dst_symbol_addr.2 : BV:32
12 : eq(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : input_stack_pointer_const : BV:32
15 : 2147450876 : BV:32
16 : eq(14, 15) : BOOL
17 : and(13, 16) : BOOL
18 : memlabel-mem-symbol.2.0_begin : BV:32
19 : eq(18, 5) : BOOL
20 : and(17, 19) : BOOL
21 : memlabel-mem-symbol.2.0_end : BV:32
22 : 180959 : BV:32
23 : eq(21, 22) : BOOL
24 : and(20, 23) : BOOL
25 : memlabel-mem-symbol.1.0_begin : BV:32
26 : eq(25, 2) : BOOL
27 : and(24, 26) : BOOL
28 : memlabel-mem-symbol.1.0_end : BV:32
29 : 319999 : BV:32
30 : eq(28, 29) : BOOL
31 : and(27, 30) : BOOL
32 : memlabel-mem-esp_begin : BV:32
33 : 454656 : BV:32
34 : eq(32, 33) : BOOL
35 : and(31, 34) : BOOL
36 : memlabel-mem-esp_end : BV:32
37 : 2147450879 : BV:32
38 : eq(36, 37) : BOOL
39 : and(35, 38) : BOOL
40 : stack.size : BV:32
41 : 2146996224 : BV:32
42 : eq(40, 41) : BOOL
43 : and(39, 42) : BOOL
=use_concrete_assertion : 1
=Memlabel assertions done
=llvm2ir 0
=eqcheck done
=graph_with_guessing
=Nodes: L0%0%1_L0%0%1 Lfor.body%1%1_L2%1%0 E0%0%1_E0%0%1
=Edges:
L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
Lfor.body%1%1_L2%1%0 => E0%0%1_E0%0%1
=graph done
=Node outputs: E0%0%1_E0%0%1
=Node outputs done for E0%0%1_E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : b : 128000 : 16 : 0
C_SYMBOL2 : a : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=dst.exreg.22.0
1 : input.dst.exreg.22.0 : BV:11
=dst.exreg.1.0
1 : input.dst.exreg.1.0 : BV:64
=dst.invisible_regs.1
1 : input.dst.invisible_reg.0.1 : BV:8
=dst.contains_float_op
1 : input.dst.contains_float_op : BOOL
=dst.exreg.20.0
1 : input.dst.exreg.20.0 : BV:48
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=dst.exreg.17.0
1 : input.dst.exreg.17.0 : BV:16
=dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=dst.invisible_regs.0
1 : input.dst.invisible_reg.0.0 : BV:8
=dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=dst.exreg.21.0
1 : input.dst.exreg.21.0 : BV:48
=dst.contains_unsupported_op
1 : input.dst.contains_unsupported_op : BOOL
=dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=dst.exreg.1.1
1 : input.dst.exreg.1.1 : BV:64
=dst.exreg.1.2
1 : input.dst.exreg.1.2 : BV:64
=dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=dst.exreg.2.3
1 : input.dst.exreg.2.3 : BV:128
=dst.exreg.2.4
1 : input.dst.exreg.2.4 : BV:128
=dst.exreg.2.5
1 : input.dst.exreg.2.5 : BV:128
=dst.exreg.2.6
1 : input.dst.exreg.2.6 : BV:128
=dst.exreg.2.7
1 : input.dst.exreg.2.7 : BV:128
=dst.exreg.3.0
1 : input.dst.exreg.3.0 : BV:256
=dst.exreg.3.1
1 : input.dst.exreg.3.1 : BV:256
=dst.exreg.3.2
1 : input.dst.exreg.3.2 : BV:256
=dst.exreg.3.3
1 : input.dst.exreg.3.3 : BV:256
=dst.exreg.3.4
1 : input.dst.exreg.3.4 : BV:256
=dst.exreg.3.5
1 : input.dst.exreg.3.5 : BV:256
=dst.exreg.3.6
1 : input.dst.exreg.3.6 : BV:256
=dst.exreg.3.7
1 : input.dst.exreg.3.7 : BV:256
=dst.exreg.3.8
1 : input.dst.exreg.3.8 : BV:256
=dst.exreg.3.9
1 : input.dst.exreg.3.9 : BV:256
=dst.exreg.3.10
1 : input.dst.exreg.3.10 : BV:256
=dst.exreg.3.11
1 : input.dst.exreg.3.11 : BV:256
=dst.exreg.3.12
1 : input.dst.exreg.3.12 : BV:256
=dst.exreg.3.13
1 : input.dst.exreg.3.13 : BV:256
=dst.exreg.3.15
1 : input.dst.exreg.3.15 : BV:256
=dst.exreg.2.2
1 : input.dst.exreg.2.2 : BV:128
=dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=dst.exreg.4.1
1 : input.dst.exreg.4.1 : BV:80
=dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=dst.exreg.3.14
1 : input.dst.exreg.3.14 : BV:256
=dst.exreg.4.0
1 : input.dst.exreg.4.0 : BV:80
=dst.exreg.4.2
1 : input.dst.exreg.4.2 : BV:80
=dst.exreg.4.3
1 : input.dst.exreg.4.3 : BV:80
=dst.exreg.4.4
1 : input.dst.exreg.4.4 : BV:80
=dst.exreg.4.5
1 : input.dst.exreg.4.5 : BV:80
=dst.exreg.4.6
1 : input.dst.exreg.4.6 : BV:80
=dst.exreg.4.7
1 : input.dst.exreg.4.7 : BV:80
=dst.exreg.5.0
1 : input.dst.exreg.5.0 : BV:16
=dst.exreg.5.1
1 : input.dst.exreg.5.1 : BV:16
=dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=dst.exreg.5.4
1 : input.dst.exreg.5.4 : BV:16
=dst.exreg.5.5
1 : input.dst.exreg.5.5 : BV:16
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=dst.exreg.0.1
1 : input.dst.exreg.0.1 : BV:32
=dst.exreg.1.3
1 : input.dst.exreg.1.3 : BV:64
=dst.exreg.1.4
1 : input.dst.exreg.1.4 : BV:64
=dst.exreg.1.5
1 : input.dst.exreg.1.5 : BV:64
=dst.exreg.1.6
1 : input.dst.exreg.1.6 : BV:64
=dst.exreg.1.7
1 : input.dst.exreg.1.7 : BV:64
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=dst.exreg.19.0
1 : input.dst.exreg.19.0 : BV:16
=dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=dst.exreg.18.0
1 : input.dst.exreg.18.0 : BV:16
=dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=state_end

=Node assumes and asserts: L0%0%1_L0%0%1
=L0%0%1_L0%0%1 assume pred 0
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=L0%0%1_L0%0%1 assume predicate_set done
=L0%0%1_L0%0%1 assert predicate_set done
=Node assumes and asserts: Lfor.body%1%1_L2%1%0
=Lfor.body%1%1_L2%1%0 assume predicate_set done
=Lfor.body%1%1_L2%1%0 assert predicate_set done
=Node assumes and asserts: E0%0%1_E0%0%1
=E0%0%1_E0%0%1 assume predicate_set done
=E0%0%1_E0%0%1 assert pred 0
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=E0%0%1_E0%0%1 assert pred 1
=Comment
exit.llvm-%ret-reg
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : input.dst.exreg.0.0 : BV:32
=predicate done
=E0%0%1_E0%0%1 assert pred 2
=Comment
exit.src.llvm-indir_tgt
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.llvm-indir_tgt : BV:32
=predicate done
=E0%0%1_E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.dst.0 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.1
mlvar.dst.1 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.2
mlvar.dst.2 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.3
mlvar.dst.3 : memlabel-mem-esp
=memlabel_map.4
mlvar.dst.4 : memlabel-mem-esp
=memlabel_map.5
mlvar.llvm.s1221.0 : memlabel-mem-symbol.1.0
=memlabel_map.6
mlvar.llvm.s1221.1 : memlabel-mem-symbol.2.0
=memlabel_map.7
mlvar.llvm.s1221.2 : memlabel-mem-symbol.1.0
=Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=Edge.dst_tfg_full_pathset done

=Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=Edge.dst_tfg_full_pathset done

=Edge: Lfor.body%1%1_L2%1%0 => E0%0%1_E0%0%1
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to E0%0%1 at unroll 8 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))+((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge3
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.end%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge4
=Edge.src_tfg_full_pathset.Edge: Lfor.end%1%1 => E0%0%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:  ret i32 0, !dbg !32
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L2%1%0 to E0%0%1 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*((L6%1%1=>L7%1%0)*(L7%1%0=>E0%0%1)))
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L7%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.dst_tfg_full_pathset.Edge: L7%1%0 => E0%0%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.E0%0%1
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.hidden_reg.3
1 : input.dst.exreg.0.6 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.0.5 : BV:32
=dst.hidden_reg.5
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.0.3 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.0.7 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.4 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=dst.hidden_reg.0
1 : input.dst.exreg.5.2 : BV:16
=dst.hidden_reg.6
1 : input.dst.exreg.0.2 : BV:32
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset done

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicates at E0%0%1_E0%0%1
=predicates at E0%0%1_E0%0%1 predicate# 0
=Comment
exit.src.llvm-indir_tgt
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : retaddr_const : BV:32
=predicate done
=predicates at E0%0%1_E0%0%1 predicate# 1
=Comment
exit.llvm-%ret-reg
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=predicates at E0%0%1_E0%0%1 predicate# 2
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=predicates at E0%0%1_E0%0%1 done
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in s1221

=Alias analysis results in s1221
=Alias analysis result in s1221 at L0%0%1_L0%0%1
=Alias analysis result in s1221 at Lfor.body%1%1_L2%1%0
=Alias analysis result in s1221 at E0%0%1_E0%0%1

=Liveness in s1221
=live locs at L0%0%1_L0%0%1

=live locs at Lfor.body%1%1_L2%1%0

=live locs at E0%0%1_E0%0%1


=Available expressions in s1221

=sprel_maps in s1221
=sprel_map at L0%0%1_L0%0%1 in s1221
=sprel_map at Lfor.body%1%1_L2%1%0 in s1221
=sprel_map at E0%0%1_E0%0%1 in s1221
=graph_with_aliasing_done
=Memlabel assertions
=Symbol-map:
C_SYMBOL1 : b : 128000 : 16 : 0
C_SYMBOL2 : a : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=rodata_map begin
=rodata_map end
=assertion
1 : memlabel-mem-symbol.2.0_begin : BV:32
2 : memlabel-mem-symbol.2.0_end : BV:32
3 : bvule(1, 2) : BOOL
4 : 128000 : BV:32
5 : 4294967295 { -1 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : memlabel-mem-symbol.1.0_begin : BV:32
11 : memlabel-mem-symbol.1.0_end : BV:32
12 : bvule(10, 11) : BOOL
13 : and(9, 12) : BOOL
14 : bvadd(10, 6) : BV:32
15 : eq(11, 14) : BOOL
16 : and(13, 15) : BOOL
17 : memlabel-mem-esp_begin : BV:32
18 : memlabel-mem-esp_end : BV:32
19 : bvule(17, 18) : BOOL
20 : and(16, 19) : BOOL
21 : stack.size : BV:32
22 : bvadd(21, 5) : BV:32
23 : bvadd(17, 22) : BV:32
24 : eq(18, 23) : BOOL
25 : and(20, 24) : BOOL
26 : bvuge(1, 10) : BOOL
27 : bvule(1, 11) : BOOL
28 : and(26, 27) : BOOL
29 : bvuge(2, 10) : BOOL
30 : bvule(2, 11) : BOOL
31 : and(29, 30) : BOOL
32 : not(31) : BOOL
33 : andnot1(28, 32) : BOOL
34 : bvuge(1, 17) : BOOL
35 : bvule(1, 18) : BOOL
36 : and(34, 35) : BOOL
37 : bvuge(2, 17) : BOOL
38 : bvule(2, 18) : BOOL
39 : and(37, 38) : BOOL
40 : not(39) : BOOL
41 : andnot1(36, 40) : BOOL
42 : and(33, 41) : BOOL
43 : bvuge(10, 1) : BOOL
44 : bvule(10, 2) : BOOL
45 : and(43, 44) : BOOL
46 : bvuge(11, 1) : BOOL
47 : bvule(11, 2) : BOOL
48 : and(46, 47) : BOOL
49 : not(48) : BOOL
50 : andnot1(45, 49) : BOOL
51 : and(42, 50) : BOOL
52 : bvuge(10, 17) : BOOL
53 : bvule(10, 18) : BOOL
54 : and(52, 53) : BOOL
55 : bvuge(11, 17) : BOOL
56 : bvule(11, 18) : BOOL
57 : and(55, 56) : BOOL
58 : not(57) : BOOL
59 : andnot1(54, 58) : BOOL
60 : and(51, 59) : BOOL
61 : bvuge(17, 1) : BOOL
62 : bvule(17, 2) : BOOL
63 : and(61, 62) : BOOL
64 : bvuge(18, 1) : BOOL
65 : bvule(18, 2) : BOOL
66 : and(64, 65) : BOOL
67 : not(66) : BOOL
68 : andnot1(63, 67) : BOOL
69 : and(60, 68) : BOOL
70 : bvuge(17, 10) : BOOL
71 : bvule(17, 11) : BOOL
72 : and(70, 71) : BOOL
73 : bvuge(18, 10) : BOOL
74 : bvule(18, 11) : BOOL
75 : and(73, 74) : BOOL
76 : not(75) : BOOL
77 : andnot1(72, 76) : BOOL
78 : and(69, 77) : BOOL
79 : and(25, 78) : BOOL
80 : symbol.2 : BV:32
81 : 15 : BV:32
82 : bvand(80, 81) : BV:32
83 : 0 : BV:32
84 : eq(82, 83) : BOOL
85 : and(79, 84) : BOOL
86 : symbol.1 : BV:32
87 : bvand(86, 81) : BV:32
88 : eq(87, 83) : BOOL
89 : and(85, 88) : BOOL
90 : eq(86, 10) : BOOL
91 : eq(80, 1) : BOOL
92 : and(90, 91) : BOOL
93 : and(89, 92) : BOOL
94 : input_stack_pointer_const : BV:32
95 : bvule(17, 94) : BOOL
96 : bvule(94, 18) : BOOL
97 : and(95, 96) : BOOL
98 : 3 : BV:32
99 : bvadd(94, 98) : BV:32
100 : eq(99, 18) : BOOL
101 : and(97, 100) : BOOL
102 : and(93, 101) : BOOL
103 : 4294963200 { -4096 } : BV:32
104 : bvand(17, 103) : BV:32
105 : eq(104, 17) : BOOL
106 : 1 : BV:32
107 : bvadd(18, 106) : BV:32
108 : bvand(107, 103) : BV:32
109 : eq(108, 107) : BOOL
110 : and(105, 109) : BOOL
111 : and(102, 110) : BOOL
112 : dst_symbol_addr.1 : BV:32
113 : eq(86, 112) : BOOL
114 : dst_symbol_addr.2 : BV:32
115 : eq(80, 114) : BOOL
116 : and(113, 115) : BOOL
117 : and(111, 116) : BOOL
=concrete_assertion
1 : symbol.1 : BV:32
2 : 192000 : BV:32
3 : eq(1, 2) : BOOL
4 : symbol.2 : BV:32
5 : 52960 : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : dst_symbol_addr.1 : BV:32
9 : eq(8, 2) : BOOL
10 : and(7, 9) : BOOL
11 : dst_symbol_addr.2 : BV:32
12 : eq(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : input_stack_pointer_const : BV:32
15 : 2147450876 : BV:32
16 : eq(14, 15) : BOOL
17 : and(13, 16) : BOOL
18 : memlabel-mem-symbol.2.0_begin : BV:32
19 : eq(18, 5) : BOOL
20 : and(17, 19) : BOOL
21 : memlabel-mem-symbol.2.0_end : BV:32
22 : 180959 : BV:32
23 : eq(21, 22) : BOOL
24 : and(20, 23) : BOOL
25 : memlabel-mem-symbol.1.0_begin : BV:32
26 : eq(25, 2) : BOOL
27 : and(24, 26) : BOOL
28 : memlabel-mem-symbol.1.0_end : BV:32
29 : 319999 : BV:32
30 : eq(28, 29) : BOOL
31 : and(27, 30) : BOOL
32 : memlabel-mem-esp_begin : BV:32
33 : 454656 : BV:32
34 : eq(32, 33) : BOOL
35 : and(31, 34) : BOOL
36 : memlabel-mem-esp_end : BV:32
37 : 2147450879 : BV:32
38 : eq(36, 37) : BOOL
39 : and(35, 38) : BOOL
40 : stack.size : BV:32
41 : 2146996224 : BV:32
42 : eq(40, 41) : BOOL
43 : and(39, 42) : BOOL
=use_concrete_assertion : 0
=Memlabel assertions done
=counterexamples at pc L0%0%1_L0%0%1
=pc L0%0%1_L0%0%1 nodece 0
=pc L0%0%1_L0%0%1 nodece 0 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1714636915
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 0 nodece_path
=pc L0%0%1_L0%0%1 nodece 0 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 0 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1714636915
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 1
=pc L0%0%1_L0%0%1 nodece 1 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 1 nodece_path
=pc L0%0%1_L0%0%1 nodece 1 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 1 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 2
=pc L0%0%1_L0%0%1 nodece 2 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 2 nodece_path
=pc L0%0%1_L0%0%1 nodece 2 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 2 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 3
=pc L0%0%1_L0%0%1 nodece 3 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 3 nodece_path
=pc L0%0%1_L0%0%1 nodece 3 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 3 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 4
=pc L0%0%1_L0%0%1 nodece 4 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1967681095
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 4 nodece_path
=pc L0%0%1_L0%0%1 nodece 4 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 4 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1967681095
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 5
=pc L0%0%1_L0%0%1 nodece 5 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3751173222
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 5 nodece_path
=pc L0%0%1_L0%0%1 nodece 5 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 5 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3751173222
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 6
=pc L0%0%1_L0%0%1 nodece 6 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192000 ) -> 2, ( 192004 ) -> 1, ( 192006 ) -> 16, ( 192008 ) -> 47, ( 192009 ) -> 140, ( 192010 ) -> 45, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192000 ) -> 2, ( 192004 ) -> 1, ( 192006 ) -> 16, ( 192008 ) -> 47, ( 192009 ) -> 140, ( 192010 ) -> 45, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 192000 ) -> 2, ( 192004 ) -> 1, ( 192006 ) -> 16, ( 192008 ) -> 47, ( 192009 ) -> 140, ( 192010 ) -> 45, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 2 : BV:32
=unaliased_memslot.0
1 : 1048577 : BV:32
=unaliased_memslot.1
1 : 2985007 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
231602422
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 6 nodece_path
=pc L0%0%1_L0%0%1 nodece 6 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 6 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192000 ) -> 2, ( 192004 ) -> 1, ( 192006 ) -> 16, ( 192008 ) -> 47, ( 192009 ) -> 140, ( 192010 ) -> 45, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192000 ) -> 2, ( 192004 ) -> 1, ( 192006 ) -> 16, ( 192008 ) -> 47, ( 192009 ) -> 140, ( 192010 ) -> 45, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 192000 ) -> 2, ( 192004 ) -> 1, ( 192006 ) -> 16, ( 192008 ) -> 47, ( 192009 ) -> 140, ( 192010 ) -> 45, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 2 : BV:32
=unaliased_memslot.0
1 : 1048577 : BV:32
=unaliased_memslot.1
1 : 2985007 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
231602422
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 7
=pc L0%0%1_L0%0%1 nodece 7 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192008 ) -> 255, ( 192009 ) -> 255, ( 192010 ) -> 255, ( 192011 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192008 ) -> 255, ( 192009 ) -> 255, ( 192010 ) -> 255, ( 192011 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 192008 ) -> 255, ( 192009 ) -> 255, ( 192010 ) -> 255, ( 192011 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1389867269
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 7 nodece_path
=pc L0%0%1_L0%0%1 nodece 7 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 7 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192008 ) -> 255, ( 192009 ) -> 255, ( 192010 ) -> 255, ( 192011 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192008 ) -> 255, ( 192009 ) -> 255, ( 192010 ) -> 255, ( 192011 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 192008 ) -> 255, ( 192009 ) -> 255, ( 192010 ) -> 255, ( 192011 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1389867269
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 8
=pc L0%0%1_L0%0%1 nodece 8 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192011 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192011 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 192011 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 2147483648 { -2147483648 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
780821396
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 8 nodece_path
=pc L0%0%1_L0%0%1 nodece 8 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 8 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192011 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192011 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 192011 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 2147483648 { -2147483648 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
780821396
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 9
=pc L0%0%1_L0%0%1 nodece 9 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192012 ) -> 1, ( 192013 ) -> 67, ( 192014 ) -> 65, ( 192015 ) -> 7, ( 52980 ) -> 20, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192012 ) -> 1, ( 192013 ) -> 67, ( 192014 ) -> 65, ( 192015 ) -> 7, ( 52980 ) -> 20, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 192012 ) -> 1, ( 192013 ) -> 67, ( 192014 ) -> 65, ( 192015 ) -> 7, ( 52980 ) -> 20, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 121717505 : BV:32
=unaliased_memslot.3
1 : 20 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
950390868
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 9 nodece_path
=pc L0%0%1_L0%0%1 nodece 9 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 9 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192012 ) -> 1, ( 192013 ) -> 67, ( 192014 ) -> 65, ( 192015 ) -> 7, ( 52980 ) -> 20, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192012 ) -> 1, ( 192013 ) -> 67, ( 192014 ) -> 65, ( 192015 ) -> 7, ( 52980 ) -> 20, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 192012 ) -> 1, ( 192013 ) -> 67, ( 192014 ) -> 65, ( 192015 ) -> 7, ( 52980 ) -> 20, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 121717505 : BV:32
=unaliased_memslot.3
1 : 20 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
950390868
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 10
=pc L0%0%1_L0%0%1 nodece 10 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192012 ) -> 255, ( 192013 ) -> 255, ( 192014 ) -> 255, ( 192015 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192012 ) -> 255, ( 192013 ) -> 255, ( 192014 ) -> 255, ( 192015 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 192012 ) -> 255, ( 192013 ) -> 255, ( 192014 ) -> 255, ( 192015 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
255789528
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 10 nodece_path
=pc L0%0%1_L0%0%1 nodece 10 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 10 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192012 ) -> 255, ( 192013 ) -> 255, ( 192014 ) -> 255, ( 192015 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192012 ) -> 255, ( 192013 ) -> 255, ( 192014 ) -> 255, ( 192015 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 192012 ) -> 255, ( 192013 ) -> 255, ( 192014 ) -> 255, ( 192015 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
255789528
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 11
=pc L0%0%1_L0%0%1 nodece 11 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192015 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192015 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 192015 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1266235189
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 11 nodece_path
=pc L0%0%1_L0%0%1 nodece 11 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 11 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192015 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192015 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 192015 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1266235189
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 12
=pc L0%0%1_L0%0%1 nodece 12 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1974806403
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 12 nodece_path
=pc L0%0%1_L0%0%1 nodece 12 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 12 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1974806403
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 13
=pc L0%0%1_L0%0%1 nodece 13 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1473144500
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 13 nodece_path
=pc L0%0%1_L0%0%1 nodece 13 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 13 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1473144500
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 14
=pc L0%0%1_L0%0%1 nodece 14 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 110 , m_adder -> 181)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 110 , m_adder -> 181)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2550174225
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 14 nodece_path
=pc L0%0%1_L0%0%1 nodece 14 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 14 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 110 , m_adder -> 181)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 110 , m_adder -> 181)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2550174225
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 15
=pc L0%0%1_L0%0%1 nodece 15 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1175526309
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 15 nodece_path
=pc L0%0%1_L0%0%1 nodece 15 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 15 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1175526309
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 16
=pc L0%0%1_L0%0%1 nodece 16 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1586903190
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 16 nodece_path
=pc L0%0%1_L0%0%1 nodece 16 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 16 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1586903190
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 17
=pc L0%0%1_L0%0%1 nodece 17 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 143 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 143 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2479875945
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 17 nodece_path
=pc L0%0%1_L0%0%1 nodece 17 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 17 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 143 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 143 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2479875945
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 18
=pc L0%0%1_L0%0%1 nodece 18 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
826047641
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 18 nodece_path
=pc L0%0%1_L0%0%1 nodece 18 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 18 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
826047641
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 19
=pc L0%0%1_L0%0%1 nodece 19 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1369356620
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 19 nodece_path
=pc L0%0%1_L0%0%1 nodece 19 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 19 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1369356620
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 20
=pc L0%0%1_L0%0%1 nodece 20 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 124 , m_adder -> 226)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 124 , m_adder -> 226)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2071134753
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 20 nodece_path
=pc L0%0%1_L0%0%1 nodece 20 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 20 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 124 , m_adder -> 226)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 124 , m_adder -> 226)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2071134753
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 21
=pc L0%0%1_L0%0%1 nodece 21 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
864101839
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 21 nodece_path
=pc L0%0%1_L0%0%1 nodece 21 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 21 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
864101839
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 22
=pc L0%0%1_L0%0%1 nodece 22 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1204275569
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 22 nodece_path
=pc L0%0%1_L0%0%1 nodece 22 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 22 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1204275569
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 23
=pc L0%0%1_L0%0%1 nodece 23 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 228 , m_adder -> 163)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 228 , m_adder -> 163)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3099932083
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 23 nodece_path
=pc L0%0%1_L0%0%1 nodece 23 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 23 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 228 , m_adder -> 163)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 228 , m_adder -> 163)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3099932083
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 24
=pc L0%0%1_L0%0%1 nodece 24 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52988 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52988 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52988 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 2 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1338299904
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 24 nodece_path
=pc L0%0%1_L0%0%1 nodece 24 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 24 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52988 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52988 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52988 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 2 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1338299904
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 25
=pc L0%0%1_L0%0%1 nodece 25 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 192000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1543324176
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 25 nodece_path
=pc L0%0%1_L0%0%1 nodece 25 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 25 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 192000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1543324176
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 26
=pc L0%0%1_L0%0%1 nodece 26 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192004 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192004 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 192004 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1985433483
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 26 nodece_path
=pc L0%0%1_L0%0%1 nodece 26 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 26 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192004 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192004 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 192004 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1985433483
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 27
=pc L0%0%1_L0%0%1 nodece 27 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52976 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52976 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52976 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 7 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
217871137
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 27 nodece_path
=pc L0%0%1_L0%0%1 nodece 27 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 27 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52976 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52976 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52976 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 7 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
217871137
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 28
=pc L0%0%1_L0%0%1 nodece 28 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52984 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52984 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52984 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 6 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
337745691
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 28 nodece_path
=pc L0%0%1_L0%0%1 nodece 28 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 28 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52984 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52984 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52984 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 6 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
337745691
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 29
=pc L0%0%1_L0%0%1 nodece 29 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52976 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52976 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52976 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 4 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
524305153
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 29 nodece_path
=pc L0%0%1_L0%0%1 nodece 29 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 29 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52976 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52976 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52976 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 4 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
524305153
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 30
=pc L0%0%1_L0%0%1 nodece 30 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52984 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52984 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52984 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1763794427
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 30 nodece_path
=pc L0%0%1_L0%0%1 nodece 30 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 30 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52984 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52984 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52984 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1763794427
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 31
=pc L0%0%1_L0%0%1 nodece 31 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52980 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52980 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52980 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2059344234
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 31 nodece_path
=pc L0%0%1_L0%0%1 nodece 31 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 31 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52980 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52980 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52980 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2059344234
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 32
=pc L0%0%1_L0%0%1 nodece 32 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52984 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52984 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52984 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1582152040
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 32 nodece_path
=pc L0%0%1_L0%0%1 nodece 32 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 32 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52984 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52984 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52984 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1582152040
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 33
=pc L0%0%1_L0%0%1 nodece 33 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3791326208 { -503641088 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3791326208 { -503641088 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3791326208 { -503641088 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2181083132 { -2113884164 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2181083135 { -2113884161 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2147528704 { -2147438592 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3791454207 { -503513089 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1692359398
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 33 nodece_path
=pc L0%0%1_L0%0%1 nodece 33 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 33 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3791326208 { -503641088 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3791326208 { -503641088 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3791326208 { -503641088 } : BV:32
=input_stack_pointer_const
1 : 2181083132 { -2113884164 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2181083135 { -2113884161 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2147528704 { -2147438592 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3791454207 { -503513089 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1692359398
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 34
=pc L0%0%1_L0%0%1 nodece 34 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 396400 : BV:32
=symbol.2
1 : 4294837328 { -129968 } : BV:32
=dst_symbol_addr.1
1 : 396400 : BV:32
=dst_symbol_addr.2
1 : 4294837328 { -129968 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 396400 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294836220 { -131076 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 528384 : BV:32
=memlabel-mem-esp_end
1 : 4294836223 { -131073 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294965327 { -1969 } : BV:32
=stack.size
1 : 4294307840 { -659456 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294837328 { -129968 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 524399 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1308218417
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 34 nodece_path
=pc L0%0%1_L0%0%1 nodece 34 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 34 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 396400 : BV:32
=symbol.2
1 : 4294837328 { -129968 } : BV:32
=dst_symbol_addr.1
1 : 396400 : BV:32
=dst_symbol_addr.2
1 : 4294837328 { -129968 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 396400 : BV:32
=input_stack_pointer_const
1 : 4294836220 { -131076 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 528384 : BV:32
=memlabel-mem-esp_end
1 : 4294836223 { -131073 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294965327 { -1969 } : BV:32
=stack.size
1 : 4294307840 { -659456 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294837328 { -129968 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 524399 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1308218417
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 35
=pc L0%0%1_L0%0%1 nodece 35 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 86 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 86 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3220458079
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 35 nodece_path
=pc L0%0%1_L0%0%1 nodece 35 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 35 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 86 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 86 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3220458079
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 36
=pc L0%0%1_L0%0%1 nodece 36 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3881241760 { -413725536 } : BV:32
=symbol.2
1 : 4146991664 { -147975632 } : BV:32
=dst_symbol_addr.1
1 : 3881241760 { -413725536 } : BV:32
=dst_symbol_addr.2
1 : 4146991664 { -147975632 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3881241760 { -413725536 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3877220348 { -417746948 } : BV:32
=input.src.llvm-mem
1 : (( 3881241760 ) -> 20, ( 3881241765 ) -> 168, ( 3881241767 ) -> 160, ( 3881241764 ) -> 128, ( 3881241771 ) -> 93, ( 3881241768 ) -> 232, ( 3881241769 ) -> 231, ( 4146991682 ) -> 224, ( 4146991688 ) -> 101, ( 3881241762 ) -> 21, ( 4146991680 ) -> 147, ( 3881241763 ) -> 143, ( 3881241770 ) -> 5, ( 4146991683 ) -> 83, ( 4146991689 ) -> 144, ( 3881241761 ) -> 36, ( 4146991690 ) -> 114, ( 3881241766 ) -> 0, ( 4146991691 ) -> 204, () -> 96) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3881241760 ) -> 20, ( 3881241765 ) -> 168, ( 3881241767 ) -> 160, ( 3881241764 ) -> 128, ( 3881241771 ) -> 93, ( 3881241768 ) -> 232, ( 3881241769 ) -> 231, ( 4146991682 ) -> 224, ( 4146991688 ) -> 101, ( 3881241762 ) -> 21, ( 4146991680 ) -> 147, ( 3881241763 ) -> 143, ( 3881241770 ) -> 5, ( 4146991683 ) -> 83, ( 4146991689 ) -> 144, ( 3881241761 ) -> 36, ( 4146991690 ) -> 114, ( 3881241766 ) -> 0, ( 4146991691 ) -> 204, () -> 96) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3877220351 { -417746945 } : BV:32
=input.dst.mem
1 : (( 3881241760 ) -> 20, ( 3881241765 ) -> 168, ( 3881241767 ) -> 160, ( 3881241764 ) -> 128, ( 3881241771 ) -> 93, ( 3881241768 ) -> 232, ( 3881241769 ) -> 231, ( 4146991682 ) -> 224, ( 4146991688 ) -> 101, ( 3881241762 ) -> 21, ( 4146991680 ) -> 147, ( 3881241763 ) -> 143, ( 3881241770 ) -> 5, ( 4146991683 ) -> 83, ( 4146991689 ) -> 144, ( 3881241761 ) -> 36, ( 4146991690 ) -> 114, ( 3881241766 ) -> 0, ( 4146991691 ) -> 204, () -> 96) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4147119663 { -147847633 } : BV:32
=stack.size
1 : 3877220352 { -417746944 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4146991664 { -147975632 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3881369759 { -413597537 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1755644008
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 36 nodece_path
=pc L0%0%1_L0%0%1 nodece 36 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 36 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3881241760 { -413725536 } : BV:32
=symbol.2
1 : 4146991664 { -147975632 } : BV:32
=dst_symbol_addr.1
1 : 3881241760 { -413725536 } : BV:32
=dst_symbol_addr.2
1 : 4146991664 { -147975632 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3881241760 { -413725536 } : BV:32
=input_stack_pointer_const
1 : 3877220348 { -417746948 } : BV:32
=input.src.llvm-mem
1 : (( 3881241760 ) -> 20, ( 3881241765 ) -> 168, ( 3881241767 ) -> 160, ( 3881241764 ) -> 128, ( 3881241771 ) -> 93, ( 3881241768 ) -> 232, ( 3881241769 ) -> 231, ( 4146991682 ) -> 224, ( 4146991688 ) -> 101, ( 3881241762 ) -> 21, ( 4146991680 ) -> 147, ( 3881241763 ) -> 143, ( 3881241770 ) -> 5, ( 4146991683 ) -> 83, ( 4146991689 ) -> 144, ( 3881241761 ) -> 36, ( 4146991690 ) -> 114, ( 3881241766 ) -> 0, ( 4146991691 ) -> 204, () -> 96) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3881241760 ) -> 20, ( 3881241765 ) -> 168, ( 3881241767 ) -> 160, ( 3881241764 ) -> 128, ( 3881241771 ) -> 93, ( 3881241768 ) -> 232, ( 3881241769 ) -> 231, ( 4146991682 ) -> 224, ( 4146991688 ) -> 101, ( 3881241762 ) -> 21, ( 4146991680 ) -> 147, ( 3881241763 ) -> 143, ( 3881241770 ) -> 5, ( 4146991683 ) -> 83, ( 4146991689 ) -> 144, ( 3881241761 ) -> 36, ( 4146991690 ) -> 114, ( 3881241766 ) -> 0, ( 4146991691 ) -> 204, () -> 96) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3877220351 { -417746945 } : BV:32
=input.dst.mem
1 : (( 3881241760 ) -> 20, ( 3881241765 ) -> 168, ( 3881241767 ) -> 160, ( 3881241764 ) -> 128, ( 3881241771 ) -> 93, ( 3881241768 ) -> 232, ( 3881241769 ) -> 231, ( 4146991682 ) -> 224, ( 4146991688 ) -> 101, ( 3881241762 ) -> 21, ( 4146991680 ) -> 147, ( 3881241763 ) -> 143, ( 3881241770 ) -> 5, ( 4146991683 ) -> 83, ( 4146991689 ) -> 144, ( 3881241761 ) -> 36, ( 4146991690 ) -> 114, ( 3881241766 ) -> 0, ( 4146991691 ) -> 204, () -> 96) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4147119663 { -147847633 } : BV:32
=stack.size
1 : 3877220352 { -417746944 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4146991664 { -147975632 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3881369759 { -413597537 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1755644008
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 37
=pc L0%0%1_L0%0%1 nodece 37 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 2826265328 { -1468701968 } : BV:32
=symbol.2
1 : 1635447552 : BV:32
=dst_symbol_addr.1
1 : 2826265328 { -1468701968 } : BV:32
=dst_symbol_addr.2
1 : 1635447552 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2826265328 { -1468701968 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 695721980 : BV:32
=input.src.llvm-mem
1 : (( 2826265332 ) -> 16, ( 2826265337 ) -> 197, ( 2826265338 ) -> 65, ( 1635447577 ) -> 4, ( 1635447576 ) -> 18, ( 2826265336 ) -> 136, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2826265332 ) -> 16, ( 2826265337 ) -> 197, ( 2826265338 ) -> 65, ( 1635447577 ) -> 4, ( 1635447576 ) -> 18, ( 2826265336 ) -> 136, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 679047168 : BV:32
=memlabel-mem-esp_end
1 : 695721983 : BV:32
=input.dst.mem
1 : (( 2826265332 ) -> 16, ( 2826265337 ) -> 197, ( 2826265338 ) -> 65, ( 1635447577 ) -> 4, ( 1635447576 ) -> 18, ( 2826265336 ) -> 136, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1635575551 : BV:32
=stack.size
1 : 16674816 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1635447552 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2826393327 { -1468573969 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
175453149
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 37 nodece_path
=pc L0%0%1_L0%0%1 nodece 37 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 37 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 2826265328 { -1468701968 } : BV:32
=symbol.2
1 : 1635447552 : BV:32
=dst_symbol_addr.1
1 : 2826265328 { -1468701968 } : BV:32
=dst_symbol_addr.2
1 : 1635447552 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2826265328 { -1468701968 } : BV:32
=input_stack_pointer_const
1 : 695721980 : BV:32
=input.src.llvm-mem
1 : (( 2826265332 ) -> 16, ( 2826265337 ) -> 197, ( 2826265338 ) -> 65, ( 1635447577 ) -> 4, ( 1635447576 ) -> 18, ( 2826265336 ) -> 136, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2826265332 ) -> 16, ( 2826265337 ) -> 197, ( 2826265338 ) -> 65, ( 1635447577 ) -> 4, ( 1635447576 ) -> 18, ( 2826265336 ) -> 136, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 679047168 : BV:32
=memlabel-mem-esp_end
1 : 695721983 : BV:32
=input.dst.mem
1 : (( 2826265332 ) -> 16, ( 2826265337 ) -> 197, ( 2826265338 ) -> 65, ( 1635447577 ) -> 4, ( 1635447576 ) -> 18, ( 2826265336 ) -> 136, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1635575551 : BV:32
=stack.size
1 : 16674816 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1635447552 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2826393327 { -1468573969 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
175453149
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 38
=pc L0%0%1_L0%0%1 nodece 38 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 2147483155 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147483155 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 2147483155 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1615167308
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 38 nodece_path
=pc L0%0%1_L0%0%1 nodece 38 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 38 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 2147483155 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147483155 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 2147483155 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1615167308
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 39
=pc L0%0%1_L0%0%1 nodece 39 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 536942080 : BV:32
=symbol.2
1 : 159383008 : BV:32
=dst_symbol_addr.1
1 : 536942080 : BV:32
=dst_symbol_addr.2
1 : 159383008 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536942080 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 537100288 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 159511007 : BV:32
=stack.size
1 : 3757867008 { -537100288 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 159383008 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 537070079 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2059509848
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 39 nodece_path
=pc L0%0%1_L0%0%1 nodece 39 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 39 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 536942080 : BV:32
=symbol.2
1 : 159383008 : BV:32
=dst_symbol_addr.1
1 : 536942080 : BV:32
=dst_symbol_addr.2
1 : 159383008 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536942080 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 537100288 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 159511007 : BV:32
=stack.size
1 : 3757867008 { -537100288 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 159383008 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 537070079 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2059509848
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 40
=pc L0%0%1_L0%0%1 nodece 40 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3824880640 { -470086656 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3824880640 { -470086656 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3824880640 { -470086656 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2248191996 { -2046775300 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2248191999 { -2046775297 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2214637568 { -2080329728 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3825008639 { -469958657 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1470976763
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 40 nodece_path
=pc L0%0%1_L0%0%1 nodece 40 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 40 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3824880640 { -470086656 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3824880640 { -470086656 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3824880640 { -470086656 } : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2248191996 { -2046775300 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2248191999 { -2046775297 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2214637568 { -2080329728 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3825008639 { -469958657 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1470976763
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 41
=pc L0%0%1_L0%0%1 nodece 41 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 150)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 150)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2667246020
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 41 nodece_path
=pc L0%0%1_L0%0%1 nodece 41 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 41 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 150)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 150)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2667246020
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 42
=pc L0%0%1_L0%0%1 nodece 42 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 2978089984 { -1316877312 } : BV:32
=symbol.2
1 : 2889968656 { -1404998640 } : BV:32
=dst_symbol_addr.1
1 : 2978089984 { -1316877312 } : BV:32
=dst_symbol_addr.2
1 : 2889968656 { -1404998640 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2978089984 { -1316877312 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2820890620 { -1474076676 } : BV:32
=input.src.llvm-mem
1 : (( 2978089992 ) -> 8, ( 2889968680 ) -> 8, ( 2889968684 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2978089992 ) -> 8, ( 2889968680 ) -> 8, ( 2889968684 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 503316480 : BV:32
=memlabel-mem-esp_end
1 : 2820890623 { -1474076673 } : BV:32
=input.dst.mem
1 : (( 2978089992 ) -> 8, ( 2889968680 ) -> 8, ( 2889968684 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2890096655 { -1404870641 } : BV:32
=stack.size
1 : 2317574144 { -1977393152 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2889968656 { -1404998640 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2978217983 { -1316749313 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
322232273
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 42 nodece_path
=pc L0%0%1_L0%0%1 nodece 42 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 42 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 2978089984 { -1316877312 } : BV:32
=symbol.2
1 : 2889968656 { -1404998640 } : BV:32
=dst_symbol_addr.1
1 : 2978089984 { -1316877312 } : BV:32
=dst_symbol_addr.2
1 : 2889968656 { -1404998640 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2978089984 { -1316877312 } : BV:32
=input_stack_pointer_const
1 : 2820890620 { -1474076676 } : BV:32
=input.src.llvm-mem
1 : (( 2978089992 ) -> 8, ( 2889968680 ) -> 8, ( 2889968684 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2978089992 ) -> 8, ( 2889968680 ) -> 8, ( 2889968684 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 503316480 : BV:32
=memlabel-mem-esp_end
1 : 2820890623 { -1474076673 } : BV:32
=input.dst.mem
1 : (( 2978089992 ) -> 8, ( 2889968680 ) -> 8, ( 2889968684 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2890096655 { -1404870641 } : BV:32
=stack.size
1 : 2317574144 { -1977393152 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2889968656 { -1404998640 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2978217983 { -1316749313 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
322232273
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 43
=pc L0%0%1_L0%0%1 nodece 43 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4294193968 { -773328 } : BV:32
=symbol.2
1 : 4294754704 { -212592 } : BV:32
=dst_symbol_addr.1
1 : 4294193968 { -773328 } : BV:32
=dst_symbol_addr.2
1 : 4294754704 { -212592 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294193968 { -773328 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294193148 { -774148 } : BV:32
=input.src.llvm-mem
1 : (( 4294754724 ) -> 162, ( 4294193981 ) -> 0, ( 4294193976 ) -> 243, ( 4294193973 ) -> 0, ( 4294193972 ) -> 176, ( 4294754733 ) -> 0, ( 4294754732 ) -> 247, ( 4294754725 ) -> 0, ( 4294754728 ) -> 41, ( 4294193980 ) -> 75, ( 4294754721 ) -> 1, ( 4294754729 ) -> 1, ( 4294193969 ) -> 1, ( 4294193977 ) -> 1, () -> 132) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4294754724 ) -> 162, ( 4294193981 ) -> 0, ( 4294193976 ) -> 243, ( 4294193973 ) -> 0, ( 4294193972 ) -> 176, ( 4294754733 ) -> 0, ( 4294754732 ) -> 247, ( 4294754725 ) -> 0, ( 4294754728 ) -> 41, ( 4294193980 ) -> 75, ( 4294754721 ) -> 1, ( 4294754729 ) -> 1, ( 4294193969 ) -> 1, ( 4294193977 ) -> 1, () -> 132) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 8192 : BV:32
=memlabel-mem-esp_end
1 : 4294193151 { -774145 } : BV:32
=input.dst.mem
1 : (( 4294754724 ) -> 162, ( 4294193981 ) -> 0, ( 4294193976 ) -> 243, ( 4294193973 ) -> 0, ( 4294193972 ) -> 176, ( 4294754733 ) -> 0, ( 4294754732 ) -> 247, ( 4294754725 ) -> 0, ( 4294754728 ) -> 41, ( 4294193980 ) -> 75, ( 4294754721 ) -> 1, ( 4294754729 ) -> 1, ( 4294193969 ) -> 1, ( 4294193977 ) -> 1, () -> 132) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294882703 { -84593 } : BV:32
=stack.size
1 : 4294184960 { -782336 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294754704 { -212592 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294321967 { -645329 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
212993805
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 43 nodece_path
=pc L0%0%1_L0%0%1 nodece 43 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 43 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 4294193968 { -773328 } : BV:32
=symbol.2
1 : 4294754704 { -212592 } : BV:32
=dst_symbol_addr.1
1 : 4294193968 { -773328 } : BV:32
=dst_symbol_addr.2
1 : 4294754704 { -212592 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294193968 { -773328 } : BV:32
=input_stack_pointer_const
1 : 4294193148 { -774148 } : BV:32
=input.src.llvm-mem
1 : (( 4294754724 ) -> 162, ( 4294193981 ) -> 0, ( 4294193976 ) -> 243, ( 4294193973 ) -> 0, ( 4294193972 ) -> 176, ( 4294754733 ) -> 0, ( 4294754732 ) -> 247, ( 4294754725 ) -> 0, ( 4294754728 ) -> 41, ( 4294193980 ) -> 75, ( 4294754721 ) -> 1, ( 4294754729 ) -> 1, ( 4294193969 ) -> 1, ( 4294193977 ) -> 1, () -> 132) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4294754724 ) -> 162, ( 4294193981 ) -> 0, ( 4294193976 ) -> 243, ( 4294193973 ) -> 0, ( 4294193972 ) -> 176, ( 4294754733 ) -> 0, ( 4294754732 ) -> 247, ( 4294754725 ) -> 0, ( 4294754728 ) -> 41, ( 4294193980 ) -> 75, ( 4294754721 ) -> 1, ( 4294754729 ) -> 1, ( 4294193969 ) -> 1, ( 4294193977 ) -> 1, () -> 132) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 8192 : BV:32
=memlabel-mem-esp_end
1 : 4294193151 { -774145 } : BV:32
=input.dst.mem
1 : (( 4294754724 ) -> 162, ( 4294193981 ) -> 0, ( 4294193976 ) -> 243, ( 4294193973 ) -> 0, ( 4294193972 ) -> 176, ( 4294754733 ) -> 0, ( 4294754732 ) -> 247, ( 4294754725 ) -> 0, ( 4294754728 ) -> 41, ( 4294193980 ) -> 75, ( 4294754721 ) -> 1, ( 4294754729 ) -> 1, ( 4294193969 ) -> 1, ( 4294193977 ) -> 1, () -> 132) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294882703 { -84593 } : BV:32
=stack.size
1 : 4294184960 { -782336 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294754704 { -212592 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294321967 { -645329 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
212993805
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 44
=pc L0%0%1_L0%0%1 nodece 44 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 2147483152 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147483152 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 2147483152 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
90403228
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 44 nodece_path
=pc L0%0%1_L0%0%1 nodece 44 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 44 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 2147483152 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147483152 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 2147483152 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
90403228
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 45
=pc L0%0%1_L0%0%1 nodece 45 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 2048 : BV:32
=symbol.2
1 : 130048 : BV:32
=dst_symbol_addr.1
1 : 2048 : BV:32
=dst_symbol_addr.2
1 : 130048 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2048 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 2060 ) -> 2, ( 2052 ) -> 1, ( 130072 ) -> 4, ( 2056 ) -> 5, ( 130076 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2060 ) -> 2, ( 2052 ) -> 1, ( 130072 ) -> 4, ( 2056 ) -> 5, ( 130076 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 258048 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 2060 ) -> 2, ( 2052 ) -> 1, ( 130072 ) -> 4, ( 2056 ) -> 5, ( 130076 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 258047 : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 130048 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 130047 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1002809090
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 45 nodece_path
=pc L0%0%1_L0%0%1 nodece 45 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 45 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 2048 : BV:32
=symbol.2
1 : 130048 : BV:32
=dst_symbol_addr.1
1 : 2048 : BV:32
=dst_symbol_addr.2
1 : 130048 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2048 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 2060 ) -> 2, ( 2052 ) -> 1, ( 130072 ) -> 4, ( 2056 ) -> 5, ( 130076 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2060 ) -> 2, ( 2052 ) -> 1, ( 130072 ) -> 4, ( 2056 ) -> 5, ( 130076 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 258048 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 2060 ) -> 2, ( 2052 ) -> 1, ( 130072 ) -> 4, ( 2056 ) -> 5, ( 130076 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 258047 : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 130048 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 130047 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1002809090
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 46
=pc L0%0%1_L0%0%1 nodece 46 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4126870528 { -168096768 } : BV:32
=symbol.2
1 : 3623795728 { -671171568 } : BV:32
=dst_symbol_addr.1
1 : 4126870528 { -168096768 } : BV:32
=dst_symbol_addr.2
1 : 3623795728 { -671171568 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4126870528 { -168096768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2550181884 { -1744785412 } : BV:32
=input.src.llvm-mem
1 : (( 3623795752 ) -> 1, ( 4126870540 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3623795752 ) -> 1, ( 4126870540 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 2550181887 { -1744785409 } : BV:32
=input.dst.mem
1 : (( 3623795752 ) -> 1, ( 4126870540 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3623923727 { -671043569 } : BV:32
=stack.size
1 : 2550181888 { -1744785408 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3623795728 { -671171568 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4126998527 { -167968769 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
420982066
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 46 nodece_path
=pc L0%0%1_L0%0%1 nodece 46 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 46 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 4126870528 { -168096768 } : BV:32
=symbol.2
1 : 3623795728 { -671171568 } : BV:32
=dst_symbol_addr.1
1 : 4126870528 { -168096768 } : BV:32
=dst_symbol_addr.2
1 : 3623795728 { -671171568 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4126870528 { -168096768 } : BV:32
=input_stack_pointer_const
1 : 2550181884 { -1744785412 } : BV:32
=input.src.llvm-mem
1 : (( 3623795752 ) -> 1, ( 4126870540 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3623795752 ) -> 1, ( 4126870540 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 2550181887 { -1744785409 } : BV:32
=input.dst.mem
1 : (( 3623795752 ) -> 1, ( 4126870540 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3623923727 { -671043569 } : BV:32
=stack.size
1 : 2550181888 { -1744785408 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3623795728 { -671171568 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4126998527 { -167968769 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
420982066
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 47
=pc L0%0%1_L0%0%1 nodece 47 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 2147483152 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147483152 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 2147483152 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025924464
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 47 nodece_path
=pc L0%0%1_L0%0%1 nodece 47 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 47 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 2147483152 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147483152 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 2147483152 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025924464
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 48
=pc L0%0%1_L0%0%1 nodece 48 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3824880640 { -470086656 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3824880640 { -470086656 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3824880640 { -470086656 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2717954044 { -1577013252 } : BV:32
=input.src.llvm-mem
1 : (( 3824880640 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3824880640 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2717954047 { -1577013249 } : BV:32
=input.dst.mem
1 : (( 3824880640 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2684399616 { -1610567680 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3825008639 { -469958657 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1770385503
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 48 nodece_path
=pc L0%0%1_L0%0%1 nodece 48 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 48 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3824880640 { -470086656 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3824880640 { -470086656 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3824880640 { -470086656 } : BV:32
=input_stack_pointer_const
1 : 2717954044 { -1577013252 } : BV:32
=input.src.llvm-mem
1 : (( 3824880640 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3824880640 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2717954047 { -1577013249 } : BV:32
=input.dst.mem
1 : (( 3824880640 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2684399616 { -1610567680 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3825008639 { -469958657 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1770385503
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 49
=pc L0%0%1_L0%0%1 nodece 49 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 281616 : BV:32
=symbol.2
1 : 130976 : BV:32
=dst_symbol_addr.1
1 : 281616 : BV:32
=dst_symbol_addr.2
1 : 130976 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 281616 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4273819644 { -21147652 } : BV:32
=input.src.llvm-mem
1 : (( 130996 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 130996 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3112960 : BV:32
=memlabel-mem-esp_end
1 : 4273819647 { -21147649 } : BV:32
=input.dst.mem
1 : (( 130996 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 258975 : BV:32
=stack.size
1 : 4270706688 { -24260608 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 130976 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 409615 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
318792502
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 49 nodece_path
=pc L0%0%1_L0%0%1 nodece 49 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 49 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 281616 : BV:32
=symbol.2
1 : 130976 : BV:32
=dst_symbol_addr.1
1 : 281616 : BV:32
=dst_symbol_addr.2
1 : 130976 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 281616 : BV:32
=input_stack_pointer_const
1 : 4273819644 { -21147652 } : BV:32
=input.src.llvm-mem
1 : (( 130996 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 130996 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3112960 : BV:32
=memlabel-mem-esp_end
1 : 4273819647 { -21147649 } : BV:32
=input.dst.mem
1 : (( 130996 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 258975 : BV:32
=stack.size
1 : 4270706688 { -24260608 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 130976 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 409615 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
318792502
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 50
=pc L0%0%1_L0%0%1 nodece 50 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 2147483156 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147483156 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 2147483156 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1367410241
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 50 nodece_path
=pc L0%0%1_L0%0%1 nodece 50 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 50 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 2147483156 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147483156 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 2147483156 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1367410241
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 51
=pc L0%0%1_L0%0%1 nodece 51 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3824880640 { -470086656 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3824880640 { -470086656 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3824880640 { -470086656 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2248191996 { -2046775300 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2248191999 { -2046775297 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2214637568 { -2080329728 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3825008639 { -469958657 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
100995797
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 51 nodece_path
=pc L0%0%1_L0%0%1 nodece 51 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 51 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3824880640 { -470086656 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3824880640 { -470086656 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3824880640 { -470086656 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2248191996 { -2046775300 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2248191999 { -2046775297 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2214637568 { -2080329728 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3825008639 { -469958657 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
100995797
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 52
=pc L0%0%1_L0%0%1 nodece 52 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 536942080 : BV:32
=symbol.2
1 : 159383008 : BV:32
=dst_symbol_addr.1
1 : 536942080 : BV:32
=dst_symbol_addr.2
1 : 159383008 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536942080 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 537100288 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 159511007 : BV:32
=stack.size
1 : 3757867008 { -537100288 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 159383008 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 537070079 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1174208154
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 52 nodece_path
=pc L0%0%1_L0%0%1 nodece 52 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 52 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 536942080 : BV:32
=symbol.2
1 : 159383008 : BV:32
=dst_symbol_addr.1
1 : 536942080 : BV:32
=dst_symbol_addr.2
1 : 159383008 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536942080 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 537100288 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 159511007 : BV:32
=stack.size
1 : 3757867008 { -537100288 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 159383008 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 537070079 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1174208154
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 53
=pc L0%0%1_L0%0%1 nodece 53 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 53 , m_adder -> 117)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 53 , m_adder -> 117)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2205468655
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 53 nodece_path
=pc L0%0%1_L0%0%1 nodece 53 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 53 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 53 , m_adder -> 117)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 53 , m_adder -> 117)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2205468655
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 54
=pc L0%0%1_L0%0%1 nodece 54 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3824880640 { -470086656 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3824880640 { -470086656 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3824880640 { -470086656 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2248191996 { -2046775300 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2248191999 { -2046775297 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2214637568 { -2080329728 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3825008639 { -469958657 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
987496144
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 54 nodece_path
=pc L0%0%1_L0%0%1 nodece 54 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 54 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3824880640 { -470086656 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3824880640 { -470086656 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3824880640 { -470086656 } : BV:32
=callee_save_const.2
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2248191996 { -2046775300 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2248191999 { -2046775297 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2214637568 { -2080329728 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3825008639 { -469958657 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
987496144
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 55
=pc L0%0%1_L0%0%1 nodece 55 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 536942080 : BV:32
=symbol.2
1 : 159383008 : BV:32
=dst_symbol_addr.1
1 : 536942080 : BV:32
=dst_symbol_addr.2
1 : 159383008 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536942080 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 537100288 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 159511007 : BV:32
=stack.size
1 : 3757867008 { -537100288 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 159383008 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 537070079 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
93663325
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 55 nodece_path
=pc L0%0%1_L0%0%1 nodece 55 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 55 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 536942080 : BV:32
=symbol.2
1 : 159383008 : BV:32
=dst_symbol_addr.1
1 : 536942080 : BV:32
=dst_symbol_addr.2
1 : 159383008 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536942080 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 537100288 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 159511007 : BV:32
=stack.size
1 : 3757867008 { -537100288 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 159383008 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 537070079 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
93663325
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 56
=pc L0%0%1_L0%0%1 nodece 56 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 243 , m_adder -> 218)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 243 , m_adder -> 218)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
4208291689
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 56 nodece_path
=pc L0%0%1_L0%0%1 nodece 56 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 56 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 243 , m_adder -> 218)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 243 , m_adder -> 218)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
4208291689
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 57
=pc L0%0%1_L0%0%1 nodece 57 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3824880640 { -470086656 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3824880640 { -470086656 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3824880640 { -470086656 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2248191996 { -2046775300 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2248191999 { -2046775297 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2214637568 { -2080329728 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3825008639 { -469958657 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1367122594
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 57 nodece_path
=pc L0%0%1_L0%0%1 nodece 57 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 57 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3824880640 { -470086656 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3824880640 { -470086656 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3824880640 { -470086656 } : BV:32
=callee_save_const.1
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2248191996 { -2046775300 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2248191999 { -2046775297 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2214637568 { -2080329728 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3825008639 { -469958657 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1367122594
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 58
=pc L0%0%1_L0%0%1 nodece 58 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 536942080 : BV:32
=symbol.2
1 : 159383008 : BV:32
=dst_symbol_addr.1
1 : 536942080 : BV:32
=dst_symbol_addr.2
1 : 159383008 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536942080 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 537100288 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 159511007 : BV:32
=stack.size
1 : 3757867008 { -537100288 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 159383008 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 537070079 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1051183242
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 58 nodece_path
=pc L0%0%1_L0%0%1 nodece 58 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 58 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 536942080 : BV:32
=symbol.2
1 : 159383008 : BV:32
=dst_symbol_addr.1
1 : 536942080 : BV:32
=dst_symbol_addr.2
1 : 159383008 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536942080 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 537100288 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 159511007 : BV:32
=stack.size
1 : 3757867008 { -537100288 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 159383008 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 537070079 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1051183242
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 59
=pc L0%0%1_L0%0%1 nodece 59 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 230 , m_adder -> 108)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 230 , m_adder -> 108)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2809227126
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 59 nodece_path
=pc L0%0%1_L0%0%1 nodece 59 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 59 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 230 , m_adder -> 108)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 230 , m_adder -> 108)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2809227126
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 60
=pc L0%0%1_L0%0%1 nodece 60 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3824880640 { -470086656 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3824880640 { -470086656 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3824880640 { -470086656 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2248191996 { -2046775300 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2248191999 { -2046775297 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2214637568 { -2080329728 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3825008639 { -469958657 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
941154508
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 60 nodece_path
=pc L0%0%1_L0%0%1 nodece 60 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 60 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3824880640 { -470086656 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3824880640 { -470086656 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3824880640 { -470086656 } : BV:32
=callee_save_const.3
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2248191996 { -2046775300 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2248191999 { -2046775297 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2214637568 { -2080329728 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3825008639 { -469958657 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
941154508
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 61
=pc L0%0%1_L0%0%1 nodece 61 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 536942080 : BV:32
=symbol.2
1 : 159383008 : BV:32
=dst_symbol_addr.1
1 : 536942080 : BV:32
=dst_symbol_addr.2
1 : 159383008 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536942080 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 537100288 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 159511007 : BV:32
=stack.size
1 : 3757867008 { -537100288 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 159383008 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 537070079 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
253869986
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 61 nodece_path
=pc L0%0%1_L0%0%1 nodece 61 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 61 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 536942080 : BV:32
=symbol.2
1 : 159383008 : BV:32
=dst_symbol_addr.1
1 : 536942080 : BV:32
=dst_symbol_addr.2
1 : 159383008 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536942080 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 537100288 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 159511007 : BV:32
=stack.size
1 : 3757867008 { -537100288 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 159383008 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 537070079 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
253869986
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 62
=pc L0%0%1_L0%0%1 nodece 62 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 69)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 69)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
4167073597
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 62 nodece_path
=pc L0%0%1_L0%0%1 nodece 62 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 62 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 69)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 69)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
4167073597
=counter_example_end
=counterexamples at pc Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 0
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 270483291396821594864898291845943363385 { -69799075524116868598476315585824848071 } : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 2147450876 ) -> 0, ( 2147450879 ) -> 0, ( 2147450878 ) -> 0, ( 2147450877 ) -> 0, () -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 1
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 2
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 2147450876 ) -> 255, ( 2147450879 ) -> 255, ( 2147450878 ) -> 255, ( 2147450877 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 3
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3751173222
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 28818705400528811450296919743249675020 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 2147450876 ) -> 0, ( 2147450879 ) -> 128, ( 2147450878 ) -> 0, ( 2147450877 ) -> 0, () -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3751173222
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 4
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192000 ) -> 2, ( 192004 ) -> 1, ( 192006 ) -> 16, ( 192008 ) -> 47, ( 192009 ) -> 140, ( 192010 ) -> 45, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192000 ) -> 2, ( 192004 ) -> 1, ( 192006 ) -> 16, ( 192008 ) -> 47, ( 192009 ) -> 140, ( 192010 ) -> 45, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 192000 ) -> 2, ( 192004 ) -> 1, ( 192006 ) -> 16, ( 192008 ) -> 47, ( 192009 ) -> 140, ( 192010 ) -> 45, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 2 : BV:32
=unaliased_memslot.0
1 : 1048577 : BV:32
=unaliased_memslot.1
1 : 2985007 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
231602422
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 55063660191735131462959106 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192000 ) -> 2, ( 192004 ) -> 1, ( 192006 ) -> 16, ( 192008 ) -> 47, ( 192009 ) -> 140, ( 192010 ) -> 45, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (( 192000 ) -> 2, ( 192004 ) -> 1, ( 192006 ) -> 16, ( 192008 ) -> 47, ( 192009 ) -> 140, ( 192010 ) -> 45, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 192000 ) -> 2, ( 192004 ) -> 1, ( 192006 ) -> 16, ( 192008 ) -> 47, ( 192009 ) -> 140, ( 192010 ) -> 45, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 2 : BV:32
=unaliased_memslot.0
1 : 1048577 : BV:32
=unaliased_memslot.1
1 : 2985007 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
231602422
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 5
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192008 ) -> 255, ( 192009 ) -> 255, ( 192010 ) -> 255, ( 192011 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192008 ) -> 255, ( 192009 ) -> 255, ( 192010 ) -> 255, ( 192011 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 192008 ) -> 255, ( 192009 ) -> 255, ( 192010 ) -> 255, ( 192011 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1389867269
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 79228162495817593519834398720 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192008 ) -> 255, ( 192009 ) -> 255, ( 192010 ) -> 255, ( 192011 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (( 192008 ) -> 255, ( 192009 ) -> 255, ( 192010 ) -> 255, ( 192011 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 192008 ) -> 255, ( 192009 ) -> 255, ( 192010 ) -> 255, ( 192011 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1389867269
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 6
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192012 ) -> 1, ( 192013 ) -> 67, ( 192014 ) -> 65, ( 192015 ) -> 7, ( 52980 ) -> 20, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192012 ) -> 1, ( 192013 ) -> 67, ( 192014 ) -> 65, ( 192015 ) -> 7, ( 52980 ) -> 20, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 192012 ) -> 1, ( 192013 ) -> 67, ( 192014 ) -> 65, ( 192015 ) -> 7, ( 52980 ) -> 20, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 121717505 : BV:32
=unaliased_memslot.3
1 : 20 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
950390868
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 9643454266970782082363873742741831680 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192012 ) -> 1, ( 192013 ) -> 67, ( 192014 ) -> 65, ( 192015 ) -> 7, ( 52980 ) -> 20, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (( 192012 ) -> 1, ( 192013 ) -> 67, ( 192014 ) -> 65, ( 192015 ) -> 7, ( 52980 ) -> 20, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 192012 ) -> 1, ( 192013 ) -> 67, ( 192014 ) -> 65, ( 192015 ) -> 7, ( 52980 ) -> 20, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 121717505 : BV:32
=unaliased_memslot.3
1 : 20 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
950390868
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 7
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192012 ) -> 255, ( 192013 ) -> 255, ( 192014 ) -> 255, ( 192015 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192012 ) -> 255, ( 192013 ) -> 255, ( 192014 ) -> 255, ( 192015 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 192012 ) -> 255, ( 192013 ) -> 255, ( 192014 ) -> 255, ( 192015 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
255789528
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 340282366841710300949110269838224261120 { -79228162514264337593543950336 } : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192012 ) -> 255, ( 192013 ) -> 255, ( 192014 ) -> 255, ( 192015 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (( 192012 ) -> 255, ( 192013 ) -> 255, ( 192014 ) -> 255, ( 192015 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 192012 ) -> 255, ( 192013 ) -> 255, ( 192014 ) -> 255, ( 192015 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
255789528
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 8
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1974806403
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1974806403
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 9
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 110 , m_adder -> 181)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 110 , m_adder -> 181)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2550174225
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 52802005478939591581825779859350168501 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 110 , m_adder -> 181)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 2147450876 ) -> 0, ( 2147450879 ) -> 0, ( 2147450878 ) -> 0, ( 2147450877 ) -> 0, () -> (RAC: m_multiplier -> 110 , m_adder -> 181)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2550174225
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 10
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1175526309
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1175526309
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 11
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 143 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 143 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2479875945
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.2.0
1 : 176732294036291214212811629680656495139 { -163550072884647249250562977751111716317 } : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 143 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 2147450876 ) -> 0, ( 2147450879 ) -> 0, ( 2147450878 ) -> 0, ( 2147450877 ) -> 0, () -> (RAC: m_multiplier -> 143 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2479875945
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 12
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
826047641
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
826047641
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 13
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 124 , m_adder -> 226)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 124 , m_adder -> 226)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2071134753
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 51394301416169766486378665039550373602 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 124 , m_adder -> 226)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 2147450876 ) -> 0, ( 2147450879 ) -> 0, ( 2147450878 ) -> 0, ( 2147450877 ) -> 0, () -> (RAC: m_multiplier -> 124 , m_adder -> 226)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2071134753
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 14
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
864101839
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
864101839
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 15
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52988 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52988 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52988 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 2 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1338299904
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52988 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (( 52988 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52988 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 2 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1338299904
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 16
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 192000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 192000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1543324176
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 1 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (( 192000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 192000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1543324176
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 17
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52976 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52976 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52976 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 7 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
217871137
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52976 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (( 52976 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52976 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 7 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
217871137
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 18
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52984 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52984 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52984 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 6 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
337745691
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52984 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (( 52984 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52984 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 6 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
337745691
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 19
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52984 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52984 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52984 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1763794427
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52984 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (( 52984 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52984 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1763794427
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 20
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52980 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52980 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52980 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2059344234
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52980 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (( 52980 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52980 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2059344234
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 21
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
932862806
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
932862806
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 22
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1404515797
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1404515797
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 23
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
695748720
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
695748720
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 24
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
695748720
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 52988 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 192012 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%arrayidx2
1 : 192028 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 3 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.src.llvm-%arrayidx
1 : 192012 : BV:32
=input.src.llvm-%arrayidx1
1 : 52988 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 192028 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
695748720
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 25
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
695748720
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.graph_edge_composition
((Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 48 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 12 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 53004 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 192028 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%arrayidx2
1 : 192044 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 7 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.src.llvm-%arrayidx
1 : 192028 : BV:32
=input.src.llvm-%arrayidx1
1 : 53004 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 12 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 192044 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
695748720
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 26
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52980 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52980 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52980 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2059344234
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 4294967296 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52980 ) -> 1, ( 192020 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (( 52980 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 52988 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 192012 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%arrayidx2
1 : 192028 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 3 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.src.llvm-%arrayidx
1 : 192012 : BV:32
=input.src.llvm-%arrayidx1
1 : 52988 : BV:32
=input.dst.mem
1 : (( 52980 ) -> 1, ( 192020 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 192028 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2059344234
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 27
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52984 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52984 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52984 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1763794427
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 18446744073709551616 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52984 ) -> 1, ( 192024 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (( 52984 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 52988 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 192012 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%arrayidx2
1 : 192028 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 3 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.src.llvm-%arrayidx
1 : 192012 : BV:32
=input.src.llvm-%arrayidx1
1 : 52988 : BV:32
=input.dst.mem
1 : (( 52984 ) -> 1, ( 192024 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 192028 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1763794427
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 28
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52976 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52976 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52976 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 7 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
217871137
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 7 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52976 ) -> 7, ( 192016 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (( 52976 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 52988 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 192012 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%arrayidx2
1 : 192028 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 3 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.src.llvm-%arrayidx
1 : 192012 : BV:32
=input.src.llvm-%arrayidx1
1 : 52988 : BV:32
=input.dst.mem
1 : (( 52976 ) -> 7, ( 192016 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 192028 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 7 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
217871137
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 29
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52988 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 52988 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (( 52988 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 2 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1338299904
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 158456325028528675187087900672 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 52988 ) -> 2, ( 192028 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (( 52988 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 52988 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 192012 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%arrayidx2
1 : 192028 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 3 : BV:32
=input.src.llvm-%add
1 : 2 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.src.llvm-%arrayidx
1 : 192012 : BV:32
=input.src.llvm-%arrayidx1
1 : 52988 : BV:32
=input.dst.mem
1 : (( 52988 ) -> 2, ( 192028 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 192028 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%1
1 : 2 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 2 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1338299904
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 30
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 143 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 143 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2479875945
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.2.0
1 : 33204043629329697777242859448923550806 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (( 192027 ) -> 161, ( 192022 ) -> 11, ( 192021 ) -> 236, ( 192016 ) -> 86, ( 192019 ) -> 176, ( 192026 ) -> 130, ( 192018 ) -> 147, ( 192017 ) -> 116, ( 192023 ) -> 41, ( 192020 ) -> 206, ( 192024 ) -> 70, ( 192025 ) -> 101, ( 192029 ) -> 221, ( 192028 ) -> 190, ( 192030 ) -> 250, ( 192031 ) -> 24, () -> (RAC: m_multiplier -> 143 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=input.src.llvm-%0
1 : 2230675159 { -2064292137 } : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 52988 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 192012 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%arrayidx2
1 : 192028 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 3 : BV:32
=input.src.llvm-%add
1 : 419093950 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.src.llvm-%arrayidx
1 : 192012 : BV:32
=input.src.llvm-%arrayidx1
1 : 52988 : BV:32
=input.dst.mem
1 : (( 2147450876 ) -> 0, ( 2147450879 ) -> 0, ( 2147450878 ) -> 0, ( 2147450877 ) -> 0, ( 192027 ) -> 161, ( 192022 ) -> 11, ( 192021 ) -> 236, ( 192016 ) -> 86, ( 192019 ) -> 176, ( 192026 ) -> 130, ( 192018 ) -> 147, ( 192017 ) -> 116, ( 192023 ) -> 41, ( 192020 ) -> 206, ( 192024 ) -> 70, ( 192025 ) -> 101, ( 192029 ) -> 221, ( 192028 ) -> 190, ( 192030 ) -> 250, ( 192031 ) -> 24, () -> (RAC: m_multiplier -> 143 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 192028 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%1
1 : 2483386087 { -1811581209 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2479875945
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 31
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 64 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 16 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1255349946
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 80 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 20 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 20 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 53036 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 76 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 192060 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 60 : BV:32
=input.src.llvm-%arrayidx2
1 : 192076 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 15 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.src.llvm-%arrayidx
1 : 192060 : BV:32
=input.src.llvm-%arrayidx1
1 : 53036 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 20 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 192076 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 76 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 60 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1255349946
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 32
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 128 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 32 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 32 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1732940310
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 144 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 36 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 36 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 53100 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 140 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 192124 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 124 : BV:32
=input.src.llvm-%arrayidx2
1 : 192140 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 31 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.src.llvm-%arrayidx
1 : 192124 : BV:32
=input.src.llvm-%arrayidx1
1 : 53100 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 36 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 192140 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 140 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 124 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1732940310
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 33
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 256 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 64 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 64 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
351205738
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 272 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 68 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 68 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 53228 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 268 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 192252 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 252 : BV:32
=input.src.llvm-%arrayidx2
1 : 192268 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 63 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.src.llvm-%arrayidx
1 : 192252 : BV:32
=input.src.llvm-%arrayidx1
1 : 53228 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 68 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 192268 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 268 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 252 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
351205738
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 34
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 512 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 128 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 128 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
353828929
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 528 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 132 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 132 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 53484 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 524 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 192508 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 508 : BV:32
=input.src.llvm-%arrayidx2
1 : 192524 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 127 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.src.llvm-%arrayidx
1 : 192508 : BV:32
=input.src.llvm-%arrayidx1
1 : 53484 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 132 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 192524 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 524 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 508 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
353828929
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 35
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 1024 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 256 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 256 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
840048586
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 1040 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 260 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 260 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 53996 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 1036 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 193020 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 1020 : BV:32
=input.src.llvm-%arrayidx2
1 : 193036 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 255 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.src.llvm-%arrayidx
1 : 193020 : BV:32
=input.src.llvm-%arrayidx1
1 : 53996 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 260 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 193036 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 1036 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 1020 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
840048586
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 36
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 2048 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 512 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 512 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1204376426
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 2064 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 516 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 516 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 55020 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 2060 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 194044 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 2044 : BV:32
=input.src.llvm-%arrayidx2
1 : 194060 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 511 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.src.llvm-%arrayidx
1 : 194044 : BV:32
=input.src.llvm-%arrayidx1
1 : 55020 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 516 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 194060 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 2060 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 2044 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1204376426
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 37
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4096 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1024 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1024 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2000682414
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4112 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1028 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1028 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 57068 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 4108 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 196092 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 4092 : BV:32
=input.src.llvm-%arrayidx2
1 : 196108 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 1023 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.src.llvm-%arrayidx
1 : 196092 : BV:32
=input.src.llvm-%arrayidx1
1 : 57068 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 1028 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 196108 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 4108 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 4092 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2000682414
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 38
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 8192 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 2048 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2048 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
765268780
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 8208 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 2052 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2052 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 61164 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 8204 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 200188 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 8188 : BV:32
=input.src.llvm-%arrayidx2
1 : 200204 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 2047 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.src.llvm-%arrayidx
1 : 200188 : BV:32
=input.src.llvm-%arrayidx1
1 : 61164 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 2052 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 200204 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 8204 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 8188 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
765268780
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 39
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16384 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4096 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4096 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
191021091
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16400 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4100 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4100 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 69356 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 16396 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 208380 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 16380 : BV:32
=input.src.llvm-%arrayidx2
1 : 208396 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 4095 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.src.llvm-%arrayidx
1 : 208380 : BV:32
=input.src.llvm-%arrayidx1
1 : 69356 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 4100 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 208396 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 16396 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 16380 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
191021091
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 40
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 32768 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8192 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8192 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1145999278
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32784 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8196 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8196 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 85740 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 32780 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 224764 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 32764 : BV:32
=input.src.llvm-%arrayidx2
1 : 224780 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 8191 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.src.llvm-%arrayidx
1 : 224764 : BV:32
=input.src.llvm-%arrayidx1
1 : 85740 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 8196 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 224780 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 32780 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 32764 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1145999278
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 41
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 65536 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 16384 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16384 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
26262331
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 65552 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 16388 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16388 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 118508 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 65548 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 257532 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 65532 : BV:32
=input.src.llvm-%arrayidx2
1 : 257548 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 16383 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.src.llvm-%arrayidx
1 : 257532 : BV:32
=input.src.llvm-%arrayidx1
1 : 118508 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 16388 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 257548 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 65548 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 65532 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
26262331
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 42
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127968 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 31992 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31992 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
339740287
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 180940 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 127980 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 319964 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 127964 : BV:32
=input.src.llvm-%arrayidx2
1 : 319980 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 31991 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.src.llvm-%arrayidx
1 : 319964 : BV:32
=input.src.llvm-%arrayidx1
1 : 180940 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 31996 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 319980 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 127980 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 127964 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
339740287
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 43
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1673301002
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1673301002
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 44
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1169571909
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1169571909
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 45
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
772900257
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=stack.size
1 : 2146996224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
772900257
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 46
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3791326208 { -503641088 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3791326208 { -503641088 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3791326208 { -503641088 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2181083132 { -2113884164 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2181083135 { -2113884161 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2147528704 { -2147438592 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3791454207 { -503513089 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1692359398
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2181083132 { -2113884164 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 3791326208 { -503641088 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3791326208 { -503641088 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3791326208 { -503641088 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2181083132 { -2113884164 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2181083132 { -2113884164 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2181083135 { -2113884161 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2147528704 { -2147438592 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3791454207 { -503513089 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1692359398
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 47
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3791326208 { -503641088 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3791326208 { -503641088 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3791326208 { -503641088 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2181083132 { -2113884164 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2181083135 { -2113884161 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2147528704 { -2147438592 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3791454207 { -503513089 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1692359398
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2181083132 { -2113884164 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 3791326208 { -503641088 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3791326208 { -503641088 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3791326208 { -503641088 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2181083132 { -2113884164 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2181083132 { -2113884164 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 3489578028 { -805389268 } : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 3791326220 { -503641076 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%arrayidx2
1 : 3791326236 { -503641060 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 3 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2181083135 { -2113884161 } : BV:32
=input.src.llvm-%arrayidx
1 : 3791326220 { -503641076 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3489578028 { -805389268 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 3791326236 { -503641060 } : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2147528704 { -2147438592 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3791454207 { -503513089 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1692359398
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 48
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3791326208 { -503641088 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3791326208 { -503641088 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3791326208 { -503641088 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2181083132 { -2113884164 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2181083135 { -2113884161 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2147528704 { -2147438592 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3791454207 { -503513089 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1692359398
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*((Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)))
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 48 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2181083132 { -2113884164 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 3791326208 { -503641088 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3791326208 { -503641088 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3791326208 { -503641088 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 12 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2181083132 { -2113884164 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2181083132 { -2113884164 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 3489578044 { -805389252 } : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 3791326236 { -503641060 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%arrayidx2
1 : 3791326252 { -503641044 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 7 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2181083135 { -2113884161 } : BV:32
=input.src.llvm-%arrayidx
1 : 3791326236 { -503641060 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3489578044 { -805389252 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 12 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 3791326252 { -503641044 } : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2147528704 { -2147438592 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3791454207 { -503513089 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1692359398
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 49
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 396400 : BV:32
=symbol.2
1 : 4294837328 { -129968 } : BV:32
=dst_symbol_addr.1
1 : 396400 : BV:32
=dst_symbol_addr.2
1 : 4294837328 { -129968 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 396400 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294836220 { -131076 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 528384 : BV:32
=memlabel-mem-esp_end
1 : 4294836223 { -131073 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294965327 { -1969 } : BV:32
=stack.size
1 : 4294307840 { -659456 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294837328 { -129968 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 524399 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1308218417
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294836220 { -131076 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 396400 : BV:32
=symbol.2
1 : 4294837328 { -129968 } : BV:32
=dst_symbol_addr.1
1 : 396400 : BV:32
=dst_symbol_addr.2
1 : 4294837328 { -129968 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 396400 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294836220 { -131076 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294836220 { -131076 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 528384 : BV:32
=memlabel-mem-esp_end
1 : 4294836223 { -131073 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 4294965327 { -1969 } : BV:32
=stack.size
1 : 4294307840 { -659456 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294837328 { -129968 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 524399 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1308218417
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 50
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 86 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 86 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3220458079
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 283785833137890807846498965393396670923 { -56496533783047655616875642038371540533 } : BV:128
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 86 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 4294967295 ) -> 0, ( 4294967292 ) -> 0, ( 4294967293 ) -> 0, ( 4294967294 ) -> 0, () -> (RAC: m_multiplier -> 86 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3220458079
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 51
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 86 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 86 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3220458079
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 15113214913089605801810369658678584054 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1073643542 ) -> 255, ( 1073643537 ) -> 162, ( 1073643548 ) -> 6, ( 1073643543 ) -> 170, ( 1073643540 ) -> 166, ( 1073643539 ) -> 251, ( 1073643538 ) -> 78, ( 1073643547 ) -> 90, ( 1073643544 ) -> 86, ( 1073643536 ) -> 246, ( 1073643546 ) -> 175, ( 1073643541 ) -> 82, ( 1073643550 ) -> 94, ( 1073643549 ) -> 179, ( 1073643545 ) -> 3, ( 1073643551 ) -> 11, () -> (RAC: m_multiplier -> 86 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-%0
1 : 3581880787 { -713086509 } : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 2147483164 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 1073643532 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%arrayidx2
1 : 1073643548 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 3 : BV:32
=input.src.llvm-%add
1 : 190755590 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%arrayidx
1 : 1073643532 : BV:32
=input.src.llvm-%arrayidx1
1 : 2147483164 : BV:32
=input.dst.mem
1 : (( 1073643542 ) -> 255, ( 4294967295 ) -> 0, ( 4294967292 ) -> 0, ( 4294967293 ) -> 0, ( 4294967294 ) -> 0, ( 1073643537 ) -> 162, ( 1073643548 ) -> 6, ( 1073643543 ) -> 170, ( 1073643540 ) -> 166, ( 1073643539 ) -> 251, ( 1073643538 ) -> 78, ( 1073643547 ) -> 90, ( 1073643544 ) -> 86, ( 1073643536 ) -> 246, ( 1073643546 ) -> 175, ( 1073643541 ) -> 82, ( 1073643550 ) -> 94, ( 1073643549 ) -> 179, ( 1073643545 ) -> 3, ( 1073643551 ) -> 11, () -> (RAC: m_multiplier -> 86 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 1073643548 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%1
1 : 903842099 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3220458079
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 52
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 86 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 86 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3220458079
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*((Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)))
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 48 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 213500038454265838734167153376529646721 { -126782328466672624729207454055238564735 } : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 12 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1073643542 ) -> 255, ( 1073643566 ) -> 158, ( 1073643537 ) -> 162, ( 1073643548 ) -> 6, ( 1073643543 ) -> 170, ( 1073643540 ) -> 166, ( 1073643567 ) -> 160, ( 1073643555 ) -> 136, ( 1073643539 ) -> 251, ( 1073643538 ) -> 78, ( 1073643559 ) -> 144, ( 1073643547 ) -> 90, ( 1073643544 ) -> 86, ( 1073643565 ) -> 156, ( 1073643561 ) -> 148, ( 1073643553 ) -> 132, ( 1073643554 ) -> 134, ( 1073643536 ) -> 246, ( 1073643564 ) -> 153, ( 1073643556 ) -> 137, ( 1073643552 ) -> 129, ( 1073643560 ) -> 145, ( 1073643563 ) -> 152, ( 1073643546 ) -> 175, ( 1073643562 ) -> 150, ( 1073643541 ) -> 82, ( 1073643557 ) -> 140, ( 1073643550 ) -> 94, ( 1073643549 ) -> 179, ( 1073643545 ) -> 3, ( 1073643558 ) -> 142, ( 1073643551 ) -> 11, () -> (RAC: m_multiplier -> 86 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-%0
1 : 190755590 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 2147483180 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 1073643548 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%arrayidx2
1 : 1073643564 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 7 : BV:32
=input.src.llvm-%add
1 : 2694749337 { -1600217959 } : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%arrayidx
1 : 1073643548 : BV:32
=input.src.llvm-%arrayidx1
1 : 2147483180 : BV:32
=input.dst.mem
1 : (( 1073643542 ) -> 255, ( 1073643566 ) -> 158, ( 4294967295 ) -> 0, ( 4294967292 ) -> 0, ( 4294967293 ) -> 0, ( 4294967294 ) -> 0, ( 1073643537 ) -> 162, ( 1073643548 ) -> 6, ( 1073643543 ) -> 170, ( 1073643540 ) -> 166, ( 1073643567 ) -> 160, ( 1073643555 ) -> 136, ( 1073643539 ) -> 251, ( 1073643538 ) -> 78, ( 1073643559 ) -> 144, ( 1073643547 ) -> 90, ( 1073643544 ) -> 86, ( 1073643565 ) -> 156, ( 1073643561 ) -> 148, ( 1073643553 ) -> 132, ( 1073643554 ) -> 134, ( 1073643536 ) -> 246, ( 1073643564 ) -> 153, ( 1073643556 ) -> 137, ( 1073643552 ) -> 129, ( 1073643560 ) -> 145, ( 1073643563 ) -> 152, ( 1073643546 ) -> 175, ( 1073643562 ) -> 150, ( 1073643541 ) -> 82, ( 1073643557 ) -> 140, ( 1073643550 ) -> 94, ( 1073643549 ) -> 179, ( 1073643545 ) -> 3, ( 1073643558 ) -> 142, ( 1073643551 ) -> 11, () -> (RAC: m_multiplier -> 86 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 12 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 1073643564 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%1
1 : 2503993747 { -1790973549 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3220458079
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 53
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 86 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 86 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3220458079
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*((Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)*((Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))))
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 64 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 199705605538931317978823202908227356268 { -140576761382007145484551404523540855188 } : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 16 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1073643542 ) -> 255, ( 1073643566 ) -> 158, ( 1073643573 ) -> 37, ( 1073643537 ) -> 162, ( 1073643572 ) -> 204, ( 1073643571 ) -> 118, ( 1073643548 ) -> 6, ( 1073643543 ) -> 170, ( 1073643540 ) -> 166, ( 1073643577 ) -> 134, ( 1073643569 ) -> 198, ( 1073643567 ) -> 160, ( 1073643555 ) -> 136, ( 1073643539 ) -> 251, ( 1073643538 ) -> 78, ( 1073643559 ) -> 144, ( 1073643580 ) -> 140, ( 1073643578 ) -> 222, ( 1073643547 ) -> 90, ( 1073643544 ) -> 86, ( 1073643565 ) -> 156, ( 1073643561 ) -> 148, ( 1073643553 ) -> 132, ( 1073643574 ) -> 126, ( 1073643576 ) -> 44, ( 1073643554 ) -> 134, ( 1073643575 ) -> 214, ( 1073643570 ) -> 29, ( 1073643536 ) -> 246, ( 1073643564 ) -> 153, ( 1073643579 ) -> 53, ( 1073643556 ) -> 137, ( 1073643552 ) -> 129, ( 1073643560 ) -> 145, ( 1073643582 ) -> 61, ( 1073643563 ) -> 152, ( 1073643581 ) -> 230, ( 1073643546 ) -> 175, ( 1073643562 ) -> 150, ( 1073643541 ) -> 82, ( 1073643557 ) -> 140, ( 1073643550 ) -> 94, ( 1073643568 ) -> 108, ( 1073643549 ) -> 179, ( 1073643545 ) -> 3, ( 1073643558 ) -> 142, ( 1073643551 ) -> 11, ( 1073643583 ) -> 150, () -> (RAC: m_multiplier -> 86 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-%0
1 : 2694749337 { -1600217959 } : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 2147483196 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 60 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 1073643564 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%arrayidx2
1 : 1073643580 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 11 : BV:32
=input.src.llvm-%add
1 : 2520639116 { -1774328180 } : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%arrayidx
1 : 1073643564 : BV:32
=input.src.llvm-%arrayidx1
1 : 2147483196 : BV:32
=input.dst.mem
1 : (( 1073643542 ) -> 255, ( 1073643566 ) -> 158, ( 4294967295 ) -> 0, ( 4294967292 ) -> 0, ( 4294967293 ) -> 0, ( 4294967294 ) -> 0, ( 1073643573 ) -> 37, ( 1073643537 ) -> 162, ( 1073643572 ) -> 204, ( 1073643571 ) -> 118, ( 1073643548 ) -> 6, ( 1073643543 ) -> 170, ( 1073643540 ) -> 166, ( 1073643577 ) -> 134, ( 1073643569 ) -> 198, ( 1073643567 ) -> 160, ( 1073643555 ) -> 136, ( 1073643539 ) -> 251, ( 1073643538 ) -> 78, ( 1073643559 ) -> 144, ( 1073643580 ) -> 140, ( 1073643578 ) -> 222, ( 1073643547 ) -> 90, ( 1073643544 ) -> 86, ( 1073643565 ) -> 156, ( 1073643561 ) -> 148, ( 1073643553 ) -> 132, ( 1073643574 ) -> 126, ( 1073643576 ) -> 44, ( 1073643554 ) -> 134, ( 1073643575 ) -> 214, ( 1073643570 ) -> 29, ( 1073643536 ) -> 246, ( 1073643564 ) -> 153, ( 1073643579 ) -> 53, ( 1073643556 ) -> 137, ( 1073643552 ) -> 129, ( 1073643560 ) -> 145, ( 1073643582 ) -> 61, ( 1073643563 ) -> 152, ( 1073643581 ) -> 230, ( 1073643546 ) -> 175, ( 1073643562 ) -> 150, ( 1073643541 ) -> 82, ( 1073643557 ) -> 140, ( 1073643550 ) -> 94, ( 1073643568 ) -> 108, ( 1073643549 ) -> 179, ( 1073643545 ) -> 3, ( 1073643558 ) -> 142, ( 1073643551 ) -> 11, ( 1073643583 ) -> 150, () -> (RAC: m_multiplier -> 86 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 16 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 1073643580 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 60 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 60 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 60 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%1
1 : 4120857075 { -174110221 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3220458079
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 54
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3881241760 { -413725536 } : BV:32
=symbol.2
1 : 4146991664 { -147975632 } : BV:32
=dst_symbol_addr.1
1 : 3881241760 { -413725536 } : BV:32
=dst_symbol_addr.2
1 : 4146991664 { -147975632 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3881241760 { -413725536 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3877220348 { -417746948 } : BV:32
=input.src.llvm-mem
1 : (( 3881241760 ) -> 20, ( 3881241765 ) -> 168, ( 3881241767 ) -> 160, ( 3881241764 ) -> 128, ( 3881241771 ) -> 93, ( 3881241768 ) -> 232, ( 3881241769 ) -> 231, ( 4146991682 ) -> 224, ( 4146991688 ) -> 101, ( 3881241762 ) -> 21, ( 4146991680 ) -> 147, ( 3881241763 ) -> 143, ( 3881241770 ) -> 5, ( 4146991683 ) -> 83, ( 4146991689 ) -> 144, ( 3881241761 ) -> 36, ( 4146991690 ) -> 114, ( 3881241766 ) -> 0, ( 4146991691 ) -> 204, () -> 96) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3881241760 ) -> 20, ( 3881241765 ) -> 168, ( 3881241767 ) -> 160, ( 3881241764 ) -> 128, ( 3881241771 ) -> 93, ( 3881241768 ) -> 232, ( 3881241769 ) -> 231, ( 4146991682 ) -> 224, ( 4146991688 ) -> 101, ( 3881241762 ) -> 21, ( 4146991680 ) -> 147, ( 3881241763 ) -> 143, ( 3881241770 ) -> 5, ( 4146991683 ) -> 83, ( 4146991689 ) -> 144, ( 3881241761 ) -> 36, ( 4146991690 ) -> 114, ( 3881241766 ) -> 0, ( 4146991691 ) -> 204, () -> 96) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3877220351 { -417746945 } : BV:32
=input.dst.mem
1 : (( 3881241760 ) -> 20, ( 3881241765 ) -> 168, ( 3881241767 ) -> 160, ( 3881241764 ) -> 128, ( 3881241771 ) -> 93, ( 3881241768 ) -> 232, ( 3881241769 ) -> 231, ( 4146991682 ) -> 224, ( 4146991688 ) -> 101, ( 3881241762 ) -> 21, ( 4146991680 ) -> 147, ( 3881241763 ) -> 143, ( 3881241770 ) -> 5, ( 4146991683 ) -> 83, ( 4146991689 ) -> 144, ( 3881241761 ) -> 36, ( 4146991690 ) -> 114, ( 3881241766 ) -> 0, ( 4146991691 ) -> 204, () -> 96) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4147119663 { -147847633 } : BV:32
=stack.size
1 : 3877220352 { -417746944 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4146991664 { -147975632 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3881369759 { -413597537 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1755644008
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3877220348 { -417746948 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 128106302839786064881156246192977683476 : BV:128
=symbol.1
1 : 3881241760 { -413725536 } : BV:32
=symbol.2
1 : 4146991664 { -147975632 } : BV:32
=dst_symbol_addr.1
1 : 3881241760 { -413725536 } : BV:32
=dst_symbol_addr.2
1 : 4146991664 { -147975632 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3881241760 { -413725536 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3877220348 { -417746948 } : BV:32
=input.src.llvm-mem
1 : (( 3881241760 ) -> 20, ( 3881241765 ) -> 168, ( 3881241767 ) -> 160, ( 3881241764 ) -> 128, ( 3881241771 ) -> 93, ( 3881241768 ) -> 232, ( 3881241769 ) -> 231, ( 4146991682 ) -> 224, ( 4146991688 ) -> 101, ( 3881241762 ) -> 21, ( 4146991680 ) -> 147, ( 3881241763 ) -> 143, ( 3881241770 ) -> 5, ( 4146991683 ) -> 83, ( 4146991689 ) -> 144, ( 3881241761 ) -> 36, ( 4146991690 ) -> 114, ( 3881241766 ) -> 0, ( 4146991691 ) -> 204, () -> 96) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3877220348 { -417746948 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3881241760 ) -> 20, ( 3881241765 ) -> 168, ( 3881241767 ) -> 160, ( 3881241764 ) -> 128, ( 3881241771 ) -> 93, ( 3881241768 ) -> 232, ( 3881241769 ) -> 231, ( 4146991682 ) -> 224, ( 4146991688 ) -> 101, ( 3881241762 ) -> 21, ( 4146991680 ) -> 147, ( 3881241763 ) -> 143, ( 3881241770 ) -> 5, ( 4146991683 ) -> 83, ( 4146991689 ) -> 144, ( 3881241761 ) -> 36, ( 4146991690 ) -> 114, ( 3881241766 ) -> 0, ( 4146991691 ) -> 204, () -> 96) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3877220351 { -417746945 } : BV:32
=input.dst.mem
1 : (( 3881241760 ) -> 20, ( 3881241765 ) -> 168, ( 3881241767 ) -> 160, ( 3881241764 ) -> 128, ( 3881241771 ) -> 93, ( 3881241768 ) -> 232, ( 3877220349 ) -> 0, ( 3881241769 ) -> 231, ( 4146991682 ) -> 224, ( 4146991688 ) -> 101, ( 3881241762 ) -> 21, ( 4146991680 ) -> 147, ( 3881241763 ) -> 143, ( 3881241770 ) -> 5, ( 4146991683 ) -> 83, ( 4146991689 ) -> 144, ( 3881241761 ) -> 36, ( 4146991690 ) -> 114, ( 3881241766 ) -> 0, ( 4146991691 ) -> 204, ( 3877220348 ) -> 0, ( 3877220351 ) -> 0, ( 3877220350 ) -> 0, () -> 96) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 4147119663 { -147847633 } : BV:32
=stack.size
1 : 3877220352 { -417746944 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4146991664 { -147975632 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3881369759 { -413597537 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1755644008
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 55
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3881241760 { -413725536 } : BV:32
=symbol.2
1 : 4146991664 { -147975632 } : BV:32
=dst_symbol_addr.1
1 : 3881241760 { -413725536 } : BV:32
=dst_symbol_addr.2
1 : 4146991664 { -147975632 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3881241760 { -413725536 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3877220348 { -417746948 } : BV:32
=input.src.llvm-mem
1 : (( 3881241760 ) -> 20, ( 3881241765 ) -> 168, ( 3881241767 ) -> 160, ( 3881241764 ) -> 128, ( 3881241771 ) -> 93, ( 3881241768 ) -> 232, ( 3881241769 ) -> 231, ( 4146991682 ) -> 224, ( 4146991688 ) -> 101, ( 3881241762 ) -> 21, ( 4146991680 ) -> 147, ( 3881241763 ) -> 143, ( 3881241770 ) -> 5, ( 4146991683 ) -> 83, ( 4146991689 ) -> 144, ( 3881241761 ) -> 36, ( 4146991690 ) -> 114, ( 3881241766 ) -> 0, ( 4146991691 ) -> 204, () -> 96) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3881241760 ) -> 20, ( 3881241765 ) -> 168, ( 3881241767 ) -> 160, ( 3881241764 ) -> 128, ( 3881241771 ) -> 93, ( 3881241768 ) -> 232, ( 3881241769 ) -> 231, ( 4146991682 ) -> 224, ( 4146991688 ) -> 101, ( 3881241762 ) -> 21, ( 4146991680 ) -> 147, ( 3881241763 ) -> 143, ( 3881241770 ) -> 5, ( 4146991683 ) -> 83, ( 4146991689 ) -> 144, ( 3881241761 ) -> 36, ( 4146991690 ) -> 114, ( 3881241766 ) -> 0, ( 4146991691 ) -> 204, () -> 96) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3877220351 { -417746945 } : BV:32
=input.dst.mem
1 : (( 3881241760 ) -> 20, ( 3881241765 ) -> 168, ( 3881241767 ) -> 160, ( 3881241764 ) -> 128, ( 3881241771 ) -> 93, ( 3881241768 ) -> 232, ( 3881241769 ) -> 231, ( 4146991682 ) -> 224, ( 4146991688 ) -> 101, ( 3881241762 ) -> 21, ( 4146991680 ) -> 147, ( 3881241763 ) -> 143, ( 3881241770 ) -> 5, ( 4146991683 ) -> 83, ( 4146991689 ) -> 144, ( 3881241761 ) -> 36, ( 4146991690 ) -> 114, ( 3881241766 ) -> 0, ( 4146991691 ) -> 204, () -> 96) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4147119663 { -147847633 } : BV:32
=stack.size
1 : 3877220352 { -417746944 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4146991664 { -147975632 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3881369759 { -413597537 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1755644008
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3877220348 { -417746948 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 256212605634828162967116480888178050215 { -84069761286110300496258126543590161241 } : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 3881241760 { -413725536 } : BV:32
=symbol.2
1 : 4146991664 { -147975632 } : BV:32
=dst_symbol_addr.1
1 : 3881241760 { -413725536 } : BV:32
=dst_symbol_addr.2
1 : 4146991664 { -147975632 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3881241760 { -413725536 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3877220348 { -417746948 } : BV:32
=input.src.llvm-mem
1 : (( 3881241791 ) -> 192, ( 3881241787 ) -> 41, ( 3881241776 ) -> 167, ( 3881241788 ) -> 192, ( 3881241790 ) -> 192, ( 3881241760 ) -> 20, ( 3881241765 ) -> 168, ( 3881241767 ) -> 160, ( 3881241764 ) -> 128, ( 3881241771 ) -> 93, ( 3881241768 ) -> 232, ( 3881241769 ) -> 231, ( 4146991682 ) -> 224, ( 4146991688 ) -> 101, ( 3881241762 ) -> 21, ( 4146991680 ) -> 147, ( 3881241763 ) -> 143, ( 3881241770 ) -> 5, ( 4146991683 ) -> 83, ( 4146991689 ) -> 144, ( 3881241761 ) -> 36, ( 4146991690 ) -> 114, ( 3881241766 ) -> 0, ( 4146991691 ) -> 204, ( 3881241786 ) -> 120, ( 3881241785 ) -> 120, ( 3881241782 ) -> 97, ( 3881241781 ) -> 8, ( 3881241780 ) -> 224, ( 3881241779 ) -> 226, ( 3881241789 ) -> 192, ( 3881241778 ) -> 245, ( 3881241777 ) -> 132, ( 3881241784 ) -> 77, ( 3881241783 ) -> 0, () -> 96) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3877220348 { -417746948 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3881241760 ) -> 20, ( 3881241765 ) -> 168, ( 3881241767 ) -> 160, ( 3881241764 ) -> 128, ( 3881241771 ) -> 93, ( 3881241768 ) -> 232, ( 3881241769 ) -> 231, ( 4146991682 ) -> 224, ( 4146991688 ) -> 101, ( 3881241762 ) -> 21, ( 4146991680 ) -> 147, ( 3881241763 ) -> 143, ( 3881241770 ) -> 5, ( 4146991683 ) -> 83, ( 4146991689 ) -> 144, ( 3881241761 ) -> 36, ( 4146991690 ) -> 114, ( 3881241766 ) -> 0, ( 4146991691 ) -> 204, () -> 96) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 1616928864 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 4146991692 { -147975604 } : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 3881241772 { -413725524 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%arrayidx2
1 : 3881241788 { -413725508 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 3 : BV:32
=input.src.llvm-%add
1 : 3233857728 { -1061109568 } : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3877220351 { -417746945 } : BV:32
=input.src.llvm-%arrayidx
1 : 3881241772 { -413725524 } : BV:32
=input.src.llvm-%arrayidx1
1 : 4146991692 { -147975604 } : BV:32
=input.dst.mem
1 : (( 3881241791 ) -> 192, ( 3881241787 ) -> 41, ( 3881241776 ) -> 167, ( 3881241788 ) -> 192, ( 3881241790 ) -> 192, ( 3881241760 ) -> 20, ( 3881241765 ) -> 168, ( 3881241767 ) -> 160, ( 3881241764 ) -> 128, ( 3881241771 ) -> 93, ( 3881241768 ) -> 232, ( 3877220349 ) -> 0, ( 3881241769 ) -> 231, ( 4146991682 ) -> 224, ( 4146991688 ) -> 101, ( 3881241762 ) -> 21, ( 4146991680 ) -> 147, ( 3881241763 ) -> 143, ( 3881241770 ) -> 5, ( 4146991683 ) -> 83, ( 4146991689 ) -> 144, ( 3881241761 ) -> 36, ( 4146991690 ) -> 114, ( 3881241766 ) -> 0, ( 4146991691 ) -> 204, ( 3877220348 ) -> 0, ( 3877220351 ) -> 0, ( 3877220350 ) -> 0, ( 3881241786 ) -> 120, ( 3881241785 ) -> 120, ( 3881241782 ) -> 97, ( 3881241781 ) -> 8, ( 3881241780 ) -> 224, ( 3881241779 ) -> 226, ( 3881241789 ) -> 192, ( 3881241778 ) -> 245, ( 3881241777 ) -> 132, ( 3881241784 ) -> 77, ( 3881241783 ) -> 0, () -> 96) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 3881241788 { -413725508 } : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%1
1 : 1616928864 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4147119663 { -147847633 } : BV:32
=stack.size
1 : 3877220352 { -417746944 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4146991664 { -147975632 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3881369759 { -413597537 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1755644008
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 56
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3881241760 { -413725536 } : BV:32
=symbol.2
1 : 4146991664 { -147975632 } : BV:32
=dst_symbol_addr.1
1 : 3881241760 { -413725536 } : BV:32
=dst_symbol_addr.2
1 : 4146991664 { -147975632 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3881241760 { -413725536 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3877220348 { -417746948 } : BV:32
=input.src.llvm-mem
1 : (( 3881241760 ) -> 20, ( 3881241765 ) -> 168, ( 3881241767 ) -> 160, ( 3881241764 ) -> 128, ( 3881241771 ) -> 93, ( 3881241768 ) -> 232, ( 3881241769 ) -> 231, ( 4146991682 ) -> 224, ( 4146991688 ) -> 101, ( 3881241762 ) -> 21, ( 4146991680 ) -> 147, ( 3881241763 ) -> 143, ( 3881241770 ) -> 5, ( 4146991683 ) -> 83, ( 4146991689 ) -> 144, ( 3881241761 ) -> 36, ( 4146991690 ) -> 114, ( 3881241766 ) -> 0, ( 4146991691 ) -> 204, () -> 96) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3881241760 ) -> 20, ( 3881241765 ) -> 168, ( 3881241767 ) -> 160, ( 3881241764 ) -> 128, ( 3881241771 ) -> 93, ( 3881241768 ) -> 232, ( 3881241769 ) -> 231, ( 4146991682 ) -> 224, ( 4146991688 ) -> 101, ( 3881241762 ) -> 21, ( 4146991680 ) -> 147, ( 3881241763 ) -> 143, ( 3881241770 ) -> 5, ( 4146991683 ) -> 83, ( 4146991689 ) -> 144, ( 3881241761 ) -> 36, ( 4146991690 ) -> 114, ( 3881241766 ) -> 0, ( 4146991691 ) -> 204, () -> 96) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3877220351 { -417746945 } : BV:32
=input.dst.mem
1 : (( 3881241760 ) -> 20, ( 3881241765 ) -> 168, ( 3881241767 ) -> 160, ( 3881241764 ) -> 128, ( 3881241771 ) -> 93, ( 3881241768 ) -> 232, ( 3881241769 ) -> 231, ( 4146991682 ) -> 224, ( 4146991688 ) -> 101, ( 3881241762 ) -> 21, ( 4146991680 ) -> 147, ( 3881241763 ) -> 143, ( 3881241770 ) -> 5, ( 4146991683 ) -> 83, ( 4146991689 ) -> 144, ( 3881241761 ) -> 36, ( 4146991690 ) -> 114, ( 3881241766 ) -> 0, ( 4146991691 ) -> 204, () -> 96) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4147119663 { -147847633 } : BV:32
=stack.size
1 : 3877220352 { -417746944 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4146991664 { -147975632 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3881369759 { -413597537 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1755644008
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*((Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)))
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 48 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3877220348 { -417746948 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 44036541554713591631129960955839374599 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 3881241760 { -413725536 } : BV:32
=symbol.2
1 : 4146991664 { -147975632 } : BV:32
=dst_symbol_addr.1
1 : 3881241760 { -413725536 } : BV:32
=dst_symbol_addr.2
1 : 4146991664 { -147975632 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3881241760 { -413725536 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 12 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3877220348 { -417746948 } : BV:32
=input.src.llvm-mem
1 : (( 3881241791 ) -> 192, ( 3881241787 ) -> 41, ( 3881241776 ) -> 167, ( 3881241788 ) -> 192, ( 3881241790 ) -> 192, ( 3881241807 ) -> 33, ( 3881241760 ) -> 20, ( 3881241765 ) -> 168, ( 3881241767 ) -> 160, ( 3881241764 ) -> 128, ( 3881241771 ) -> 93, ( 3881241768 ) -> 232, ( 3881241769 ) -> 231, ( 4146991682 ) -> 224, ( 4146991688 ) -> 101, ( 3881241762 ) -> 21, ( 4146991680 ) -> 147, ( 3881241763 ) -> 143, ( 3881241770 ) -> 5, ( 4146991683 ) -> 83, ( 4146991689 ) -> 144, ( 3881241761 ) -> 36, ( 4146991690 ) -> 114, ( 3881241766 ) -> 0, ( 4146991691 ) -> 204, ( 3881241786 ) -> 120, ( 3881241785 ) -> 120, ( 3881241782 ) -> 97, ( 3881241781 ) -> 8, ( 3881241780 ) -> 224, ( 3881241779 ) -> 226, ( 3881241796 ) -> 64, ( 3881241795 ) -> 67, ( 3881241805 ) -> 33, ( 3881241789 ) -> 192, ( 3881241804 ) -> 32, ( 3881241802 ) -> 216, ( 3881241794 ) -> 85, ( 3881241778 ) -> 245, ( 3881241777 ) -> 132, ( 3881241803 ) -> 137, ( 3881241800 ) -> 173, ( 3881241793 ) -> 229, ( 3881241792 ) -> 7, ( 3881241784 ) -> 77, ( 3881241783 ) -> 0, ( 3881241798 ) -> 193, ( 3881241806 ) -> 33, ( 3881241801 ) -> 216, ( 3881241797 ) -> 105, () -> 96) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3877220348 { -417746948 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3881241760 ) -> 20, ( 3881241765 ) -> 168, ( 3881241767 ) -> 160, ( 3881241764 ) -> 128, ( 3881241771 ) -> 93, ( 3881241768 ) -> 232, ( 3881241769 ) -> 231, ( 4146991682 ) -> 224, ( 4146991688 ) -> 101, ( 3881241762 ) -> 21, ( 4146991680 ) -> 147, ( 3881241763 ) -> 143, ( 3881241770 ) -> 5, ( 4146991683 ) -> 83, ( 4146991689 ) -> 144, ( 3881241761 ) -> 36, ( 4146991690 ) -> 114, ( 3881241766 ) -> 0, ( 4146991691 ) -> 204, () -> 96) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 3233857728 { -1061109568 } : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 4146991708 { -147975588 } : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 3881241788 { -413725508 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%arrayidx2
1 : 3881241804 { -413725492 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 7 : BV:32
=input.src.llvm-%add
1 : 555819296 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3877220351 { -417746945 } : BV:32
=input.src.llvm-%arrayidx
1 : 3881241788 { -413725508 } : BV:32
=input.src.llvm-%arrayidx1
1 : 4146991708 { -147975588 } : BV:32
=input.dst.mem
1 : (( 3881241791 ) -> 192, ( 3881241787 ) -> 41, ( 3881241776 ) -> 167, ( 3881241788 ) -> 192, ( 3881241790 ) -> 192, ( 3881241807 ) -> 33, ( 3881241760 ) -> 20, ( 3881241765 ) -> 168, ( 3881241767 ) -> 160, ( 3881241764 ) -> 128, ( 3881241771 ) -> 93, ( 3881241768 ) -> 232, ( 3877220349 ) -> 0, ( 3881241769 ) -> 231, ( 4146991682 ) -> 224, ( 4146991688 ) -> 101, ( 3881241762 ) -> 21, ( 4146991680 ) -> 147, ( 3881241763 ) -> 143, ( 3881241770 ) -> 5, ( 4146991683 ) -> 83, ( 4146991689 ) -> 144, ( 3881241761 ) -> 36, ( 4146991690 ) -> 114, ( 3881241766 ) -> 0, ( 4146991691 ) -> 204, ( 3877220348 ) -> 0, ( 3877220351 ) -> 0, ( 3877220350 ) -> 0, ( 3881241786 ) -> 120, ( 3881241785 ) -> 120, ( 3881241782 ) -> 97, ( 3881241781 ) -> 8, ( 3881241780 ) -> 224, ( 3881241779 ) -> 226, ( 3881241796 ) -> 64, ( 3881241795 ) -> 67, ( 3881241805 ) -> 33, ( 3881241789 ) -> 192, ( 3881241804 ) -> 32, ( 3881241802 ) -> 216, ( 3881241794 ) -> 85, ( 3881241778 ) -> 245, ( 3881241777 ) -> 132, ( 3881241803 ) -> 137, ( 3881241800 ) -> 173, ( 3881241793 ) -> 229, ( 3881241792 ) -> 7, ( 3881241784 ) -> 77, ( 3881241783 ) -> 0, ( 3881241798 ) -> 193, ( 3881241806 ) -> 33, ( 3881241801 ) -> 216, ( 3881241797 ) -> 105, () -> 96) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 12 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 3881241804 { -413725492 } : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%1
1 : 1616928864 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4147119663 { -147847633 } : BV:32
=stack.size
1 : 3877220352 { -417746944 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4146991664 { -147975632 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3881369759 { -413597537 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1755644008
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 57
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 2826265328 { -1468701968 } : BV:32
=symbol.2
1 : 1635447552 : BV:32
=dst_symbol_addr.1
1 : 2826265328 { -1468701968 } : BV:32
=dst_symbol_addr.2
1 : 1635447552 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2826265328 { -1468701968 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 695721980 : BV:32
=input.src.llvm-mem
1 : (( 2826265332 ) -> 16, ( 2826265337 ) -> 197, ( 2826265338 ) -> 65, ( 1635447577 ) -> 4, ( 1635447576 ) -> 18, ( 2826265336 ) -> 136, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2826265332 ) -> 16, ( 2826265337 ) -> 197, ( 2826265338 ) -> 65, ( 1635447577 ) -> 4, ( 1635447576 ) -> 18, ( 2826265336 ) -> 136, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 679047168 : BV:32
=memlabel-mem-esp_end
1 : 695721983 : BV:32
=input.dst.mem
1 : (( 2826265332 ) -> 16, ( 2826265337 ) -> 197, ( 2826265338 ) -> 65, ( 1635447577 ) -> 4, ( 1635447576 ) -> 18, ( 2826265336 ) -> 136, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1635575551 : BV:32
=stack.size
1 : 16674816 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1635447552 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2826393327 { -1468573969 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
175453149
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 695721980 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 79512993229270309681496064 : BV:128
=symbol.1
1 : 2826265328 { -1468701968 } : BV:32
=symbol.2
1 : 1635447552 : BV:32
=dst_symbol_addr.1
1 : 2826265328 { -1468701968 } : BV:32
=dst_symbol_addr.2
1 : 1635447552 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2826265328 { -1468701968 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 695721980 : BV:32
=input.src.llvm-mem
1 : (( 2826265332 ) -> 16, ( 2826265337 ) -> 197, ( 2826265338 ) -> 65, ( 1635447577 ) -> 4, ( 1635447576 ) -> 18, ( 2826265336 ) -> 136, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 695721980 : BV:32
=commonMEM.nonstack.mem
1 : (( 2826265332 ) -> 16, ( 2826265337 ) -> 197, ( 2826265338 ) -> 65, ( 1635447577 ) -> 4, ( 1635447576 ) -> 18, ( 2826265336 ) -> 136, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 679047168 : BV:32
=memlabel-mem-esp_end
1 : 695721983 : BV:32
=input.dst.mem
1 : (( 2826265332 ) -> 16, ( 2826265337 ) -> 197, ( 2826265338 ) -> 65, ( 1635447577 ) -> 4, ( 1635447576 ) -> 18, ( 2826265336 ) -> 136, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 1635575551 : BV:32
=stack.size
1 : 16674816 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1635447552 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2826393327 { -1468573969 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
175453149
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 58
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 2826265328 { -1468701968 } : BV:32
=symbol.2
1 : 1635447552 : BV:32
=dst_symbol_addr.1
1 : 2826265328 { -1468701968 } : BV:32
=dst_symbol_addr.2
1 : 1635447552 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2826265328 { -1468701968 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 695721980 : BV:32
=input.src.llvm-mem
1 : (( 2826265332 ) -> 16, ( 2826265337 ) -> 197, ( 2826265338 ) -> 65, ( 1635447577 ) -> 4, ( 1635447576 ) -> 18, ( 2826265336 ) -> 136, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2826265332 ) -> 16, ( 2826265337 ) -> 197, ( 2826265338 ) -> 65, ( 1635447577 ) -> 4, ( 1635447576 ) -> 18, ( 2826265336 ) -> 136, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 679047168 : BV:32
=memlabel-mem-esp_end
1 : 695721983 : BV:32
=input.dst.mem
1 : (( 2826265332 ) -> 16, ( 2826265337 ) -> 197, ( 2826265338 ) -> 65, ( 1635447577 ) -> 4, ( 1635447576 ) -> 18, ( 2826265336 ) -> 136, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1635575551 : BV:32
=stack.size
1 : 16674816 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1635447552 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2826393327 { -1468573969 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
175453149
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 695721980 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 79532214736595115034279936 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 2826265328 { -1468701968 } : BV:32
=symbol.2
1 : 1635447552 : BV:32
=dst_symbol_addr.1
1 : 2826265328 { -1468701968 } : BV:32
=dst_symbol_addr.2
1 : 1635447552 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2826265328 { -1468701968 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 695721980 : BV:32
=input.src.llvm-mem
1 : (( 2826265332 ) -> 16, ( 2826265337 ) -> 197, ( 2826265338 ) -> 65, ( 1635447577 ) -> 4, ( 1635447576 ) -> 18, ( 2826265336 ) -> 136, ( 2826265348 ) -> 16, ( 2826265353 ) -> 201, ( 2826265354 ) -> 65, ( 2826265352 ) -> 154, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 695721980 : BV:32
=commonMEM.nonstack.mem
1 : (( 2826265332 ) -> 16, ( 2826265337 ) -> 197, ( 2826265338 ) -> 65, ( 1635447577 ) -> 4, ( 1635447576 ) -> 18, ( 2826265336 ) -> 136, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 1635447580 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 2826265340 { -1468701956 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%arrayidx2
1 : 2826265356 { -1468701940 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 3 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 679047168 : BV:32
=memlabel-mem-esp_end
1 : 695721983 : BV:32
=input.src.llvm-%arrayidx
1 : 2826265340 { -1468701956 } : BV:32
=input.src.llvm-%arrayidx1
1 : 1635447580 : BV:32
=input.dst.mem
1 : (( 2826265332 ) -> 16, ( 2826265337 ) -> 197, ( 2826265338 ) -> 65, ( 1635447577 ) -> 4, ( 1635447576 ) -> 18, ( 2826265336 ) -> 136, ( 2826265348 ) -> 16, ( 2826265353 ) -> 201, ( 2826265354 ) -> 65, ( 2826265352 ) -> 154, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 2826265356 { -1468701940 } : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1635575551 : BV:32
=stack.size
1 : 16674816 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1635447552 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2826393327 { -1468573969 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
175453149
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 59
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 2147483155 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147483155 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 2147483155 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1615167308
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 2147483155 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (( 2147483155 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 2147483155 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1615167308
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 60
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 536942080 : BV:32
=symbol.2
1 : 159383008 : BV:32
=dst_symbol_addr.1
1 : 536942080 : BV:32
=dst_symbol_addr.2
1 : 159383008 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536942080 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 537100288 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 159511007 : BV:32
=stack.size
1 : 3757867008 { -537100288 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 159383008 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 537070079 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2059509848
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 536942080 : BV:32
=symbol.2
1 : 159383008 : BV:32
=dst_symbol_addr.1
1 : 536942080 : BV:32
=dst_symbol_addr.2
1 : 159383008 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536942080 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 537100288 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 4294967295 ) -> 255, ( 4294967292 ) -> 255, ( 4294967293 ) -> 255, ( 4294967294 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 159511007 : BV:32
=stack.size
1 : 3757867008 { -537100288 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 159383008 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 537070079 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2059509848
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 61
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3824880640 { -470086656 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3824880640 { -470086656 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3824880640 { -470086656 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2248191996 { -2046775300 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2248191999 { -2046775297 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2214637568 { -2080329728 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3825008639 { -469958657 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1470976763
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2248191996 { -2046775300 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 3824880640 { -470086656 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3824880640 { -470086656 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3824880640 { -470086656 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2248191996 { -2046775300 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2248191996 { -2046775300 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2248191999 { -2046775297 } : BV:32
=input.dst.mem
1 : (( 2248191996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2214637568 { -2080329728 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3825008639 { -469958657 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1470976763
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 62
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 150)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 150)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2667246020
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 57244867089890812255439937365158441366 : BV:128
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 150)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 4294967295 ) -> 128, ( 4294967292 ) -> 0, ( 4294967293 ) -> 0, ( 4294967294 ) -> 0, () -> (RAC: m_multiplier -> 27 , m_adder -> 150)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2667246020
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 63
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 150)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 150)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2667246020
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 9063709728985134430101611441514156764 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1073643542 ) -> 32, ( 1073643537 ) -> 18, ( 1073643548 ) -> 100, ( 1073643543 ) -> 87, ( 1073643540 ) -> 180, ( 1073643539 ) -> 127, ( 1073643538 ) -> 73, ( 1073643547 ) -> 46, ( 1073643544 ) -> 140, ( 1073643536 ) -> 220, ( 1073643546 ) -> 248, ( 1073643541 ) -> 234, ( 1073643550 ) -> 209, ( 1073643549 ) -> 155, ( 1073643545 ) -> 194, ( 1073643551 ) -> 6, () -> (RAC: m_multiplier -> 27 , m_adder -> 150)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-%0
1 : 722531802 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 2147483164 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 1073643532 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%arrayidx2
1 : 1073643548 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 3 : BV:32
=input.src.llvm-%add
1 : 114400100 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%arrayidx
1 : 1073643532 : BV:32
=input.src.llvm-%arrayidx1
1 : 2147483164 : BV:32
=input.dst.mem
1 : (( 1073643542 ) -> 32, ( 4294967295 ) -> 128, ( 4294967292 ) -> 0, ( 4294967293 ) -> 0, ( 4294967294 ) -> 0, ( 1073643537 ) -> 18, ( 1073643548 ) -> 100, ( 1073643543 ) -> 87, ( 1073643540 ) -> 180, ( 1073643539 ) -> 127, ( 1073643538 ) -> 73, ( 1073643547 ) -> 46, ( 1073643544 ) -> 140, ( 1073643536 ) -> 220, ( 1073643546 ) -> 248, ( 1073643541 ) -> 234, ( 1073643550 ) -> 209, ( 1073643549 ) -> 155, ( 1073643545 ) -> 194, ( 1073643551 ) -> 6, () -> (RAC: m_multiplier -> 27 , m_adder -> 150)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 1073643548 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%1
1 : 3686835594 { -608131702 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2667246020
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 64
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 150)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 150)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2667246020
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*((Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)))
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 48 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 194409667000894052791098255126526502098 { -145872699920044410672276352305241709358 } : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 12 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1073643542 ) -> 32, ( 1073643566 ) -> 65, ( 1073643537 ) -> 18, ( 1073643548 ) -> 100, ( 1073643543 ) -> 87, ( 1073643540 ) -> 180, ( 1073643567 ) -> 146, ( 1073643555 ) -> 198, ( 1073643539 ) -> 127, ( 1073643538 ) -> 73, ( 1073643559 ) -> 10, ( 1073643547 ) -> 46, ( 1073643544 ) -> 140, ( 1073643565 ) -> 240, ( 1073643561 ) -> 172, ( 1073643553 ) -> 36, ( 1073643554 ) -> 117, ( 1073643536 ) -> 220, ( 1073643564 ) -> 158, ( 1073643556 ) -> 22, ( 1073643552 ) -> 210, ( 1073643560 ) -> 90, ( 1073643563 ) -> 77, ( 1073643546 ) -> 248, ( 1073643562 ) -> 253, ( 1073643541 ) -> 234, ( 1073643557 ) -> 104, ( 1073643550 ) -> 209, ( 1073643549 ) -> 155, ( 1073643545 ) -> 194, ( 1073643558 ) -> 185, ( 1073643551 ) -> 6, () -> (RAC: m_multiplier -> 27 , m_adder -> 150)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-%0
1 : 114400100 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 2147483180 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 1073643548 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%arrayidx2
1 : 1073643564 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 7 : BV:32
=input.src.llvm-%add
1 : 2453794974 { -1841172322 } : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%arrayidx
1 : 1073643548 : BV:32
=input.src.llvm-%arrayidx1
1 : 2147483180 : BV:32
=input.dst.mem
1 : (( 1073643542 ) -> 32, ( 1073643566 ) -> 65, ( 4294967295 ) -> 128, ( 4294967292 ) -> 0, ( 4294967293 ) -> 0, ( 4294967294 ) -> 0, ( 1073643537 ) -> 18, ( 1073643548 ) -> 100, ( 1073643543 ) -> 87, ( 1073643540 ) -> 180, ( 1073643567 ) -> 146, ( 1073643555 ) -> 198, ( 1073643539 ) -> 127, ( 1073643538 ) -> 73, ( 1073643559 ) -> 10, ( 1073643547 ) -> 46, ( 1073643544 ) -> 140, ( 1073643565 ) -> 240, ( 1073643561 ) -> 172, ( 1073643553 ) -> 36, ( 1073643554 ) -> 117, ( 1073643536 ) -> 220, ( 1073643564 ) -> 158, ( 1073643556 ) -> 22, ( 1073643552 ) -> 210, ( 1073643560 ) -> 90, ( 1073643563 ) -> 77, ( 1073643546 ) -> 248, ( 1073643562 ) -> 253, ( 1073643541 ) -> 234, ( 1073643557 ) -> 104, ( 1073643550 ) -> 209, ( 1073643549 ) -> 155, ( 1073643545 ) -> 194, ( 1073643558 ) -> 185, ( 1073643551 ) -> 6, () -> (RAC: m_multiplier -> 27 , m_adder -> 150)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 12 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 1073643564 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%1
1 : 2339394874 { -1955572422 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2667246020
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 65
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 150)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 150)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2667246020
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*((Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)*((Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))))
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 64 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 273000392188168816392543338981470889592 { -67281974732769647070831268450297321864 } : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 16 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1073643542 ) -> 32, ( 1073643566 ) -> 65, ( 1073643573 ) -> 149, ( 1073643537 ) -> 18, ( 1073643572 ) -> 40, ( 1073643571 ) -> 190, ( 1073643548 ) -> 100, ( 1073643543 ) -> 87, ( 1073643540 ) -> 180, ( 1073643577 ) -> 69, ( 1073643569 ) -> 230, ( 1073643567 ) -> 146, ( 1073643555 ) -> 198, ( 1073643539 ) -> 127, ( 1073643538 ) -> 73, ( 1073643559 ) -> 10, ( 1073643580 ) -> 136, ( 1073643578 ) -> 178, ( 1073643547 ) -> 46, ( 1073643544 ) -> 140, ( 1073643565 ) -> 240, ( 1073643561 ) -> 172, ( 1073643553 ) -> 36, ( 1073643574 ) -> 1, ( 1073643576 ) -> 216, ( 1073643554 ) -> 117, ( 1073643575 ) -> 110, ( 1073643570 ) -> 81, ( 1073643536 ) -> 220, ( 1073643564 ) -> 158, ( 1073643579 ) -> 29, ( 1073643556 ) -> 22, ( 1073643552 ) -> 210, ( 1073643560 ) -> 90, ( 1073643582 ) -> 97, ( 1073643563 ) -> 77, ( 1073643581 ) -> 246, ( 1073643546 ) -> 248, ( 1073643562 ) -> 253, ( 1073643541 ) -> 234, ( 1073643557 ) -> 104, ( 1073643550 ) -> 209, ( 1073643568 ) -> 120, ( 1073643549 ) -> 155, ( 1073643545 ) -> 194, ( 1073643558 ) -> 185, ( 1073643551 ) -> 6, ( 1073643583 ) -> 205, () -> (RAC: m_multiplier -> 27 , m_adder -> 150)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-%0
1 : 2453794974 { -1841172322 } : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 2147483196 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 60 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 1073643564 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%arrayidx2
1 : 1073643580 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 11 : BV:32
=input.src.llvm-%add
1 : 3445749384 { -849217912 } : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%arrayidx
1 : 1073643564 : BV:32
=input.src.llvm-%arrayidx1
1 : 2147483196 : BV:32
=input.dst.mem
1 : (( 1073643542 ) -> 32, ( 1073643566 ) -> 65, ( 4294967295 ) -> 128, ( 4294967292 ) -> 0, ( 4294967293 ) -> 0, ( 4294967294 ) -> 0, ( 1073643573 ) -> 149, ( 1073643537 ) -> 18, ( 1073643572 ) -> 40, ( 1073643571 ) -> 190, ( 1073643548 ) -> 100, ( 1073643543 ) -> 87, ( 1073643540 ) -> 180, ( 1073643577 ) -> 69, ( 1073643569 ) -> 230, ( 1073643567 ) -> 146, ( 1073643555 ) -> 198, ( 1073643539 ) -> 127, ( 1073643538 ) -> 73, ( 1073643559 ) -> 10, ( 1073643580 ) -> 136, ( 1073643578 ) -> 178, ( 1073643547 ) -> 46, ( 1073643544 ) -> 140, ( 1073643565 ) -> 240, ( 1073643561 ) -> 172, ( 1073643553 ) -> 36, ( 1073643574 ) -> 1, ( 1073643576 ) -> 216, ( 1073643554 ) -> 117, ( 1073643575 ) -> 110, ( 1073643570 ) -> 81, ( 1073643536 ) -> 220, ( 1073643564 ) -> 158, ( 1073643579 ) -> 29, ( 1073643556 ) -> 22, ( 1073643552 ) -> 210, ( 1073643560 ) -> 90, ( 1073643582 ) -> 97, ( 1073643563 ) -> 77, ( 1073643581 ) -> 246, ( 1073643546 ) -> 248, ( 1073643562 ) -> 253, ( 1073643541 ) -> 234, ( 1073643557 ) -> 104, ( 1073643550 ) -> 209, ( 1073643568 ) -> 120, ( 1073643549 ) -> 155, ( 1073643545 ) -> 194, ( 1073643558 ) -> 185, ( 1073643551 ) -> 6, ( 1073643583 ) -> 205, () -> (RAC: m_multiplier -> 27 , m_adder -> 150)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 16 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 1073643580 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 60 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 60 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 60 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%1
1 : 991954410 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2667246020
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 66
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 2978089984 { -1316877312 } : BV:32
=symbol.2
1 : 2889968656 { -1404998640 } : BV:32
=dst_symbol_addr.1
1 : 2978089984 { -1316877312 } : BV:32
=dst_symbol_addr.2
1 : 2889968656 { -1404998640 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2978089984 { -1316877312 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2820890620 { -1474076676 } : BV:32
=input.src.llvm-mem
1 : (( 2978089992 ) -> 8, ( 2889968680 ) -> 8, ( 2889968684 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2978089992 ) -> 8, ( 2889968680 ) -> 8, ( 2889968684 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 503316480 : BV:32
=memlabel-mem-esp_end
1 : 2820890623 { -1474076673 } : BV:32
=input.dst.mem
1 : (( 2978089992 ) -> 8, ( 2889968680 ) -> 8, ( 2889968684 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2890096655 { -1404870641 } : BV:32
=stack.size
1 : 2317574144 { -1977393152 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2889968656 { -1404998640 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2978217983 { -1316749313 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
322232273
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2820890620 { -1474076676 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 147573952589676412928 : BV:128
=symbol.1
1 : 2978089984 { -1316877312 } : BV:32
=symbol.2
1 : 2889968656 { -1404998640 } : BV:32
=dst_symbol_addr.1
1 : 2978089984 { -1316877312 } : BV:32
=dst_symbol_addr.2
1 : 2889968656 { -1404998640 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2978089984 { -1316877312 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2820890620 { -1474076676 } : BV:32
=input.src.llvm-mem
1 : (( 2978089992 ) -> 8, ( 2889968680 ) -> 8, ( 2889968684 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2820890620 { -1474076676 } : BV:32
=commonMEM.nonstack.mem
1 : (( 2978089992 ) -> 8, ( 2889968680 ) -> 8, ( 2889968684 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 503316480 : BV:32
=memlabel-mem-esp_end
1 : 2820890623 { -1474076673 } : BV:32
=input.dst.mem
1 : (( 2978089992 ) -> 8, ( 2889968680 ) -> 8, ( 2889968684 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 2890096655 { -1404870641 } : BV:32
=stack.size
1 : 2317574144 { -1977393152 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2889968656 { -1404998640 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2978217983 { -1316749313 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
322232273
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 67
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 2978089984 { -1316877312 } : BV:32
=symbol.2
1 : 2889968656 { -1404998640 } : BV:32
=dst_symbol_addr.1
1 : 2978089984 { -1316877312 } : BV:32
=dst_symbol_addr.2
1 : 2889968656 { -1404998640 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2978089984 { -1316877312 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2820890620 { -1474076676 } : BV:32
=input.src.llvm-mem
1 : (( 2978089992 ) -> 8, ( 2889968680 ) -> 8, ( 2889968684 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2978089992 ) -> 8, ( 2889968680 ) -> 8, ( 2889968684 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 503316480 : BV:32
=memlabel-mem-esp_end
1 : 2820890623 { -1474076673 } : BV:32
=input.dst.mem
1 : (( 2978089992 ) -> 8, ( 2889968680 ) -> 8, ( 2889968684 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2890096655 { -1404870641 } : BV:32
=stack.size
1 : 2317574144 { -1977393152 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2889968656 { -1404998640 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2978217983 { -1316749313 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
322232273
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2820890620 { -1474076676 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 3882179963494100447263006392320 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 2978089984 { -1316877312 } : BV:32
=symbol.2
1 : 2889968656 { -1404998640 } : BV:32
=dst_symbol_addr.1
1 : 2978089984 { -1316877312 } : BV:32
=dst_symbol_addr.2
1 : 2889968656 { -1404998640 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2978089984 { -1316877312 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2820890620 { -1474076676 } : BV:32
=input.src.llvm-mem
1 : (( 2978090008 ) -> 16, ( 2978089992 ) -> 8, ( 2889968680 ) -> 8, ( 2889968684 ) -> 49, ( 2978090012 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2820890620 { -1474076676 } : BV:32
=commonMEM.nonstack.mem
1 : (( 2978089992 ) -> 8, ( 2889968680 ) -> 8, ( 2889968684 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 2889968684 { -1404998612 } : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 2978089996 { -1316877300 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%arrayidx2
1 : 2978090012 { -1316877284 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 3 : BV:32
=input.src.llvm-%add
1 : 49 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 503316480 : BV:32
=memlabel-mem-esp_end
1 : 2820890623 { -1474076673 } : BV:32
=input.src.llvm-%arrayidx
1 : 2978089996 { -1316877300 } : BV:32
=input.src.llvm-%arrayidx1
1 : 2889968684 { -1404998612 } : BV:32
=input.dst.mem
1 : (( 2978090008 ) -> 16, ( 2978089992 ) -> 8, ( 2889968680 ) -> 8, ( 2889968684 ) -> 49, ( 2978090012 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 2978090012 { -1316877284 } : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%1
1 : 49 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2890096655 { -1404870641 } : BV:32
=stack.size
1 : 2317574144 { -1977393152 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2889968656 { -1404998640 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2978217983 { -1316749313 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
322232273
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 68
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4294193968 { -773328 } : BV:32
=symbol.2
1 : 4294754704 { -212592 } : BV:32
=dst_symbol_addr.1
1 : 4294193968 { -773328 } : BV:32
=dst_symbol_addr.2
1 : 4294754704 { -212592 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294193968 { -773328 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294193148 { -774148 } : BV:32
=input.src.llvm-mem
1 : (( 4294754724 ) -> 162, ( 4294193981 ) -> 0, ( 4294193976 ) -> 243, ( 4294193973 ) -> 0, ( 4294193972 ) -> 176, ( 4294754733 ) -> 0, ( 4294754732 ) -> 247, ( 4294754725 ) -> 0, ( 4294754728 ) -> 41, ( 4294193980 ) -> 75, ( 4294754721 ) -> 1, ( 4294754729 ) -> 1, ( 4294193969 ) -> 1, ( 4294193977 ) -> 1, () -> 132) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4294754724 ) -> 162, ( 4294193981 ) -> 0, ( 4294193976 ) -> 243, ( 4294193973 ) -> 0, ( 4294193972 ) -> 176, ( 4294754733 ) -> 0, ( 4294754732 ) -> 247, ( 4294754725 ) -> 0, ( 4294754728 ) -> 41, ( 4294193980 ) -> 75, ( 4294754721 ) -> 1, ( 4294754729 ) -> 1, ( 4294193969 ) -> 1, ( 4294193977 ) -> 1, () -> 132) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 8192 : BV:32
=memlabel-mem-esp_end
1 : 4294193151 { -774145 } : BV:32
=input.dst.mem
1 : (( 4294754724 ) -> 162, ( 4294193981 ) -> 0, ( 4294193976 ) -> 243, ( 4294193973 ) -> 0, ( 4294193972 ) -> 176, ( 4294754733 ) -> 0, ( 4294754732 ) -> 247, ( 4294754725 ) -> 0, ( 4294754728 ) -> 41, ( 4294193980 ) -> 75, ( 4294754721 ) -> 1, ( 4294754729 ) -> 1, ( 4294193969 ) -> 1, ( 4294193977 ) -> 1, () -> 132) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294882703 { -84593 } : BV:32
=stack.size
1 : 4294184960 { -782336 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294754704 { -212592 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294321967 { -645329 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
212993805
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294193148 { -774148 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 176143484612059289759174607760127164804 { -164138882308879173704199999671641046652 } : BV:128
=symbol.1
1 : 4294193968 { -773328 } : BV:32
=symbol.2
1 : 4294754704 { -212592 } : BV:32
=dst_symbol_addr.1
1 : 4294193968 { -773328 } : BV:32
=dst_symbol_addr.2
1 : 4294754704 { -212592 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294193968 { -773328 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294193148 { -774148 } : BV:32
=input.src.llvm-mem
1 : (( 4294754724 ) -> 162, ( 4294193981 ) -> 0, ( 4294193976 ) -> 243, ( 4294193973 ) -> 0, ( 4294193972 ) -> 176, ( 4294754733 ) -> 0, ( 4294754732 ) -> 247, ( 4294754725 ) -> 0, ( 4294754728 ) -> 41, ( 4294193980 ) -> 75, ( 4294754721 ) -> 1, ( 4294754729 ) -> 1, ( 4294193969 ) -> 1, ( 4294193977 ) -> 1, () -> 132) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294193148 { -774148 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294754724 ) -> 162, ( 4294193981 ) -> 0, ( 4294193976 ) -> 243, ( 4294193973 ) -> 0, ( 4294193972 ) -> 176, ( 4294754733 ) -> 0, ( 4294754732 ) -> 247, ( 4294754725 ) -> 0, ( 4294754728 ) -> 41, ( 4294193980 ) -> 75, ( 4294754721 ) -> 1, ( 4294754729 ) -> 1, ( 4294193969 ) -> 1, ( 4294193977 ) -> 1, () -> 132) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 8192 : BV:32
=memlabel-mem-esp_end
1 : 4294193151 { -774145 } : BV:32
=input.dst.mem
1 : (( 4294754724 ) -> 162, ( 4294193981 ) -> 0, ( 4294193976 ) -> 243, ( 4294193973 ) -> 0, ( 4294193972 ) -> 176, ( 4294754733 ) -> 0, ( 4294754732 ) -> 247, ( 4294754725 ) -> 0, ( 4294754728 ) -> 41, ( 4294193980 ) -> 75, ( 4294754721 ) -> 1, ( 4294754729 ) -> 1, ( 4294193969 ) -> 1, ( 4294193977 ) -> 1, ( 4294193148 ) -> 0, ( 4294193151 ) -> 0, ( 4294193150 ) -> 0, ( 4294193149 ) -> 0, () -> 132) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 4294882703 { -84593 } : BV:32
=stack.size
1 : 4294184960 { -782336 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294754704 { -212592 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294321967 { -645329 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
212993805
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 69
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4294193968 { -773328 } : BV:32
=symbol.2
1 : 4294754704 { -212592 } : BV:32
=dst_symbol_addr.1
1 : 4294193968 { -773328 } : BV:32
=dst_symbol_addr.2
1 : 4294754704 { -212592 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294193968 { -773328 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294193148 { -774148 } : BV:32
=input.src.llvm-mem
1 : (( 4294754724 ) -> 162, ( 4294193981 ) -> 0, ( 4294193976 ) -> 243, ( 4294193973 ) -> 0, ( 4294193972 ) -> 176, ( 4294754733 ) -> 0, ( 4294754732 ) -> 247, ( 4294754725 ) -> 0, ( 4294754728 ) -> 41, ( 4294193980 ) -> 75, ( 4294754721 ) -> 1, ( 4294754729 ) -> 1, ( 4294193969 ) -> 1, ( 4294193977 ) -> 1, () -> 132) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4294754724 ) -> 162, ( 4294193981 ) -> 0, ( 4294193976 ) -> 243, ( 4294193973 ) -> 0, ( 4294193972 ) -> 176, ( 4294754733 ) -> 0, ( 4294754732 ) -> 247, ( 4294754725 ) -> 0, ( 4294754728 ) -> 41, ( 4294193980 ) -> 75, ( 4294754721 ) -> 1, ( 4294754729 ) -> 1, ( 4294193969 ) -> 1, ( 4294193977 ) -> 1, () -> 132) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 8192 : BV:32
=memlabel-mem-esp_end
1 : 4294193151 { -774145 } : BV:32
=input.dst.mem
1 : (( 4294754724 ) -> 162, ( 4294193981 ) -> 0, ( 4294193976 ) -> 243, ( 4294193973 ) -> 0, ( 4294193972 ) -> 176, ( 4294754733 ) -> 0, ( 4294754732 ) -> 247, ( 4294754725 ) -> 0, ( 4294754728 ) -> 41, ( 4294193980 ) -> 75, ( 4294754721 ) -> 1, ( 4294754729 ) -> 1, ( 4294193969 ) -> 1, ( 4294193977 ) -> 1, () -> 132) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294882703 { -84593 } : BV:32
=stack.size
1 : 4294184960 { -782336 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294754704 { -212592 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294321967 { -645329 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
212993805
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294193148 { -774148 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 12004615851195902249487289557038138120 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 4294193968 { -773328 } : BV:32
=symbol.2
1 : 4294754704 { -212592 } : BV:32
=dst_symbol_addr.1
1 : 4294193968 { -773328 } : BV:32
=dst_symbol_addr.2
1 : 4294754704 { -212592 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294193968 { -773328 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294193148 { -774148 } : BV:32
=input.src.llvm-mem
1 : (( 4294193986 ) -> 8, ( 4294754724 ) -> 162, ( 4294193981 ) -> 0, ( 4294193976 ) -> 243, ( 4294193973 ) -> 0, ( 4294193972 ) -> 176, ( 4294754733 ) -> 0, ( 4294754732 ) -> 247, ( 4294754725 ) -> 0, ( 4294754728 ) -> 41, ( 4294193980 ) -> 75, ( 4294754721 ) -> 1, ( 4294754729 ) -> 1, ( 4294193969 ) -> 1, ( 4294193977 ) -> 1, ( 4294193990 ) -> 8, ( 4294193987 ) -> 9, ( 4294193989 ) -> 1, ( 4294193994 ) -> 8, ( 4294193996 ) -> 66, ( 4294193998 ) -> 8, ( 4294193988 ) -> 82, ( 4294193985 ) -> 3, ( 4294193984 ) -> 8, ( 4294193991 ) -> 9, ( 4294193993 ) -> 3, ( 4294193992 ) -> 28, ( 4294193995 ) -> 9, ( 4294193999 ) -> 9, ( 4294193997 ) -> 1, () -> 132) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294193148 { -774148 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294754724 ) -> 162, ( 4294193981 ) -> 0, ( 4294193976 ) -> 243, ( 4294193973 ) -> 0, ( 4294193972 ) -> 176, ( 4294754733 ) -> 0, ( 4294754732 ) -> 247, ( 4294754725 ) -> 0, ( 4294754728 ) -> 41, ( 4294193980 ) -> 75, ( 4294754721 ) -> 1, ( 4294754729 ) -> 1, ( 4294193969 ) -> 1, ( 4294193977 ) -> 1, () -> 132) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 2223243339 { -2071723957 } : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 4294754732 { -212564 } : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 4294193980 { -773316 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%arrayidx2
1 : 4294193996 { -773300 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 3 : BV:32
=input.src.llvm-%add
1 : 151519554 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 8192 : BV:32
=memlabel-mem-esp_end
1 : 4294193151 { -774145 } : BV:32
=input.src.llvm-%arrayidx
1 : 4294193980 { -773316 } : BV:32
=input.src.llvm-%arrayidx1
1 : 4294754732 { -212564 } : BV:32
=input.dst.mem
1 : (( 4294193986 ) -> 8, ( 4294754724 ) -> 162, ( 4294193981 ) -> 0, ( 4294193976 ) -> 243, ( 4294193973 ) -> 0, ( 4294193972 ) -> 176, ( 4294754733 ) -> 0, ( 4294754732 ) -> 247, ( 4294754725 ) -> 0, ( 4294754728 ) -> 41, ( 4294193980 ) -> 75, ( 4294754721 ) -> 1, ( 4294754729 ) -> 1, ( 4294193969 ) -> 1, ( 4294193977 ) -> 1, ( 4294193148 ) -> 0, ( 4294193151 ) -> 0, ( 4294193150 ) -> 0, ( 4294193149 ) -> 0, ( 4294193990 ) -> 8, ( 4294193987 ) -> 9, ( 4294193989 ) -> 1, ( 4294193994 ) -> 8, ( 4294193996 ) -> 66, ( 4294193998 ) -> 8, ( 4294193988 ) -> 82, ( 4294193985 ) -> 3, ( 4294193984 ) -> 8, ( 4294193991 ) -> 9, ( 4294193993 ) -> 3, ( 4294193992 ) -> 28, ( 4294193995 ) -> 9, ( 4294193999 ) -> 9, ( 4294193997 ) -> 1, () -> 132) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 4294193996 { -773300 } : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%1
1 : 2223243511 { -2071723785 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294882703 { -84593 } : BV:32
=stack.size
1 : 4294184960 { -782336 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294754704 { -212592 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294321967 { -645329 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
212993805
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 70
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 2048 : BV:32
=symbol.2
1 : 130048 : BV:32
=dst_symbol_addr.1
1 : 2048 : BV:32
=dst_symbol_addr.2
1 : 130048 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2048 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 2060 ) -> 2, ( 2052 ) -> 1, ( 130072 ) -> 4, ( 2056 ) -> 5, ( 130076 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2060 ) -> 2, ( 2052 ) -> 1, ( 130072 ) -> 4, ( 2056 ) -> 5, ( 130076 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 258048 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 2060 ) -> 2, ( 2052 ) -> 1, ( 130072 ) -> 4, ( 2056 ) -> 5, ( 130076 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 258047 : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 130048 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 130047 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1002809090
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 158456325120762395559930626048 : BV:128
=symbol.1
1 : 2048 : BV:32
=symbol.2
1 : 130048 : BV:32
=dst_symbol_addr.1
1 : 2048 : BV:32
=dst_symbol_addr.2
1 : 130048 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2048 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 2060 ) -> 2, ( 2052 ) -> 1, ( 130072 ) -> 4, ( 2056 ) -> 5, ( 130076 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (( 2060 ) -> 2, ( 2052 ) -> 1, ( 130072 ) -> 4, ( 2056 ) -> 5, ( 130076 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 258048 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 2060 ) -> 2, ( 2052 ) -> 1, ( 130072 ) -> 4, ( 2056 ) -> 5, ( 130076 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 258047 : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 130048 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 130047 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1002809090
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 71
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4126870528 { -168096768 } : BV:32
=symbol.2
1 : 3623795728 { -671171568 } : BV:32
=dst_symbol_addr.1
1 : 4126870528 { -168096768 } : BV:32
=dst_symbol_addr.2
1 : 3623795728 { -671171568 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4126870528 { -168096768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2550181884 { -1744785412 } : BV:32
=input.src.llvm-mem
1 : (( 3623795752 ) -> 1, ( 4126870540 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3623795752 ) -> 1, ( 4126870540 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 2550181887 { -1744785409 } : BV:32
=input.dst.mem
1 : (( 3623795752 ) -> 1, ( 4126870540 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3623923727 { -671043569 } : BV:32
=stack.size
1 : 2550181888 { -1744785408 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3623795728 { -671171568 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4126998527 { -167968769 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
420982066
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2550181884 { -1744785412 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 79228162514264337593543950336 : BV:128
=symbol.1
1 : 4126870528 { -168096768 } : BV:32
=symbol.2
1 : 3623795728 { -671171568 } : BV:32
=dst_symbol_addr.1
1 : 4126870528 { -168096768 } : BV:32
=dst_symbol_addr.2
1 : 3623795728 { -671171568 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4126870528 { -168096768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2550181884 { -1744785412 } : BV:32
=input.src.llvm-mem
1 : (( 3623795752 ) -> 1, ( 4126870540 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2550181884 { -1744785412 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3623795752 ) -> 1, ( 4126870540 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 2550181887 { -1744785409 } : BV:32
=input.dst.mem
1 : (( 3623795752 ) -> 1, ( 4126870540 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3623923727 { -671043569 } : BV:32
=stack.size
1 : 2550181888 { -1744785408 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3623795728 { -671171568 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4126998527 { -167968769 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
420982066
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 72
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4126870528 { -168096768 } : BV:32
=symbol.2
1 : 3623795728 { -671171568 } : BV:32
=dst_symbol_addr.1
1 : 4126870528 { -168096768 } : BV:32
=dst_symbol_addr.2
1 : 3623795728 { -671171568 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4126870528 { -168096768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2550181884 { -1744785412 } : BV:32
=input.src.llvm-mem
1 : (( 3623795752 ) -> 1, ( 4126870540 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3623795752 ) -> 1, ( 4126870540 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 2550181887 { -1744785409 } : BV:32
=input.dst.mem
1 : (( 3623795752 ) -> 1, ( 4126870540 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3623923727 { -671043569 } : BV:32
=stack.size
1 : 2550181888 { -1744785408 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3623795728 { -671171568 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4126998527 { -167968769 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
420982066
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2550181884 { -1744785412 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 79228162532711081667253501952 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 4126870528 { -168096768 } : BV:32
=symbol.2
1 : 3623795728 { -671171568 } : BV:32
=dst_symbol_addr.1
1 : 4126870528 { -168096768 } : BV:32
=dst_symbol_addr.2
1 : 3623795728 { -671171568 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4126870528 { -168096768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2550181884 { -1744785412 } : BV:32
=input.src.llvm-mem
1 : (( 3623795752 ) -> 1, ( 4126870540 ) -> 1, ( 4126870552 ) -> 1, ( 4126870556 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2550181884 { -1744785412 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3623795752 ) -> 1, ( 4126870540 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 1 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 3623795756 { -671171540 } : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 4126870540 { -168096756 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%arrayidx2
1 : 4126870556 { -168096740 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 3 : BV:32
=input.src.llvm-%add
1 : 1 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 2550181887 { -1744785409 } : BV:32
=input.src.llvm-%arrayidx
1 : 4126870540 { -168096756 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3623795756 { -671171540 } : BV:32
=input.dst.mem
1 : (( 3623795752 ) -> 1, ( 4126870540 ) -> 1, ( 4126870552 ) -> 1, ( 4126870556 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 4126870556 { -168096740 } : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3623923727 { -671043569 } : BV:32
=stack.size
1 : 2550181888 { -1744785408 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3623795728 { -671171568 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4126998527 { -167968769 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
420982066
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 73
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 2147483152 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147483152 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 2147483152 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025924464
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 1073643520 : BV:32
=symbol.2
1 : 2147483136 : BV:32
=dst_symbol_addr.1
1 : 1073643520 : BV:32
=dst_symbol_addr.2
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073643520 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 2147483152 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (( 2147483152 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 2147483152 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 2147611135 { -2147356161 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147483136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073771519 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025924464
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 74
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3824880640 { -470086656 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3824880640 { -470086656 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3824880640 { -470086656 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2717954044 { -1577013252 } : BV:32
=input.src.llvm-mem
1 : (( 3824880640 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3824880640 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2717954047 { -1577013249 } : BV:32
=input.dst.mem
1 : (( 3824880640 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2684399616 { -1610567680 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3825008639 { -469958657 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1770385503
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2717954044 { -1577013252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 1 : BV:128
=symbol.1
1 : 3824880640 { -470086656 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3824880640 { -470086656 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3824880640 { -470086656 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2717954044 { -1577013252 } : BV:32
=input.src.llvm-mem
1 : (( 3824880640 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2717954044 { -1577013252 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3824880640 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2717954047 { -1577013249 } : BV:32
=input.dst.mem
1 : (( 3824880640 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2684399616 { -1610567680 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3825008639 { -469958657 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1770385503
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 75
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3824880640 { -470086656 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3824880640 { -470086656 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3824880640 { -470086656 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2248191996 { -2046775300 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2248191999 { -2046775297 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2214637568 { -2080329728 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3825008639 { -469958657 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
100995797
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2248191996 { -2046775300 } : BV:32
=input.dst.exreg.0.5
1 : 1 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 3824880640 { -470086656 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3824880640 { -470086656 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3824880640 { -470086656 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2248191996 { -2046775300 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2248191996 { -2046775300 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2248191999 { -2046775297 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2214637568 { -2080329728 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3825008639 { -469958657 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
100995797
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 76
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3824880640 { -470086656 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3824880640 { -470086656 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3824880640 { -470086656 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2248191996 { -2046775300 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2248191999 { -2046775297 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2214637568 { -2080329728 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3825008639 { -469958657 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
987496144
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 1 : BV:32
=input.dst.exreg.0.4
1 : 2248191996 { -2046775300 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 3824880640 { -470086656 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3824880640 { -470086656 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3824880640 { -470086656 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2248191996 { -2046775300 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2248191996 { -2046775300 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2248191999 { -2046775297 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2214637568 { -2080329728 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3825008639 { -469958657 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
987496144
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 77
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3824880640 { -470086656 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3824880640 { -470086656 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3824880640 { -470086656 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2248191996 { -2046775300 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2248191999 { -2046775297 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2214637568 { -2080329728 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3825008639 { -469958657 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1367122594
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2248191996 { -2046775300 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 1 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 3824880640 { -470086656 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3824880640 { -470086656 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3824880640 { -470086656 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2248191996 { -2046775300 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2248191996 { -2046775300 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2248191999 { -2046775297 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2214637568 { -2080329728 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3825008639 { -469958657 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1367122594
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 78
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3824880640 { -470086656 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3824880640 { -470086656 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3824880640 { -470086656 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2248191996 { -2046775300 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2248191999 { -2046775297 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2214637568 { -2080329728 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3825008639 { -469958657 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
941154508
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 4 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 16 : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.1 : BV:32
10 : 16 : INT
11 : select(7, 8, 9, 10, 6) : BV:128
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2248191996 { -2046775300 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 1 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=symbol.1
1 : 3824880640 { -470086656 } : BV:32
=symbol.2
1 : 3489578000 { -805389296 } : BV:32
=dst_symbol_addr.1
1 : 3824880640 { -470086656 } : BV:32
=dst_symbol_addr.2
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3824880640 { -470086656 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2248191996 { -2046775300 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2248191996 { -2046775300 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 33554432 : BV:32
=memlabel-mem-esp_end
1 : 2248191999 { -2046775297 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3489705999 { -805261297 } : BV:32
=stack.size
1 : 2214637568 { -2080329728 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3489578000 { -805389296 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3825008639 { -469958657 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
941154508
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 79
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 64 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3814318076 { -480649220 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4289077856 { -5889440 } : BV:32
=symbol.2
1 : 4292972544 { -1994752 } : BV:32
=dst_symbol_addr.1
1 : 4289077856 { -5889440 } : BV:32
=dst_symbol_addr.2
1 : 4292972544 { -1994752 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4289077856 { -5889440 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 16 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3814318076 { -480649220 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3814318076 { -480649220 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 5836800 : BV:32
=memlabel-mem-esp_end
1 : 3814318079 { -480649217 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 4293100543 { -1866753 } : BV:32
=stack.size
1 : 3808481280 { -486486016 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4292972544 { -1994752 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4289205855 { -5761441 } : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
526083781
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 80 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3814318076 { -480649220 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 4289077856 { -5889440 } : BV:32
=symbol.2
1 : 4292972544 { -1994752 } : BV:32
=dst_symbol_addr.1
1 : 4289077856 { -5889440 } : BV:32
=dst_symbol_addr.2
1 : 4292972544 { -1994752 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4289077856 { -5889440 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 20 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 20 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3814318076 { -480649220 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3814318076 { -480649220 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 4292972620 { -1994676 } : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 76 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 4289077916 { -5889380 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 60 : BV:32
=input.src.llvm-%arrayidx2
1 : 4289077932 { -5889364 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 15 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 5836800 : BV:32
=memlabel-mem-esp_end
1 : 3814318079 { -480649217 } : BV:32
=input.src.llvm-%arrayidx
1 : 4289077916 { -5889380 } : BV:32
=input.src.llvm-%arrayidx1
1 : 4292972620 { -1994676 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 20 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 4289077932 { -5889364 } : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 76 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 60 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4293100543 { -1866753 } : BV:32
=stack.size
1 : 3808481280 { -486486016 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4292972544 { -1994752 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4289205855 { -5761441 } : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
526083781
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 80
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 128 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 117039100 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 155591264 : BV:32
=symbol.2
1 : 1246859264 : BV:32
=dst_symbol_addr.1
1 : 155591264 : BV:32
=dst_symbol_addr.2
1 : 1246859264 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 155591264 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 32 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 32 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 117039100 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 117039100 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 116985856 : BV:32
=memlabel-mem-esp_end
1 : 117039103 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 1246987263 : BV:32
=stack.size
1 : 53248 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1246859264 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 155719263 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2100984705
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 144 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 117039100 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 155591264 : BV:32
=symbol.2
1 : 1246859264 : BV:32
=dst_symbol_addr.1
1 : 155591264 : BV:32
=dst_symbol_addr.2
1 : 1246859264 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 155591264 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 36 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 36 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 117039100 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 117039100 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 1246859404 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 140 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 155591388 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 124 : BV:32
=input.src.llvm-%arrayidx2
1 : 155591404 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 31 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 116985856 : BV:32
=memlabel-mem-esp_end
1 : 117039103 : BV:32
=input.src.llvm-%arrayidx
1 : 155591388 : BV:32
=input.src.llvm-%arrayidx1
1 : 1246859404 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 36 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 155591404 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 140 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 124 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1246987263 : BV:32
=stack.size
1 : 53248 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1246859264 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 155719263 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2100984705
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 81
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 256 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1868161020 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 2661687904 { -1633279392 } : BV:32
=symbol.2
1 : 2684456960 { -1610510336 } : BV:32
=dst_symbol_addr.1
1 : 2661687904 { -1633279392 } : BV:32
=dst_symbol_addr.2
1 : 2684456960 { -1610510336 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2661687904 { -1633279392 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 64 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 64 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1868161020 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1868161020 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1633226752 : BV:32
=memlabel-mem-esp_end
1 : 1868161023 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 2684584959 { -1610382337 } : BV:32
=stack.size
1 : 234934272 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2684456960 { -1610510336 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2661815903 { -1633151393 } : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1905031020
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 272 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1868161020 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 2661687904 { -1633279392 } : BV:32
=symbol.2
1 : 2684456960 { -1610510336 } : BV:32
=dst_symbol_addr.1
1 : 2661687904 { -1633279392 } : BV:32
=dst_symbol_addr.2
1 : 2684456960 { -1610510336 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2661687904 { -1633279392 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 68 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 68 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1868161020 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1868161020 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 2684457228 { -1610510068 } : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 268 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 2661688156 { -1633279140 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 252 : BV:32
=input.src.llvm-%arrayidx2
1 : 2661688172 { -1633279124 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 63 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1633226752 : BV:32
=memlabel-mem-esp_end
1 : 1868161023 : BV:32
=input.src.llvm-%arrayidx
1 : 2661688156 { -1633279140 } : BV:32
=input.src.llvm-%arrayidx1
1 : 2684457228 { -1610510068 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 68 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 2661688172 { -1633279124 } : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 268 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 252 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2684584959 { -1610382337 } : BV:32
=stack.size
1 : 234934272 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2684456960 { -1610510336 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2661815903 { -1633151393 } : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1905031020
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 82
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 512 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2020204540 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4153811552 { -141155744 } : BV:32
=symbol.2
1 : 4287102976 { -7864320 } : BV:32
=dst_symbol_addr.1
1 : 4153811552 { -141155744 } : BV:32
=dst_symbol_addr.2
1 : 4287102976 { -7864320 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4153811552 { -141155744 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 128 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 128 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2020204540 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2020204540 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 140578816 : BV:32
=memlabel-mem-esp_end
1 : 2020204543 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 4287230975 { -7736321 } : BV:32
=stack.size
1 : 1879625728 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4287102976 { -7864320 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4153939551 { -141027745 } : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1380822376
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 528 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2020204540 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 4153811552 { -141155744 } : BV:32
=symbol.2
1 : 4287102976 { -7864320 } : BV:32
=dst_symbol_addr.1
1 : 4153811552 { -141155744 } : BV:32
=dst_symbol_addr.2
1 : 4287102976 { -7864320 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4153811552 { -141155744 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 132 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 132 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2020204540 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2020204540 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 4287103500 { -7863796 } : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 524 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 4153812060 { -141155236 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 508 : BV:32
=input.src.llvm-%arrayidx2
1 : 4153812076 { -141155220 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 127 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 140578816 : BV:32
=memlabel-mem-esp_end
1 : 2020204543 : BV:32
=input.src.llvm-%arrayidx
1 : 4153812060 { -141155236 } : BV:32
=input.src.llvm-%arrayidx1
1 : 4287103500 { -7863796 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 132 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 4153812076 { -141155220 } : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 524 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 508 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4287230975 { -7736321 } : BV:32
=stack.size
1 : 1879625728 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4287102976 { -7864320 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4153939551 { -141027745 } : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1380822376
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 83
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 1024 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2600067068 { -1694900228 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 2770739808 { -1524227488 } : BV:32
=symbol.2
1 : 3843031040 { -451936256 } : BV:32
=dst_symbol_addr.1
1 : 2770739808 { -1524227488 } : BV:32
=dst_symbol_addr.2
1 : 3843031040 { -451936256 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2770739808 { -1524227488 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 256 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 256 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2600067068 { -1694900228 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2600067068 { -1694900228 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1523650560 : BV:32
=memlabel-mem-esp_end
1 : 2600067071 { -1694900225 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3843159039 { -451808257 } : BV:32
=stack.size
1 : 1076416512 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3843031040 { -451936256 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2770867807 { -1524099489 } : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
191146961
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 1040 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2600067068 { -1694900228 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 2770739808 { -1524227488 } : BV:32
=symbol.2
1 : 3843031040 { -451936256 } : BV:32
=dst_symbol_addr.1
1 : 2770739808 { -1524227488 } : BV:32
=dst_symbol_addr.2
1 : 3843031040 { -451936256 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2770739808 { -1524227488 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 260 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 260 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2600067068 { -1694900228 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2600067068 { -1694900228 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 3843032076 { -451935220 } : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 1036 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 2770740828 { -1524226468 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 1020 : BV:32
=input.src.llvm-%arrayidx2
1 : 2770740844 { -1524226452 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 255 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1523650560 : BV:32
=memlabel-mem-esp_end
1 : 2600067071 { -1694900225 } : BV:32
=input.src.llvm-%arrayidx
1 : 2770740828 { -1524226468 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3843032076 { -451935220 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 260 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 2770740844 { -1524226452 } : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 1036 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 1020 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3843159039 { -451808257 } : BV:32
=stack.size
1 : 1076416512 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3843031040 { -451936256 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2770867807 { -1524099489 } : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
191146961
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 84
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 2048 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4292825084 { -2142212 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4292827136 { -2140160 } : BV:32
=symbol.2
1 : 4293498896 { -1468400 } : BV:32
=dst_symbol_addr.1
1 : 4292827136 { -2140160 } : BV:32
=dst_symbol_addr.2
1 : 4293498896 { -1468400 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4292827136 { -2140160 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 512 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 512 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4292825084 { -2142212 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4292825084 { -2142212 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4292825087 { -2142209 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 4293626895 { -1340401 } : BV:32
=stack.size
1 : 4292825088 { -2142208 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4293498896 { -1468400 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4292955135 { -2012161 } : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
207450789
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 2064 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4292825084 { -2142212 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 4292827136 { -2140160 } : BV:32
=symbol.2
1 : 4293498896 { -1468400 } : BV:32
=dst_symbol_addr.1
1 : 4292827136 { -2140160 } : BV:32
=dst_symbol_addr.2
1 : 4293498896 { -1468400 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4292827136 { -2140160 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 516 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 516 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4292825084 { -2142212 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4292825084 { -2142212 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 4293500956 { -1466340 } : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 2060 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 4292829180 { -2138116 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 2044 : BV:32
=input.src.llvm-%arrayidx2
1 : 4292829196 { -2138100 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 511 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4292825087 { -2142209 } : BV:32
=input.src.llvm-%arrayidx
1 : 4292829180 { -2138116 } : BV:32
=input.src.llvm-%arrayidx1
1 : 4293500956 { -1466340 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 516 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 4292829196 { -2138100 } : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 2060 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 2044 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4293626895 { -1340401 } : BV:32
=stack.size
1 : 4292825088 { -2142208 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4293498896 { -1468400 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4292955135 { -2012161 } : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
207450789
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 85
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4096 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4290228220 { -4739076 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4290228224 { -4739072 } : BV:32
=symbol.2
1 : 4290633728 { -4333568 } : BV:32
=dst_symbol_addr.1
1 : 4290228224 { -4739072 } : BV:32
=dst_symbol_addr.2
1 : 4290633728 { -4333568 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4290228224 { -4739072 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1024 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1024 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4290228220 { -4739076 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4290228220 { -4739076 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4290228223 { -4739073 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 4290761727 { -4205569 } : BV:32
=stack.size
1 : 4290228224 { -4739072 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4290633728 { -4333568 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4290356223 { -4611073 } : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
663910265
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4112 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4290228220 { -4739076 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 4290228224 { -4739072 } : BV:32
=symbol.2
1 : 4290633728 { -4333568 } : BV:32
=dst_symbol_addr.1
1 : 4290228224 { -4739072 } : BV:32
=dst_symbol_addr.2
1 : 4290633728 { -4333568 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4290228224 { -4739072 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1028 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1028 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4290228220 { -4739076 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4290228220 { -4739076 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 4290637836 { -4329460 } : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 4108 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 4290232316 { -4734980 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 4092 : BV:32
=input.src.llvm-%arrayidx2
1 : 4290232332 { -4734964 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 1023 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4290228223 { -4739073 } : BV:32
=input.src.llvm-%arrayidx
1 : 4290232316 { -4734980 } : BV:32
=input.src.llvm-%arrayidx1
1 : 4290637836 { -4329460 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 1028 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 4290232332 { -4734964 } : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 4108 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 4092 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4290761727 { -4205569 } : BV:32
=stack.size
1 : 4290228224 { -4739072 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4290633728 { -4333568 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4290356223 { -4611073 } : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
663910265
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 86
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 8192 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1665261564 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3220578912 { -1074388384 } : BV:32
=symbol.2
1 : 3221749760 { -1073217536 } : BV:32
=dst_symbol_addr.1
1 : 3220578912 { -1074388384 } : BV:32
=dst_symbol_addr.2
1 : 3221749760 { -1073217536 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3220578912 { -1074388384 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 2048 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2048 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1665261564 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1665261564 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 593920 : BV:32
=memlabel-mem-esp_end
1 : 1665261567 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3221877759 { -1073089537 } : BV:32
=stack.size
1 : 1664667648 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221749760 { -1073217536 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3220706911 { -1074260385 } : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1564773630
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 8208 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1665261564 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 3220578912 { -1074388384 } : BV:32
=symbol.2
1 : 3221749760 { -1073217536 } : BV:32
=dst_symbol_addr.1
1 : 3220578912 { -1074388384 } : BV:32
=dst_symbol_addr.2
1 : 3221749760 { -1073217536 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3220578912 { -1074388384 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 2052 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2052 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1665261564 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1665261564 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 3221757964 { -1073209332 } : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 8204 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 3220587100 { -1074380196 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 8188 : BV:32
=input.src.llvm-%arrayidx2
1 : 3220587116 { -1074380180 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 2047 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 593920 : BV:32
=memlabel-mem-esp_end
1 : 1665261567 : BV:32
=input.src.llvm-%arrayidx
1 : 3220587100 { -1074380196 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3221757964 { -1073209332 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 2052 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 3220587116 { -1074380180 } : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 8204 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 8188 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221877759 { -1073089537 } : BV:32
=stack.size
1 : 1664667648 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221749760 { -1073217536 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3220706911 { -1074260385 } : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1564773630
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 87
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16384 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1665785852 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 2146837088 : BV:32
=symbol.2
1 : 2148007936 { -2146959360 } : BV:32
=dst_symbol_addr.1
1 : 2146837088 : BV:32
=dst_symbol_addr.2
1 : 2148007936 { -2146959360 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2146837088 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4096 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4096 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1665785852 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1665785852 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 69632 : BV:32
=memlabel-mem-esp_end
1 : 1665785855 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 2148135935 { -2146831361 } : BV:32
=stack.size
1 : 1665716224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2148007936 { -2146959360 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2146965087 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1099786528
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16400 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1665785852 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 2146837088 : BV:32
=symbol.2
1 : 2148007936 { -2146959360 } : BV:32
=dst_symbol_addr.1
1 : 2146837088 : BV:32
=dst_symbol_addr.2
1 : 2148007936 { -2146959360 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2146837088 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4100 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4100 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1665785852 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1665785852 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 2148024332 { -2146942964 } : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 16396 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 2146853468 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 16380 : BV:32
=input.src.llvm-%arrayidx2
1 : 2146853484 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 4095 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 69632 : BV:32
=memlabel-mem-esp_end
1 : 1665785855 : BV:32
=input.src.llvm-%arrayidx
1 : 2146853468 : BV:32
=input.src.llvm-%arrayidx1
1 : 2148024332 { -2146942964 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 4100 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 2146853484 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 16396 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 16380 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2148135935 { -2146831361 } : BV:32
=stack.size
1 : 1665716224 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2148007936 { -2146959360 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2146965087 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1099786528
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 88
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 32768 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 958496 : BV:32
=symbol.2
1 : 439296 : BV:32
=dst_symbol_addr.1
1 : 958496 : BV:32
=dst_symbol_addr.2
1 : 439296 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 958496 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8192 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8192 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1093632 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 567295 : BV:32
=stack.size
1 : 4293873664 { -1093632 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 439296 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1086495 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
826641402
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32784 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 958496 : BV:32
=symbol.2
1 : 439296 : BV:32
=dst_symbol_addr.1
1 : 958496 : BV:32
=dst_symbol_addr.2
1 : 439296 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 958496 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8196 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8196 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 472076 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 32780 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 991260 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 32764 : BV:32
=input.src.llvm-%arrayidx2
1 : 991276 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 8191 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1093632 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%arrayidx
1 : 991260 : BV:32
=input.src.llvm-%arrayidx1
1 : 472076 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 8196 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 991276 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 32780 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 32764 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 567295 : BV:32
=stack.size
1 : 4293873664 { -1093632 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 439296 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1086495 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
826641402
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 89
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 65536 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 968617980 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1182536288 : BV:32
=symbol.2
1 : 1954611200 : BV:32
=dst_symbol_addr.1
1 : 1182536288 : BV:32
=dst_symbol_addr.2
1 : 1954611200 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1182536288 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 16384 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16384 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 968617980 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 968617980 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 411115520 : BV:32
=memlabel-mem-esp_end
1 : 968617983 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 1954739199 : BV:32
=stack.size
1 : 557502464 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1954611200 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1182664287 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
303256490
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 65552 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 968617980 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 1182536288 : BV:32
=symbol.2
1 : 1954611200 : BV:32
=dst_symbol_addr.1
1 : 1182536288 : BV:32
=dst_symbol_addr.2
1 : 1954611200 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1182536288 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 16388 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16388 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 968617980 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 968617980 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 1954676748 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 65548 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 1182601820 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 65532 : BV:32
=input.src.llvm-%arrayidx2
1 : 1182601836 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 16383 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 411115520 : BV:32
=memlabel-mem-esp_end
1 : 968617983 : BV:32
=input.src.llvm-%arrayidx
1 : 1182601820 : BV:32
=input.src.llvm-%arrayidx1
1 : 1954676748 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 16388 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 1182601836 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 65548 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 65532 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1954739199 : BV:32
=stack.size
1 : 557502464 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1954611200 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1182664287 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
303256490
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 90
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127968 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1643773948 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 2820014688 { -1474952608 } : BV:32
=symbol.2
1 : 2954231808 { -1340735488 } : BV:32
=dst_symbol_addr.1
1 : 2820014688 { -1474952608 } : BV:32
=dst_symbol_addr.2
1 : 2954231808 { -1340735488 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2820014688 { -1474952608 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 31992 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31992 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1643773948 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1643773948 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-callee-save.0
1 : 0 : BV:32
=input.src.llvm-%hidden-reg
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1474916352 : BV:32
=memlabel-mem-esp_end
1 : 1643773951 : BV:32
=input.src.llvm-callee-save.1
1 : 0 : BV:32
=input.src.llvm-callee-save.2
1 : 0 : BV:32
=input.src.llvm-callee-save.3
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 2954359807 { -1340607489 } : BV:32
=stack.size
1 : 168857600 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2954231808 { -1340735488 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2820142687 { -1474824609 } : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
115862565
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1221.0 : MEMLABEL
14 : bvsub(8, 9) : BV:32
15 : bvmul(14, 9) : BV:32
16 : bvadd(7, 15) : BV:32
17 : bvadd(3, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : select(1, 13, 17, 18, 19) : BV:32
21 : mlvar.llvm.s1221.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : bvadd(22, 11) : BV:32
24 : select(1, 21, 23, 18, 19) : BV:32
25 : bvadd(20, 24) : BV:32
26 : store(1, 2, 12, 25, 18, 19) : ARRAY[BV:32 -> BV:8]
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvsub(5, 6) : BV:32
8 : bvmul(7, 6) : BV:32
9 : bvadd(4, 8) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvsub(6, 7) : BV:32
9 : bvmul(8, 7) : BV:32
10 : bvadd(5, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
4 : bvmul(3, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%sub
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsub(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1221.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvsub(8, 9) : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(7, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : mlvar.llvm.s1221.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvmul(8, 9) : BV:32
20 : bvadd(7, 19) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 17, 21, 14, 15) : BV:32
23 : bvadd(16, 22) : BV:32
=src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvsub(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : bvzero_ext(3, 5) : BV:64
8 : bvmul(6, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 5) : BV:32
11 : 0 : BV:32
12 : eq(10, 11) : BOOL
13 : 4 : INT
14 : isindexforsize(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 4 : INT
14 : islangaligned(12, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvsub(7, 8) : BV:32
10 : bvmul(9, 8) : BV:32
11 : bvadd(6, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : isgepoffset(12, 10) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((((  %sub = sub nsw i32 %i.0, 4, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %sub, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !23)))*(((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !23)*  %add = add nsw i32 %0, %1, !dbg !24)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !25)))*((((  store i32 %add, i32* %arrayidx2, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 4, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L6%1%1)*(L6%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L6%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : input.dst.exreg.2.0 : BV:128
21 : 127 : INT
22 : 96 : INT
23 : bvextract(20, 21, 22) : BV:32
24 : mlvar.dst.1 : MEMLABEL
25 : dst_symbol_addr.2 : BV:32
26 : bvadd(3, 25) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 24, 26, 27, 28) : BV:128
30 : bvextract(29, 21, 22) : BV:32
31 : bvadd(23, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(20, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(20, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(20, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.1 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(1, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(1, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1643773948 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.1
1 : 2820014688 { -1474952608 } : BV:32
=symbol.2
1 : 2954231808 { -1340735488 } : BV:32
=dst_symbol_addr.1
1 : 2820014688 { -1474952608 } : BV:32
=dst_symbol_addr.2
1 : 2954231808 { -1340735488 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2820014688 { -1474952608 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1643773948 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1643773948 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.3.total_offset
1 : 2954359788 { -1340607508 } : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.gepoffset.2.total_offset
1 : 127980 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.3.total_offset
1 : 2820142652 { -1474824644 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.2.total_offset
1 : 127964 : BV:32
=input.src.llvm-%arrayidx2
1 : 2820142668 { -1474824628 } : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%sub
1 : 31991 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1474916352 : BV:32
=memlabel-mem-esp_end
1 : 1643773951 : BV:32
=input.src.llvm-%arrayidx
1 : 2820142652 { -1474824644 } : BV:32
=input.src.llvm-%arrayidx1
1 : 2954359788 { -1340607508 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%inc
1 : 31996 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.3.total_offset
1 : 2820142668 { -1474824628 } : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.gepoffset.2.total_offset
1 : 127980 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%cd7b3b4d5c3e90ee3c762abcdf7574ac.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%5f6a8de6e090e8e0ac8d8c57e4fbc7.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%c129ba671dba9371631dcf6264b4dc38.intermediate.gepoffset.2.offset
1 : 127964 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2954359807 { -1340607489 } : BV:32
=stack.size
1 : 168857600 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2954231808 { -1340735488 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2820142687 { -1474824609 } : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=input.dst.exreg.2.0_127_96
1 : 0 : BV:32
=input.dst.exreg.2.0_31_0
1 : 0 : BV:32
=input.dst.exreg.2.0_95_64
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.0_63_32
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
115862565
=counter_example_end
=graph_with_ce done
=graph_with_guessing begin
=Invariant states
=Invariant state at node L0%0%1_L0%0%1:
=pc L0%0%1_L0%0%1 invariant_state
is_top 0
is_stable 1
=pc L0%0%1_L0%0%1 invariant_state done
=Invariant state at node Lfor.body%1%1_L2%1%0:
=pc Lfor.body%1%1_L2%1%0 invariant_state
is_top 0
is_stable 1
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 0
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 0 type arr
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 0 type arr expr_group_type ARR_EQ
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 0 type arr expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 0 type arr expr 1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 0 type arr done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 0 type arr pred 0
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BOOL
=RhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 0 type arr predicate_set done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr_group_type BV_EQ
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 0
1 : symbol.1 : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 1
1 : symbol.2 : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 2
1 : retaddr_const : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 3
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 4
1 : input.src.llvm-%i.0 : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 5
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 4294967280 { -16 } : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 7
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 8
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 4294967284 { -12 } : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 9
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 10
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 11
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 32000 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 12
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 8 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 13
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4294967292 { -4 } : BV:32
5 : 4 : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(3, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 14
1 : input.src.llvm-%i.0 : BV:32
2 : 2 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 32000 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 15
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 12 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 16
1 : input.src.llvm-%i.0 : BV:32
2 : 3 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 32000 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 17
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 32000 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 18
1 : input.dst.exreg.0.0 : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 19
1 : input.dst.exreg.0.6 : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 20
1 : input.dst.exreg.0.7 : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 21
1 : input.dst.exreg.0.3 : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 22
1 : input.dst.exreg.0.5 : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 23
1 : input.dst.exreg.0.4 : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 24
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 25
1 : input.dst.exreg.2.0 : BV:128
2 : 95 : INT
3 : 64 : INT
4 : bvextract(1, 2, 3) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 26
1 : input.dst.exreg.2.0 : BV:128
2 : 63 : INT
3 : 32 : INT
4 : bvextract(1, 2, 3) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 27
1 : input.dst.exreg.2.0 : BV:128
2 : 31 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 28
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 29
1 : input.dst.esp.L0%1%1 : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 30
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 16 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:128
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 31
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 16 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:128
7 : 63 : INT
8 : 32 : INT
9 : bvextract(6, 7, 8) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 32
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 16 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:128
7 : 95 : INT
8 : 64 : INT
9 : bvextract(6, 7, 8) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 33
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 16 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:128
7 : 127 : INT
8 : 96 : INT
9 : bvextract(6, 7, 8) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 0
=Comment
linear2-32-free_var_idx.29
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : input.dst.esp.L0%1%1 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.exreg.0.4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 1
=Comment
linear2-32-free_var_idx.28
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 2
=Comment
linear2-32-free_var_idx.27
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 4294967280 { -16 } : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=RhsExpr
1 : input.dst.exreg.2.0 : BV:128
2 : 31 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:32
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 3
=Comment
linear2-4-free_var_idx.1
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : 3 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:4
5 : bvneg(4) : BV:4
6 : symbol.1 : BV:32
7 : bvextract(6, 2, 3) : BV:4
8 : 12 { -4 } : BV:4
9 : bvmul(7, 8) : BV:4
10 : bvadd(5, 9) : BV:4
=RhsExpr
1 : 0 : BV:4
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 4
=Comment
linear1-2-free_var_idx.4
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:2
5 : bvneg(4) : BV:2
=RhsExpr
1 : 0 : BV:2
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 5
=Comment
linear2-32-free_var_idx.5
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : input.src.llvm-%i.0.phi.tmpvar : BV:32
3 : bvneg(2) : BV:32
4 : bvadd(1, 3) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 6
=Comment
linear2-32-free_var_idx.24
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4294967292 { -4 } : BV:32
5 : 4 : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(3, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=RhsExpr
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 7
=Comment
linear2-32-free_var_idx.11
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32000 : BV:32
6 : bvslt(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(1, 7) : BV:32
9 : bvneg(8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(1, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 8
=Comment
linear2-32-free_var_idx.14
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%i.0 : BV:32
3 : 2 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32000 : BV:32
6 : bvslt(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(1, 7) : BV:32
9 : bvneg(8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(1, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 9
=Comment
linear3-12-free_var_idx.23
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 4092 { -4 } : BV:12
2 : symbol.2 : BV:32
3 : 11 : INT
4 : 0 : INT
5 : bvextract(2, 3, 4) : BV:12
6 : 2048 { -2048 } : BV:12
7 : bvmul(5, 6) : BV:12
8 : symbol.1 : BV:32
9 : bvextract(8, 3, 4) : BV:12
10 : 768 : BV:12
11 : bvmul(9, 10) : BV:12
12 : bvadd(1, 7, 11) : BV:12
=RhsExpr
1 : input.dst.exreg.0.4 : BV:32
2 : 11 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:12
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 10
=Comment
linear2-32-free_var_idx.16
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%i.0 : BV:32
3 : 3 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32000 : BV:32
6 : bvslt(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(1, 7) : BV:32
9 : bvneg(8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(1, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 11
=Comment
linear1-4-free_var_idx.0
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : 3 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:4
5 : bvneg(4) : BV:4
=RhsExpr
1 : 0 : BV:4
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 12
=Comment
linear2-32-free_var_idx.18
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(1, 2) : BV:32
=RhsExpr
1 : input.dst.exreg.0.0 : BV:32
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 13
=Comment
linear1-32-free_var_idx.3
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BV:32
2 : 0 : BV:31
3 : input.src.llvm-%cmp : BOOL
4 : bool_to_bv(3) : BV:1
5 : bvconcat(2, 4) : BV:32
6 : bvneg(5) : BV:32
7 : bvadd(1, 6) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 14
=Comment
linear2-32-free_var_idx.25
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=RhsExpr
1 : input.dst.exreg.2.0 : BV:128
2 : 95 : INT
3 : 64 : INT
4 : bvextract(1, 2, 3) : BV:32
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 15
=Comment
linear2-32-free_var_idx.26
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 4294967284 { -12 } : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=RhsExpr
1 : input.dst.exreg.2.0 : BV:128
2 : 63 : INT
3 : 32 : INT
4 : bvextract(1, 2, 3) : BV:32
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv predicate_set done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 2
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 2 type ineq_loose
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 2 type ineq_loose expr_group_type BV_INEQ
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 2 type ineq_loose expr 0
1 : input.src.llvm-%i.0 : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 2 type ineq_loose done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 2 type ineq_loose pred 0
=Comment
ub-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 32768 : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 2 type ineq_loose pred 1
=Comment
lb-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 2 type ineq_loose pred 2
=Comment
ub-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 32768 : BV:32
3 : bvsle(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 2 type ineq_loose pred 3
=Comment
lb-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 2 type ineq_loose predicate_set done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 3
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 3 type ineq_loose
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 3 type ineq_loose expr_group_type BV_INEQ
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 3 type ineq_loose expr 0
1 : input.dst.exreg.0.0 : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 3 type ineq_loose done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 3 type ineq_loose pred 0
=Comment
lb-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvuge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 3 type ineq_loose pred 1
=Comment
ub-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 131072 : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 3 type ineq_loose pred 2
=Comment
ub-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 131072 : BV:32
3 : bvsle(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 3 type ineq_loose pred 3
=Comment
lb-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvsge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 3 type ineq_loose predicate_set done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini expr_group_type HOUDINI
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini expr 0
1 : dst_symbol_addr.1 : BV:32
2 : 16 : INT
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : ismemlabel(1, 2, 3) : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini expr 1
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini expr 2
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967288 { -8 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini expr 3
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini expr 4
1 : symbol.2 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.2.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini expr 5
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967284 { -12 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini expr 6
1 : symbol.2 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.2.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini expr 7
1 : symbol.2 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 8 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini expr 8
1 : symbol.1 : BV:32
2 : 4294967292 { -4 } : BV:32
3 : 4 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(1, 2, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini expr 9
1 : symbol.2 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 12 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini pred 0
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 12 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini pred 1
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : 4294967292 { -4 } : BV:32
3 : 4 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(1, 2, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini pred 2
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.2.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini pred 3
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967284 { -12 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini pred 4
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.2.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini pred 5
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini pred 6
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967288 { -8 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini pred 7
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini pred 8
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 8 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini pred 9
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : dst_symbol_addr.1 : BV:32
2 : 16 : INT
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : ismemlabel(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini predicate_set done
=pc Lfor.body%1%1_L2%1%0 invariant_state done
=Invariant state at node E0%0%1_E0%0%1:
=pc E0%0%1_E0%0%1 invariant_state
is_top 0
is_stable 1
=pc E0%0%1_E0%0%1 invariant_state done
=graph_with_guessing done
=corr_graph_done
